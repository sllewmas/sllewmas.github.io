{
  "desc": {
    "parameters": [
      {
        "type": "ParameterTypeNumber",
        "index": 0,
        "name": "wet_dry_mix",
        "paramId": "wet_dry_mix",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0.5,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s31",
        "constrainFunc": "param_06_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 1,
        "name": "attack",
        "paramId": "attack",
        "minimum": 0,
        "maximum": 5000,
        "exponent": 1,
        "steps": 0,
        "initialValue": 20,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "ms",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s35",
        "constrainFunc": "param_07_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 2,
        "name": "scatter",
        "paramId": "scatter",
        "minimum": 0,
        "maximum": 5000,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "ms",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s36",
        "constrainFunc": "param_08_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 3,
        "name": "grainDur",
        "paramId": "grainDur",
        "minimum": 0.1,
        "maximum": 5000,
        "exponent": 1,
        "steps": 0,
        "initialValue": 50,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "ms",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s37",
        "constrainFunc": "param_09_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 4,
        "name": "grainRate",
        "paramId": "grainRate",
        "minimum": 0,
        "maximum": 1000,
        "exponent": 1,
        "steps": 0,
        "initialValue": 20,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "hz",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s38",
        "constrainFunc": "param_10_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 5,
        "name": "traversal",
        "paramId": "traversal",
        "minimum": -800,
        "maximum": 800,
        "exponent": 1,
        "steps": 0,
        "initialValue": 100,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "%",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s39",
        "constrainFunc": "param_11_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 6,
        "name": "gain",
        "paramId": "gain",
        "minimum": -120,
        "maximum": 6,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "db",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s40",
        "constrainFunc": "param_12_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 7,
        "name": "decay",
        "paramId": "decay",
        "minimum": 0,
        "maximum": 5000,
        "exponent": 1,
        "steps": 0,
        "initialValue": 20,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "ms",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s34",
        "constrainFunc": "param_13_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 8,
        "name": "sustain",
        "paramId": "sustain",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0.8,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "amp",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s32",
        "constrainFunc": "param_14_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 9,
        "name": "release",
        "paramId": "release",
        "minimum": 0,
        "maximum": 5000,
        "exponent": 1,
        "steps": 0,
        "initialValue": 500,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "ms",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s33",
        "constrainFunc": "param_15_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 10,
        "name": "buffer",
        "paramId": "granular/buffer",
        "minimum": 0,
        "maximum": 8,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s04",
        "constrainFunc": "param_01_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 11,
        "name": "rate",
        "paramId": "granular/rate",
        "minimum": 0,
        "maximum": 1000,
        "exponent": 1,
        "steps": 0,
        "initialValue": 20,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "hz",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s01",
        "constrainFunc": "param_02_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 12,
        "name": "scatter",
        "paramId": "granular/scatter",
        "minimum": 0,
        "maximum": 220500,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s03",
        "constrainFunc": "param_03_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 13,
        "name": "duration",
        "paramId": "granular/duration",
        "minimum": 1,
        "maximum": 220500,
        "exponent": 1,
        "steps": 0,
        "initialValue": 2205,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s02",
        "constrainFunc": "param_04_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 14,
        "name": "wet_dry_mix",
        "paramId": "granular/wet_dry_mix",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0.75,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s05",
        "constrainFunc": "param_05_value_constrain"
      }
    ],
    "numParameters": 15,
    "numSignalInParameters": 0,
    "numSignalOutParameters": 0,
    "numInputChannels": 0,
    "numOutputChannels": 2,
    "numMidiInputPorts": 1,
    "numMidiOutputPorts": 0,
    "externalDataRefs": [
      {
        "id": "harp_riff",
        "file": "harp_riff.wav"
      },
      {
        "id": "jongly",
        "file": "jongly.wav"
      },
      {
        "id": "big",
        "file": "big.wav"
      },
      {
        "id": "usr_buff"
      }
    ],
    "patcherSerial": 0,
    "inports": [
      {
        "tag": "in1",
        "meta": ""
      }
    ],
    "outports": [
      {
        "tag": "buffer",
        "meta": ""
      },
      {
        "tag": "gain",
        "meta": ""
      },
      {
        "tag": "grainRate",
        "meta": ""
      },
      {
        "tag": "traversal",
        "meta": ""
      },
      {
        "tag": "wet_dry_mix",
        "meta": ""
      },
      {
        "tag": "scatter",
        "meta": ""
      },
      {
        "tag": "grainDur",
        "meta": ""
      }
    ],
    "inlets": [
      {
        "type": "event",
        "index": 1,
        "tag": "in1",
        "meta": ""
      },
      {
        "type": "midi"
      }
    ],
    "outlets": [
      {
        "type": "signal",
        "index": 1,
        "tag": "out1",
        "meta": ""
      },
      {
        "type": "signal",
        "index": 2,
        "tag": "out2",
        "meta": ""
      }
    ],
    "paramConversion": {
      "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
      "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 0:\n    case 8:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n            let normalizedValue = (value - 0) / (1 - 0);\n            return normalizedValue;\n        }\n    case 4:\n        {\n            value = (value < 0 ? 0 : (value > 1000 ? 1000 : value));\n            let normalizedValue = (value - 0) / (1000 - 0);\n            return normalizedValue;\n        }\n    case 1:\n    case 2:\n    case 7:\n    case 9:\n        {\n            value = (value < 0 ? 0 : (value > 5000 ? 5000 : value));\n            let normalizedValue = (value - 0) / (5000 - 0);\n            return normalizedValue;\n        }\n    case 3:\n        {\n            value = (value < 0.1 ? 0.1 : (value > 5000 ? 5000 : value));\n            let normalizedValue = (value - 0.1) / (5000 - 0.1);\n            return normalizedValue;\n        }\n    case 5:\n        {\n            value = (value < -800 ? -800 : (value > 800 ? 800 : value));\n            let normalizedValue = (value - -800) / (800 - -800);\n            return normalizedValue;\n        }\n    case 6:\n        {\n            value = (value < -120 ? -120 : (value > 6 ? 6 : value));\n            let normalizedValue = (value - -120) / (6 - -120);\n            return normalizedValue;\n        }\n    default:\n        index -= 10;\n\n        if (index < this.p_02[0].getNumParameters()) {\n            {\n                return this.p_02[0].convertToNormalizedParameterValue(index, value);\n            }\n        }\n\n        return value;\n    }\n}",
      "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 0:\n    case 8:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (1 - 0);\n            }\n        }\n    case 4:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (1000 - 0);\n            }\n        }\n    case 1:\n    case 2:\n    case 7:\n    case 9:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (5000 - 0);\n            }\n        }\n    case 3:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0.1 + value * (5000 - 0.1);\n            }\n        }\n    case 5:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return -800 + value * (800 - -800);\n            }\n        }\n    case 6:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return -120 + value * (6 - -120);\n            }\n        }\n    default:\n        index -= 10;\n\n        if (index < this.p_02[0].getNumParameters()) {\n            {\n                return this.p_02[0].convertFromNormalizedParameterValue(index, value);\n            }\n        }\n\n        return value;\n    }\n}",
      "getNumParameters": "function getNumParameters() {\n    return 10 + this.p_02[0].getNumParameters();\n}",
      "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    case 0:\n        {\n            v = (v > 1 ? 1 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 1:\n        {\n            v = (v > 5000 ? 5000 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 2:\n        {\n            v = (v > 5000 ? 5000 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 3:\n        {\n            v = (v > 5000 ? 5000 : (v < 0.1 ? 0.1 : v));\n            return v;\n        }\n    case 4:\n        {\n            v = (v > 1000 ? 1000 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 5:\n        {\n            v = (v > 800 ? 800 : (v < -800 ? -800 : v));\n            return v;\n        }\n    case 6:\n        {\n            v = (v > 6 ? 6 : (v < -120 ? -120 : v));\n            return v;\n        }\n    case 7:\n        {\n            v = (v > 5000 ? 5000 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 8:\n        {\n            v = (v > 1 ? 1 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 9:\n        {\n            v = (v > 5000 ? 5000 : (v < 0 ? 0 : v));\n            return v;\n        }\n    default:\n        index -= 10;\n\n        if (index < this.p_02[0].getNumParameters()) {\n            {\n                return this.p_02[0].constrainParameterValue(index, value);\n            }\n        }\n\n        return value;\n    }\n}",
      "subpatches": {
        "p_02": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 4:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n            let normalizedValue = (value - 0) / (1 - 0);\n            return normalizedValue;\n        }\n    case 0:\n        {\n            value = (value < 0 ? 0 : (value > 8 ? 8 : value));\n            let normalizedValue = (value - 0) / (8 - 0);\n            return normalizedValue;\n        }\n    case 1:\n        {\n            value = (value < 0 ? 0 : (value > 1000 ? 1000 : value));\n            let normalizedValue = (value - 0) / (1000 - 0);\n            return normalizedValue;\n        }\n    case 2:\n        {\n            value = (value < 0 ? 0 : (value > 220500 ? 220500 : value));\n            let normalizedValue = (value - 0) / (220500 - 0);\n            return normalizedValue;\n        }\n    case 3:\n        {\n            value = (value < 1 ? 1 : (value > 220500 ? 220500 : value));\n            let normalizedValue = (value - 1) / (220500 - 1);\n            return normalizedValue;\n        }\n    default:\n        index -= 5;\n\n        if (index < this.p_01.getNumParameters())\n            return this.p_01.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 4:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (1 - 0);\n            }\n        }\n    case 0:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (8 - 0);\n            }\n        }\n    case 1:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (1000 - 0);\n            }\n        }\n    case 2:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (220500 - 0);\n            }\n        }\n    case 3:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 1 + value * (220500 - 1);\n            }\n        }\n    default:\n        index -= 5;\n\n        if (index < this.p_01.getNumParameters())\n            return this.p_01.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 5 + this.p_01.getNumParameters();\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    case 0:\n        {\n            v = (v > 8 ? 8 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 1:\n        {\n            v = (v > 1000 ? 1000 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 2:\n        {\n            v = (v > 220500 ? 220500 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 3:\n        {\n            v = (v > 220500 ? 220500 : (v < 1 ? 1 : v));\n            return v;\n        }\n    case 4:\n        {\n            v = (v > 1 ? 1 : (v < 0 ? 0 : v));\n            return v;\n        }\n    default:\n        index -= 5;\n\n        if (index < this.p_01.getNumParameters())\n            return this.p_01.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
          "subpatches": {
            "p_01": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
              "subpatches": {},
              "isPolyphonic": false
            }
          },
          "isPolyphonic": true
        }
      },
      "isPolyphonic": false
    },
    "rnboVersion": "0.17.0",
    "meta": {
      "architecture": "x64",
      "maxversion": "8.3.1",
      "filename": "Granular_Synth_RNBO.maxpat"
    },
    "options": {
      "classname": "rnbomatic",
      "minifyOutput": true
    }
  },
  "src": "class RNBOSubpatcher_102{constructor(){this.dspexpr_01_in1=0,this.dspexpr_01_in2=0,this.cycle_tilde_01_frequency=0,this.cycle_tilde_01_phase_offset=0,this.ip_01_value=0,this.ip_01_impulse=0,this.expr_01_in1=0,this.expr_01_in2=.25,this.expr_01_out1=0,this.dspexpr_02_in1=0,this.dspexpr_02_in2=0,this.dspexpr_03_in1=0,this.dspexpr_03_in2=0,this.dspexpr_04_in1=0,this.dspexpr_04_in2=0,this.ip_02_value=0,this.ip_02_impulse=0,this.cycle_tilde_02_frequency=0,this.cycle_tilde_02_phase_offset=0,this.expr_02_in1=0,this.expr_02_in2=4,this.expr_02_out1=0,this._currentTime=0,this.audioProcessSampleCount=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.signals=new Array(4),this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.cycle_tilde_01_buffer=0,this.cycle_tilde_01_wrap=0,this.cycle_tilde_01_phasei=0,this.cycle_tilde_01_f2i=0,this.cycle_tilde_01_ph_currentPhase=0,this.cycle_tilde_01_ph_conv=0,this.cycle_tilde_01_setupDone=!1,this.ip_01_lastIndex=0,this.ip_01_lastValue=0,this.ip_01_resetCount=0,this.ip_01_sigbuf=0,this.ip_01_setupDone=!1,this.ip_02_lastIndex=0,this.ip_02_lastValue=0,this.ip_02_resetCount=0,this.ip_02_sigbuf=0,this.ip_02_setupDone=!1,this.cycle_tilde_02_buffer=0,this.cycle_tilde_02_wrap=0,this.cycle_tilde_02_phasei=0,this.cycle_tilde_02_f2i=0,this.cycle_tilde_02_ph_currentPhase=0,this.cycle_tilde_02_ph_conv=0,this.cycle_tilde_02_setupDone=!1,this.stackprotect_count=0,this._voiceIndex=0,this._noteNumber=0,this.isMuted=1,this.parameterOffset=0}samplerate(){return this.sr}eventinlet_01_out1_bang_bang(){this.expr_02_in1_bang()}eventinlet_01_out1_list_set(t){{let a=convertListToNumber(t);this.expr_02_in1_set(a)}}getParameterIndexForID(t){return RNBO_UNUSED(t),INVALID_INDEX}getNumMidiInputPorts(){return 0}processMidiEvent(t,a,r,s){}getNumMidiOutputPorts(){return 0}process(t,a,r,s,e){this.vs=e,this.updateTime(this.getEngine().getCurrentTime());var _=s>=1&&r[0]?r[0]:this.dummyBuffer,i=s>=2&&r[1]?r[1]:this.dummyBuffer,n=a>=1&&t[0]?t[0]:this.zeroBuffer,l=a>=2&&t[1]?t[1]:this.zeroBuffer,u=a>=3&&t[2]?t[2]:this.zeroBuffer,h=a>=4&&t[3]?t[3]:this.zeroBuffer;this.ip_01_perform(this.signals[0],e),this.cycle_tilde_01_perform(this.signals[0],this.cycle_tilde_01_phase_offset,this.signals[1],this.dummyBuffer,e),this.dspexpr_01_perform(n,this.signals[1],this.signals[0],e),this.dspexpr_02_perform(l,this.signals[1],this.signals[2],e),this.ip_02_perform(this.signals[1],e),this.cycle_tilde_02_perform(this.signals[1],this.cycle_tilde_02_phase_offset,this.signals[3],this.dummyBuffer,e),this.dspexpr_03_perform(u,this.signals[3],this.signals[1],e),this.signaladder_03_perform(this.signals[1],this.signals[0],_,e),this.dspexpr_04_perform(h,this.signals[3],this.signals[0],e),this.signaladder_04_perform(this.signals[0],this.signals[2],i,e),this.stackprotect_perform(e),this.audioProcessSampleCount+=this.vs}prepareToProcess(t,a,r){if(this.maxvs<a||!this.didAllocateSignals){var s;for(s=0;s<4;s++)this.signals[s]=resizeSignal(this.signals[s],this.maxvs,a);this.ip_01_sigbuf=resizeSignal(this.ip_01_sigbuf,this.maxvs,a),this.ip_02_sigbuf=resizeSignal(this.ip_02_sigbuf,this.maxvs,a),this.zeroBuffer=resizeSignal(this.zeroBuffer,this.maxvs,a),this.dummyBuffer=resizeSignal(this.dummyBuffer,this.maxvs,a),this.didAllocateSignals=!0}var e=t!=this.sr,_=a!=this.maxvs,i=e||_||r;(e||_)&&(this.vs=a,this.maxvs=a,this.sr=t,this.invsr=1/t),this.ip_01_dspsetup(i),this.cycle_tilde_01_dspsetup(i),this.ip_02_dspsetup(i),this.cycle_tilde_02_dspsetup(i),e&&this.onSampleRateChanged(t)}msToSamps(t,a){return t*a*.001}sampsToMs(t){return t*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 4}getNumOutputChannels(){return 2}setProbingTarget(t){this.setProbingIndex(-1)}setProbingIndex(t){}getProbingChannels(t){return RNBO_UNUSED(t),0}initializeObjects(){this.ip_01_init(),this.ip_02_init()}setVoiceIndex(t){this._voiceIndex=t}setNoteNumber(t){this._noteNumber=t}getIsMuted(){return this.isMuted}setIsMuted(t){this.isMuted=t}getPatcherSerial(){return 0}getState(t){}setState(){}getPreset(t){}processTempoEvent(t,a){}processTransportEvent(t,a){}processBeatTimeEvent(t,a){}onSampleRateChanged(t){}processTimeSignatureEvent(t,a,r){}setParameterValue(t,a,r){}processParameterEvent(t,a,r){this.setParameterValue(t,a,r)}processNormalizedParameterEvent(t,a,r){this.setParameterValueNormalized(t,a,r)}getParameterValue(t){return 0}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(t){return\"bogus\"}getParameterId(t){return\"bogus\"}getParameterInfo(t,a){}sendParameter(t){this.getPatcher().sendParameter(t+this.parameterOffset)}setParameterOffset(t){this.parameterOffset=t}applyStepsToNormalizedParameterValue(t,a){if(1==a)t>0&&(t=1);else{let r=1/(a-1);t=1*rnbo_fround(t/r*1/1)*r}return t}convertToNormalizedParameterValue(t,a){return a}convertFromNormalizedParameterValue(t,a){return a=a<0?0:a>1?1:a}constrainParameterValue(t,a){return a}scheduleParamInit(t,a){this.getPatcher().scheduleParamInit(t+this.parameterOffset,a)}processClockEvent(t,a,r,s){}processOutletAtCurrentTime(t,a,r){}processOutletEvent(t,a,r,s){this.updateTime(s),this.processOutletAtCurrentTime(t,a,r)}sendOutlet(t,a){this.getEngine().sendOutlet(this,t,a)}processNumMessage(t,a,r,s){}processListMessage(t,a,r,s){}processBangMessage(t,a,r){}resolveTag(t){return null}startup(){}getDataRef(t){return null}getNumDataRefs(){return 0}fillDataRef(t,a){}processDataViewUpdate(t,a){this.updateTime(a),0==t&&(this.cycle_tilde_01_buffer=new Float64Buffer(this.getPatcher().getPatcher().RNBODefaultSinus),this.cycle_tilde_01_bufferUpdated(),this.cycle_tilde_02_buffer=new Float64Buffer(this.getPatcher().getPatcher().RNBODefaultSinus),this.cycle_tilde_02_bufferUpdated())}allocateDataRefs(){this.cycle_tilde_01_buffer.requestSize(16384,1),this.cycle_tilde_01_buffer.setSampleRate(this.sr),this.cycle_tilde_02_buffer.requestSize(16384,1),this.cycle_tilde_02_buffer.setSampleRate(this.sr),this.cycle_tilde_01_buffer=this.cycle_tilde_01_buffer.allocateIfNeeded(),this.cycle_tilde_02_buffer=this.cycle_tilde_02_buffer.allocateIfNeeded()}initialize(){this.assign_defaults(),this.setState(),this.cycle_tilde_01_buffer=new Float64Buffer(this.getPatcher().getPatcher().RNBODefaultSinus),this.cycle_tilde_02_buffer=new Float64Buffer(this.getPatcher().getPatcher().RNBODefaultSinus)}ip_02_value_set(t){this.ip_02_value=t,this.ip_02_fillSigBuf(),this.ip_02_lastValue=t}ip_01_value_set(t){this.ip_01_value=t,this.ip_01_fillSigBuf(),this.ip_01_lastValue=t}expr_01_out1_set(t){this.expr_01_out1=t,this.ip_01_value_set(this.expr_01_out1)}expr_01_in1_set(t){this.expr_01_in1=t,this.expr_01_out1_set(this.expr_01_in1-this.expr_01_in2)}expr_02_out1_set(t){this.expr_02_out1=t,this.ip_02_value_set(this.expr_02_out1),this.expr_01_in1_set(this.expr_02_out1)}expr_02_in1_set(t){this.expr_02_in1=t,this.expr_02_out1_set(0==this.expr_02_in2||0==this.expr_02_in2?0:this.expr_02_in1/this.expr_02_in2)}eventinlet_01_out1_number_set(t){this.expr_02_in1_set(t)}expr_02_in1_bang(){this.expr_02_out1_set(0==this.expr_02_in2||0==this.expr_02_in2?0:this.expr_02_in1/this.expr_02_in2)}ip_01_perform(t,a){for(var r=this.ip_01_sigbuf,s=this.ip_01_lastValue,e=this.ip_01_lastIndex,_=0;_<a;_++)t[_]=_>=e?s:r[_];e=0,this.ip_01_lastIndex=e}cycle_tilde_01_perform(t,a,r,s,e){var _;for(RNBO_UNUSED(a),_=0;_<e;_++){let a;a=uint32_trunc(4294967296*t[_]);let e=uint32_rshift(a,18),i=381471181759574e-20*(262143&a),n=this.cycle_tilde_01_buffer[e],l=n+i*(this.cycle_tilde_01_buffer[e+1&16383]-n);r[_]=l,s[_]=2.3283064365386963e-10*a;continue}}dspexpr_01_perform(t,a,r,s){var e;for(e=0;e<s;e++)r[e]=t[e]*a[e]}dspexpr_02_perform(t,a,r,s){var e;for(e=0;e<s;e++)r[e]=t[e]*a[e]}ip_02_perform(t,a){for(var r=this.ip_02_sigbuf,s=this.ip_02_lastValue,e=this.ip_02_lastIndex,_=0;_<a;_++)t[_]=_>=e?s:r[_];e=0,this.ip_02_lastIndex=e}cycle_tilde_02_perform(t,a,r,s,e){var _;for(RNBO_UNUSED(a),_=0;_<e;_++){let a;a=uint32_trunc(4294967296*t[_]);let e=uint32_rshift(a,18),i=381471181759574e-20*(262143&a),n=this.cycle_tilde_02_buffer[e],l=n+i*(this.cycle_tilde_02_buffer[e+1&16383]-n);r[_]=l,s[_]=2.3283064365386963e-10*a;continue}}dspexpr_03_perform(t,a,r,s){var e;for(e=0;e<s;e++)r[e]=t[e]*a[e]}signaladder_03_perform(t,a,r,s){var e;for(e=0;e<s;e++)r[e]=t[e]+a[e]}dspexpr_04_perform(t,a,r,s){var e;for(e=0;e<s;e++)r[e]=t[e]*a[e]}signaladder_04_perform(t,a,r,s){var e;for(e=0;e<s;e++)r[e]=t[e]+a[e]}stackprotect_perform(t){RNBO_UNUSED(t);this.stackprotect_count;this.stackprotect_count=0}cycle_tilde_01_ph_next(t,a){a>=0&&(this.cycle_tilde_01_ph_currentPhase=a);const r=t*this.cycle_tilde_01_ph_conv;this.cycle_tilde_01_ph_currentPhase<0&&(this.cycle_tilde_01_ph_currentPhase=1+this.cycle_tilde_01_ph_currentPhase),this.cycle_tilde_01_ph_currentPhase>1&&(this.cycle_tilde_01_ph_currentPhase=this.cycle_tilde_01_ph_currentPhase-1);var s=this.cycle_tilde_01_ph_currentPhase;return this.cycle_tilde_01_ph_currentPhase+=r,s}cycle_tilde_01_ph_reset(){this.cycle_tilde_01_ph_currentPhase=0}cycle_tilde_01_ph_dspsetup(){this.cycle_tilde_01_ph_conv=1/this.sr}cycle_tilde_01_dspsetup(t){this.cycle_tilde_01_setupDone&&!t||(this.cycle_tilde_01_phasei=0,this.cycle_tilde_01_f2i=4294967296/this.samplerate(),this.cycle_tilde_01_wrap=this.cycle_tilde_01_buffer.getSize()-1,this.cycle_tilde_01_setupDone=!0,this.cycle_tilde_01_ph_dspsetup())}cycle_tilde_01_bufferUpdated(){this.cycle_tilde_01_wrap=this.cycle_tilde_01_buffer.getSize()-1}ip_01_init(){this.ip_01_lastValue=this.ip_01_value}ip_01_fillSigBuf(){if(this.ip_01_sigbuf){var t=this.sampleOffsetIntoNextAudioBuffer;t>=this.vs&&(t=this.vs-1);for(var a=this.ip_01_lastIndex;a<t;a++)this.ip_01_resetCount>0?(this.ip_01_sigbuf[a]=1,this.ip_01_resetCount--):this.ip_01_sigbuf[a]=this.ip_01_lastValue;this.ip_01_lastIndex=t}}ip_01_dspsetup(t){this.ip_01_setupDone&&!t||(this.ip_01_lastIndex=0,this.ip_01_setupDone=!0)}ip_02_init(){this.ip_02_lastValue=this.ip_02_value}ip_02_fillSigBuf(){if(this.ip_02_sigbuf){var t=this.sampleOffsetIntoNextAudioBuffer;t>=this.vs&&(t=this.vs-1);for(var a=this.ip_02_lastIndex;a<t;a++)this.ip_02_resetCount>0?(this.ip_02_sigbuf[a]=1,this.ip_02_resetCount--):this.ip_02_sigbuf[a]=this.ip_02_lastValue;this.ip_02_lastIndex=t}}ip_02_dspsetup(t){this.ip_02_setupDone&&!t||(this.ip_02_lastIndex=0,this.ip_02_setupDone=!0)}cycle_tilde_02_ph_next(t,a){a>=0&&(this.cycle_tilde_02_ph_currentPhase=a);const r=t*this.cycle_tilde_02_ph_conv;this.cycle_tilde_02_ph_currentPhase<0&&(this.cycle_tilde_02_ph_currentPhase=1+this.cycle_tilde_02_ph_currentPhase),this.cycle_tilde_02_ph_currentPhase>1&&(this.cycle_tilde_02_ph_currentPhase=this.cycle_tilde_02_ph_currentPhase-1);var s=this.cycle_tilde_02_ph_currentPhase;return this.cycle_tilde_02_ph_currentPhase+=r,s}cycle_tilde_02_ph_reset(){this.cycle_tilde_02_ph_currentPhase=0}cycle_tilde_02_ph_dspsetup(){this.cycle_tilde_02_ph_conv=1/this.sr}cycle_tilde_02_dspsetup(t){this.cycle_tilde_02_setupDone&&!t||(this.cycle_tilde_02_phasei=0,this.cycle_tilde_02_f2i=4294967296/this.samplerate(),this.cycle_tilde_02_wrap=this.cycle_tilde_02_buffer.getSize()-1,this.cycle_tilde_02_setupDone=!0,this.cycle_tilde_02_ph_dspsetup())}cycle_tilde_02_bufferUpdated(){this.cycle_tilde_02_wrap=this.cycle_tilde_02_buffer.getSize()-1}stackprotect_check(){return this.stackprotect_count++,this.stackprotect_count>128&&(console.log(\"STACK OVERFLOW DETECTED - stopped processing branch !\"),!0)}updateTime(t){this._currentTime=t,this.sampleOffsetIntoNextAudioBuffer=rnbo_fround(this.msToSamps(t-this.getEngine().getCurrentTime(),this.sr)),this.sampleOffsetIntoNextAudioBuffer>=this.vs&&(this.sampleOffsetIntoNextAudioBuffer=this.vs-1),this.sampleOffsetIntoNextAudioBuffer<0&&(this.sampleOffsetIntoNextAudioBuffer=0)}assign_defaults(){}setEngineAndPatcher(t,a){this._engineInterface=t,this._parentPatcher=a}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOSubpatcher_103{constructor(){this.param_01_value=0,this.notein_01_channel=0,this.p_01_target=0,this.select_01_test1=1,this.floatnum_01_input_number=0,this.floatnum_01_value=0,this.expr_03_in1=0,this.expr_03_in2=0,this.expr_03_out1=0,this.phasor_01_freq=8,this.dspexpr_05_in1=0,this.dspexpr_05_in2=0,this.dspexpr_06_in1=0,this.dspexpr_06_in2=.5,this.granulator_01_start=0,this.granulator_01_length=2205,this.granulator_01_rate=1,this.granulator_01_bchan=0,this.granulator_01_limit=128,this.granulator_01_panpos=.5,this.gate_01_onoff=1,this.gate_01_out1_number=0,this.gate_01_out1_list=[],this.param_02_value=20,this.dspexpr_07_in1=0,this.dspexpr_07_in2=0,this.dspexpr_08_in1=0,this.dspexpr_08_in2=0,this.expr_04_in1=0,this.expr_04_in2=127,this.expr_04_out1=0,this.adsr_01_trigger=0,this.adsr_01_attack=20,this.adsr_01_decay=20,this.adsr_01_sustain=.8,this.adsr_01_release=100,this.dspexpr_09_in1=0,this.dspexpr_09_in2=4410,this.unpack_01_out1=0,this.unpack_01_out2=0,this.unpack_01_out3=0,this.unpack_01_out4=0,this.param_03_value=0,this.wave_01_phase=0,this.wave_01_start=0,this.wave_01_end=-1,this.wave_01_offset=0,this.param_04_value=2205,this.ip_03_value=0,this.ip_03_impulse=0,this.gen_01_in1=0,this.gen_01_in2=0,this.param_05_value=.75,this.ip_04_value=0,this.ip_04_impulse=0,this.dspexpr_10_in1=0,this._currentTime=0,this.audioProcessSampleCount=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.signals=new Array(9),this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.param_01_lastValue=0,this.notein_01_status=0,this.notein_01_byte1=-1,this.notein_01_inchan=0,this.floatnum_01_stored=0,this.phasor_01_sigbuf=0,this.phasor_01_lastLockedPhase=0,this.phasor_01_conv=0,this.phasor_01_ph_currentPhase=0,this.phasor_01_ph_conv=0,this.phasor_01_setupDone=!1,this.granulator_01_buffer=0,this.granulator_01_grainPan=Array(32).fill(0).map(t=>Array(2).fill(0)),this.granulator_01_startMul=1,this.granulator_01_lengthMul=1,this.granulator_01_limitLast=0,this.granulator_01_edgedetect_active=!1,this.granulator_01_grains1_sampleOffset=0,this.granulator_01_grains1_curRate=1,this.granulator_01_grains1_curStart=0,this.granulator_01_grains1_curLen=1,this.granulator_01_grains1_active=!1,this.granulator_01_grains1_backwards=!1,this.granulator_01_grains2_sampleOffset=0,this.granulator_01_grains2_curRate=1,this.granulator_01_grains2_curStart=0,this.granulator_01_grains2_curLen=1,this.granulator_01_grains2_active=!1,this.granulator_01_grains2_backwards=!1,this.granulator_01_grains3_sampleOffset=0,this.granulator_01_grains3_curRate=1,this.granulator_01_grains3_curStart=0,this.granulator_01_grains3_curLen=1,this.granulator_01_grains3_active=!1,this.granulator_01_grains3_backwards=!1,this.granulator_01_grains4_sampleOffset=0,this.granulator_01_grains4_curRate=1,this.granulator_01_grains4_curStart=0,this.granulator_01_grains4_curLen=1,this.granulator_01_grains4_active=!1,this.granulator_01_grains4_backwards=!1,this.granulator_01_grains5_sampleOffset=0,this.granulator_01_grains5_curRate=1,this.granulator_01_grains5_curStart=0,this.granulator_01_grains5_curLen=1,this.granulator_01_grains5_active=!1,this.granulator_01_grains5_backwards=!1,this.granulator_01_grains6_sampleOffset=0,this.granulator_01_grains6_curRate=1,this.granulator_01_grains6_curStart=0,this.granulator_01_grains6_curLen=1,this.granulator_01_grains6_active=!1,this.granulator_01_grains6_backwards=!1,this.granulator_01_grains7_sampleOffset=0,this.granulator_01_grains7_curRate=1,this.granulator_01_grains7_curStart=0,this.granulator_01_grains7_curLen=1,this.granulator_01_grains7_active=!1,this.granulator_01_grains7_backwards=!1,this.granulator_01_grains8_sampleOffset=0,this.granulator_01_grains8_curRate=1,this.granulator_01_grains8_curStart=0,this.granulator_01_grains8_curLen=1,this.granulator_01_grains8_active=!1,this.granulator_01_grains8_backwards=!1,this.granulator_01_grains9_sampleOffset=0,this.granulator_01_grains9_curRate=1,this.granulator_01_grains9_curStart=0,this.granulator_01_grains9_curLen=1,this.granulator_01_grains9_active=!1,this.granulator_01_grains9_backwards=!1,this.granulator_01_grains10_sampleOffset=0,this.granulator_01_grains10_curRate=1,this.granulator_01_grains10_curStart=0,this.granulator_01_grains10_curLen=1,this.granulator_01_grains10_active=!1,this.granulator_01_grains10_backwards=!1,this.granulator_01_grains11_sampleOffset=0,this.granulator_01_grains11_curRate=1,this.granulator_01_grains11_curStart=0,this.granulator_01_grains11_curLen=1,this.granulator_01_grains11_active=!1,this.granulator_01_grains11_backwards=!1,this.granulator_01_grains12_sampleOffset=0,this.granulator_01_grains12_curRate=1,this.granulator_01_grains12_curStart=0,this.granulator_01_grains12_curLen=1,this.granulator_01_grains12_active=!1,this.granulator_01_grains12_backwards=!1,this.granulator_01_grains13_sampleOffset=0,this.granulator_01_grains13_curRate=1,this.granulator_01_grains13_curStart=0,this.granulator_01_grains13_curLen=1,this.granulator_01_grains13_active=!1,this.granulator_01_grains13_backwards=!1,this.granulator_01_grains14_sampleOffset=0,this.granulator_01_grains14_curRate=1,this.granulator_01_grains14_curStart=0,this.granulator_01_grains14_curLen=1,this.granulator_01_grains14_active=!1,this.granulator_01_grains14_backwards=!1,this.granulator_01_grains15_sampleOffset=0,this.granulator_01_grains15_curRate=1,this.granulator_01_grains15_curStart=0,this.granulator_01_grains15_curLen=1,this.granulator_01_grains15_active=!1,this.granulator_01_grains15_backwards=!1,this.granulator_01_grains16_sampleOffset=0,this.granulator_01_grains16_curRate=1,this.granulator_01_grains16_curStart=0,this.granulator_01_grains16_curLen=1,this.granulator_01_grains16_active=!1,this.granulator_01_grains16_backwards=!1,this.granulator_01_grains17_sampleOffset=0,this.granulator_01_grains17_curRate=1,this.granulator_01_grains17_curStart=0,this.granulator_01_grains17_curLen=1,this.granulator_01_grains17_active=!1,this.granulator_01_grains17_backwards=!1,this.granulator_01_grains18_sampleOffset=0,this.granulator_01_grains18_curRate=1,this.granulator_01_grains18_curStart=0,this.granulator_01_grains18_curLen=1,this.granulator_01_grains18_active=!1,this.granulator_01_grains18_backwards=!1,this.granulator_01_grains19_sampleOffset=0,this.granulator_01_grains19_curRate=1,this.granulator_01_grains19_curStart=0,this.granulator_01_grains19_curLen=1,this.granulator_01_grains19_active=!1,this.granulator_01_grains19_backwards=!1,this.granulator_01_grains20_sampleOffset=0,this.granulator_01_grains20_curRate=1,this.granulator_01_grains20_curStart=0,this.granulator_01_grains20_curLen=1,this.granulator_01_grains20_active=!1,this.granulator_01_grains20_backwards=!1,this.granulator_01_grains21_sampleOffset=0,this.granulator_01_grains21_curRate=1,this.granulator_01_grains21_curStart=0,this.granulator_01_grains21_curLen=1,this.granulator_01_grains21_active=!1,this.granulator_01_grains21_backwards=!1,this.granulator_01_grains22_sampleOffset=0,this.granulator_01_grains22_curRate=1,this.granulator_01_grains22_curStart=0,this.granulator_01_grains22_curLen=1,this.granulator_01_grains22_active=!1,this.granulator_01_grains22_backwards=!1,this.granulator_01_grains23_sampleOffset=0,this.granulator_01_grains23_curRate=1,this.granulator_01_grains23_curStart=0,this.granulator_01_grains23_curLen=1,this.granulator_01_grains23_active=!1,this.granulator_01_grains23_backwards=!1,this.granulator_01_grains24_sampleOffset=0,this.granulator_01_grains24_curRate=1,this.granulator_01_grains24_curStart=0,this.granulator_01_grains24_curLen=1,this.granulator_01_grains24_active=!1,this.granulator_01_grains24_backwards=!1,this.granulator_01_grains25_sampleOffset=0,this.granulator_01_grains25_curRate=1,this.granulator_01_grains25_curStart=0,this.granulator_01_grains25_curLen=1,this.granulator_01_grains25_active=!1,this.granulator_01_grains25_backwards=!1,this.granulator_01_grains26_sampleOffset=0,this.granulator_01_grains26_curRate=1,this.granulator_01_grains26_curStart=0,this.granulator_01_grains26_curLen=1,this.granulator_01_grains26_active=!1,this.granulator_01_grains26_backwards=!1,this.granulator_01_grains27_sampleOffset=0,this.granulator_01_grains27_curRate=1,this.granulator_01_grains27_curStart=0,this.granulator_01_grains27_curLen=1,this.granulator_01_grains27_active=!1,this.granulator_01_grains27_backwards=!1,this.granulator_01_grains28_sampleOffset=0,this.granulator_01_grains28_curRate=1,this.granulator_01_grains28_curStart=0,this.granulator_01_grains28_curLen=1,this.granulator_01_grains28_active=!1,this.granulator_01_grains28_backwards=!1,this.granulator_01_grains29_sampleOffset=0,this.granulator_01_grains29_curRate=1,this.granulator_01_grains29_curStart=0,this.granulator_01_grains29_curLen=1,this.granulator_01_grains29_active=!1,this.granulator_01_grains29_backwards=!1,this.granulator_01_grains30_sampleOffset=0,this.granulator_01_grains30_curRate=1,this.granulator_01_grains30_curStart=0,this.granulator_01_grains30_curLen=1,this.granulator_01_grains30_active=!1,this.granulator_01_grains30_backwards=!1,this.granulator_01_grains31_sampleOffset=0,this.granulator_01_grains31_curRate=1,this.granulator_01_grains31_curStart=0,this.granulator_01_grains31_curLen=1,this.granulator_01_grains31_active=!1,this.granulator_01_grains31_backwards=!1,this.granulator_01_grains32_sampleOffset=0,this.granulator_01_grains32_curRate=1,this.granulator_01_grains32_curStart=0,this.granulator_01_grains32_curLen=1,this.granulator_01_grains32_active=!1,this.granulator_01_grains32_backwards=!1,this.param_02_lastValue=0,this.adsr_01_phase=3,this.adsr_01_mspersamp=0,this.adsr_01_time=0,this.adsr_01_lasttrigger=0,this.adsr_01_amplitude=0,this.adsr_01_triggerval=0,this.adsr_01_outval=0,this.adsr_01_startingpoint=0,this.adsr_01_setupDone=!1,this.noise_tilde_01_last=0,this.noise_tilde_01_recip=0,this.numToListConverted0=[0],this.param_03_lastValue=0,this.wave_01_buffer=0,this.param_04_lastValue=0,this.ip_03_lastIndex=0,this.ip_03_lastValue=0,this.ip_03_resetCount=0,this.ip_03_sigbuf=0,this.ip_03_setupDone=!1,this.gen_01_mtof_2_lastInValue=0,this.gen_01_mtof_2_lastOutValue=0,this.gen_01_mtof_2_lastTuning=0,this.gen_01_mtof_2_buffer=0,this.param_05_lastValue=0,this.ip_04_lastIndex=0,this.ip_04_lastValue=0,this.ip_04_resetCount=0,this.ip_04_sigbuf=0,this.ip_04_setupDone=!1,this.noise_tilde_02_last=0,this.noise_tilde_02_recip=0,this.stackprotect_count=0,this.granulator_01_bufferobj=0,this.wave_01_bufferobj=0,this._voiceIndex=0,this._noteNumber=0,this.isMuted=1,this.parameterOffset=0,this.p_01=new Array}samplerate(){return this.sr}safemod(t,a){if(0!=a){if(a<0&&(a=-a),t>=a)if(t>=2*a){var r=t/a;t=(r-=rnbo_trunc(r))*a}else t-=a;else if(t<=-a)if(t<=2*-a){r=t/a;t=(r-=rnbo_trunc(r))*a}else t+=a}else t=0;return t}bufferbindchannel(t,a,r){return 0==r||4==r?a-1-t%a:3==r?0==a?0:t%a:t>a-1?a-1:t<0?0:t}wrap(t,a,r){var s,e;if(a==r)return a;a>r?(e=a,s=r):(s=a,e=r);var _=e-s;if(t>=s&&t<e)return t;if(_<=1e-9)return s;var i=rnbo_trunc((t-s)/_),n=t-_*(i-=t<s?1:0);return n>=e?n-_:n}bufferbindindex(t,a,r,s){if(0==s||4==s){if(t>=a&&t<r)return t;var e=r-a,_=t-a,i=_<0?2*e-1+this.safemod(_+1,2*e):this.safemod(_,2*e);return a+i>=e?2*e-i-1:i}return 3==s?this.wrap(t,a,r):t>r-1?r-1:t<a?a:t}linearinterp(t,a,r){return a+(r-a)*t}cubicinterp(t,a,r,s,e){var _=t*t,i=e-s-a+r;return i*t*_+(a-r-i)*_+(s-a)*t+r}splineinterp(t,a,r,s,e){var _=t*t;return(-.5*a+1.5*r-1.5*s+.5*e)*t*_+(a-2.5*r+2*s-.5*e)*_+(-.5*a+.5*s)*t+r}cosT8(t){var a,r=.00019841269841;return t<.7853981633974483&&t>-.7853981633974483?1-24801587302e-15*(a=t*t)*(20160-a*(1680-a*(56-a))):t>0?-(t-=1.5707963267948966)*(1-r*(a=t*t)*(840-a*(42-a))):(t+=1.5707963267948966)*(1-r*(a=t*t)*(840-a*(42-a)))}cosineinterp(t,a,r){var s=(1-this.cosT8(3.141592653589793*t))/2;return a*(1-s)+r*s}bufferreadsample(t,a,r,s,e,_){if(a<0)return 0;var i=rnbo_trunc(a);if(0==_){var n=a-i;return(g=i+1)>(h=e-1)&&(g=s),this.linearinterp(n,t.getSample(r,i),t.getSample(r,g))}if(1==_){n=a-i;return(g=i+1)>(h=e-1)&&(g=s),(l=g+1)>h&&(l=s),(u=l+1)>h&&(u=s),this.cubicinterp(n,t.getSample(r,i),t.getSample(r,g),t.getSample(r,l),t.getSample(r,u))}if(2==_){var l,u;n=a-i;return(g=i+1)>(h=e-1)&&(g=s),(l=g+1)>h&&(l=s),(u=l+1)>h&&(u=s),this.splineinterp(n,t.getSample(r,i),t.getSample(r,g),t.getSample(r,l),t.getSample(r,u))}if(3==_){var h,g;n=a-i;return(g=i+1)>(h=e-1)&&(g=s),this.cosineinterp(n,t.getSample(r,i),t.getSample(r,g))}return t.getSample(r,i)}hann(t){return t=t>1?1:t<0?0:t,.5*(1-rnbo_cos(6.283185307179586*t))}voice(){return this._voiceIndex}random(t,a){let r=a-t;return rand01()*r+t}wave(t,a,r,s,e,_,i,n,l){const u=t.getSize(),h=t.getChannels();var g;if(r<0&&(r=0),s>u&&(s=u),s-r<=0&&(r=0,s=u),1!=n){let t;{let e=s,_=r,i=a;if(0==n)t=i*(e-_);else if(1==n)t=i;else if(4==n){t=_+i*(e-_)}else{t=(.5*i+.5)*(e-_)}}g=t}else g=a;if(0==u||5==_&&(g<r||g>=s)||5==i&&(e<0||e>=h))return[0,0];{if(5!=_){let t;if(0==_||4==_)if(g>=r&&g<s)t=g;else{var o=s-r;t=r+(d=(p=g-r)<0?2*o-1+this.safemod(p+1,2*o):this.safemod(p,2*o))>=o?2*o-d-1:d}else t=3==_?this.wrap(g,r,s):g>s-1?s-1:g<r?r:g;g=t}if(5!=i){let t;t=0==i||4==i?h-1-e%h:3==i?0==h?0:e%h:e>h-1?h-1:e<0?0:e,e=t}let a;{let _=t;g<0&&(a=0);var p=rnbo_trunc(g);if(0==l){var c=g-p;(b=p+1)>(d=s-1)&&(b=r),a=this.linearinterp(c,_.getSample(e,p),_.getSample(e,b))}else if(1==l){c=g-p;(b=p+1)>(d=s-1)&&(b=r),(f=b+1)>d&&(f=r),(m=f+1)>d&&(m=r),a=this.cubicinterp(c,_.getSample(e,p),_.getSample(e,b),_.getSample(e,f),_.getSample(e,m))}else if(2==l){var f,m;c=g-p;(b=p+1)>(d=s-1)&&(b=r),(f=b+1)>d&&(f=r),(m=f+1)>d&&(m=r),a=this.splineinterp(c,_.getSample(e,p),_.getSample(e,b),_.getSample(e,f),_.getSample(e,m))}else if(3==l){var d,b;c=g-p;(b=p+1)>(d=s-1)&&(b=r),a=this.cosineinterp(c,_.getSample(e,p),_.getSample(e,b))}else a=_.getSample(e,p)}return[a,g]}}param_01_value_set(t){t=this.param_01_value_constrain(t),this.param_01_value=t,this.sendParameter(0),this.param_01_value!=this.param_01_lastValue&&(this.getEngine().presetTouched(),this.param_01_lastValue=this.param_01_value),this.wave_01_buffer_set(t),this.granulator_01_buffer_set(t)}param_02_value_set(t){t=this.param_02_value_constrain(t),this.param_02_value=t,this.sendParameter(1),this.param_02_value!=this.param_02_lastValue&&(this.getEngine().presetTouched(),this.param_02_lastValue=this.param_02_value),this.trigger_04_input_number_set(t)}param_03_value_set(t){t=this.param_03_value_constrain(t),this.param_03_value=t,this.sendParameter(2),this.param_03_value!=this.param_03_lastValue&&(this.getEngine().presetTouched(),this.param_03_lastValue=this.param_03_value),this.dspexpr_09_in2_set(t)}param_04_value_set(t){t=this.param_04_value_constrain(t),this.param_04_value=t,this.sendParameter(3),this.param_04_value!=this.param_04_lastValue&&(this.getEngine().presetTouched(),this.param_04_lastValue=this.param_04_value),this.granulator_01_length_set(t)}param_05_value_set(t){t=this.param_05_value_constrain(t),this.param_05_value=t,this.sendParameter(4),this.param_05_value!=this.param_05_lastValue&&(this.getEngine().presetTouched(),this.param_05_lastValue=this.param_05_value),this.p_01_in5_number_set(t)}loadbang_01_startupbang_bang(){this.loadbang_01_output_bang()}eventinlet_02_out1_bang_bang(){this.unpack_01_input_bang_bang()}eventinlet_02_out1_number_set(t){this.numToListConverted0.length=1,this.numToListConverted0[0]=t,this.unpack_01_input_list_set(this.numToListConverted0)}getParameterIndexForID(t){return stringCompare(t,\"buffer\")?stringCompare(t,\"rate\")?stringCompare(t,\"scatter\")?stringCompare(t,\"duration\")?stringCompare(t,\"wet_dry_mix\")?INVALID_INDEX:4:3:2:1:0}getNumMidiInputPorts(){return 1}processMidiEvent(t,a,r,s){this.updateTime(t),this.notein_01_midihandler(240&r[0],1+(15&r[0]),a,r,s)}getNumMidiOutputPorts(){return 0}adsr_01_mute_bang(){this.trigger_03_input_bang_bang()}process(t,a,r,s,e){this.vs=e,this.updateTime(this.getEngine().getCurrentTime());var _=s>=1&&r[0]?r[0]:this.dummyBuffer,i=s>=2&&r[1]?r[1]:this.dummyBuffer,n=a>=1&&t[0]?t[0]:this.zeroBuffer,l=a>=2&&t[1]?t[1]:this.zeroBuffer;a>=3&&t[2]?t[2]:this.zeroBuffer;this.getIsMuted()||(this.phasor_01_perform(this.phasor_01_freq,this.signals[0],e),this.dspexpr_06_perform(this.signals[0],this.dspexpr_06_in2,this.signals[1],e),this.adsr_01_perform(this.adsr_01_trigger,this.adsr_01_attack,this.adsr_01_decay,this.adsr_01_sustain,this.adsr_01_release,this.signals[0],e),this.noise_tilde_01_perform(this.signals[2],e),this.dspexpr_09_perform(this.signals[2],this.dspexpr_09_in2,this.signals[3],e),this.dspexpr_08_perform(n,this.signals[3],this.signals[2],e),this.wave_01_perform(l,this.wave_01_start,this.wave_01_end,this.wave_01_offset,this.signals[3],this.signals[4],this.dummyBuffer,e),this.ip_03_perform(this.signals[5],e),this.ip_04_perform(this.signals[6],e),this.gen_01_perform(this.signals[5],this.signals[6],this.signals[7],e),this.noise_tilde_02_perform(this.signals[6],e),this.dspexpr_10_perform(this.signals[6],this.signals[5],e),this.granulator_01_perform(this.signals[2],this.granulator_01_length,this.signals[7],this.granulator_01_bchan,this.signals[5],this.signals[1],this.signals[6],this.signals[8],e),this.p_01_perform(this.signals[6],this.signals[8],this.signals[3],this.signals[4],this.signals[5],this.signals[7],e),this.dspexpr_05_perform(this.signals[5],this.signals[0],this.signals[4],e),this.signaladder_01_perform(this.signals[4],_,_,e),this.dspexpr_07_perform(this.signals[7],this.signals[0],this.signals[4],e),this.signaladder_02_perform(this.signals[4],i,i,e),this.stackprotect_perform(e),this.audioProcessSampleCount+=this.vs)}prepareToProcess(t,a,r){if(this.maxvs<a||!this.didAllocateSignals){var s;for(s=0;s<9;s++)this.signals[s]=resizeSignal(this.signals[s],this.maxvs,a);this.phasor_01_sigbuf=resizeSignal(this.phasor_01_sigbuf,this.maxvs,a),this.ip_03_sigbuf=resizeSignal(this.ip_03_sigbuf,this.maxvs,a),this.ip_04_sigbuf=resizeSignal(this.ip_04_sigbuf,this.maxvs,a),this.zeroBuffer=resizeSignal(this.zeroBuffer,this.maxvs,a),this.dummyBuffer=resizeSignal(this.dummyBuffer,this.maxvs,a),this.didAllocateSignals=!0}var e=t!=this.sr,_=a!=this.maxvs,i=e||_||r;(e||_)&&(this.vs=a,this.maxvs=a,this.sr=t,this.invsr=1/t),this.phasor_01_dspsetup(i),this.adsr_01_dspsetup(i),this.ip_03_dspsetup(i),this.ip_04_dspsetup(i),this.p_01.prepareToProcess(t,a,r),e&&this.onSampleRateChanged(t)}msToSamps(t,a){return t*a*.001}sampsToMs(t){return t*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 3}getNumOutputChannels(){return 2}setProbingTarget(t){this.setProbingIndex(-1)}setProbingIndex(t){}getProbingChannels(t){return RNBO_UNUSED(t),0}initializeObjects(){this.granulator_01_edgedetect_init(),this.granulator_01_init(),this.noise_tilde_01_init(),this.ip_03_init(),this.ip_04_init(),this.noise_tilde_02_init(),this.p_01.initializeObjects()}setVoiceIndex(t){this._voiceIndex=t,this.p_01.setVoiceIndex(t)}setNoteNumber(t){this._noteNumber=t,this.p_01.setNoteNumber(t)}getIsMuted(){return this.isMuted}setIsMuted(t){this.isMuted=t}getPatcherSerial(){return 0}getState(t){}setState(){this.p_01=new RNBOSubpatcher_102,this.p_01.setEngineAndPatcher(this.getEngine(),this),this.p_01.initialize(),this.p_01.setParameterOffset(this.getParameterOffset(this.p_01))}getPreset(t){this.param_01_getPresetValue(getSubState(t,\"buffer\")),this.param_02_getPresetValue(getSubState(t,\"rate\")),this.param_03_getPresetValue(getSubState(t,\"scatter\")),this.param_04_getPresetValue(getSubState(t,\"duration\")),this.param_05_getPresetValue(getSubState(t,\"wet_dry_mix\")),this.p_01.getPreset(getSubState(getSubState(t,\"__sps\"),\"p_obj-58\"))}processTempoEvent(t,a){this.updateTime(t),this.p_01.processTempoEvent(t,a)}processTransportEvent(t,a){this.updateTime(t),this.p_01.processTransportEvent(t,a)}processBeatTimeEvent(t,a){this.updateTime(t),this.p_01.processBeatTimeEvent(t,a)}onSampleRateChanged(t){this.granulator_01_onSampleRateChanged(t)}processTimeSignatureEvent(t,a,r){this.updateTime(t),this.p_01.processTimeSignatureEvent(t,a,r)}setParameterValue(t,a,r){switch(this.updateTime(r),t){case 0:this.param_01_value_set(a);break;case 1:this.param_02_value_set(a);break;case 2:this.param_03_value_set(a);break;case 3:this.param_04_value_set(a);break;case 4:this.param_05_value_set(a);break;default:(t-=5)<this.p_01.getNumParameters()&&this.p_01.setParameterValue(t,a,r)}}processParameterEvent(t,a,r){this.setParameterValue(t,a,r)}processNormalizedParameterEvent(t,a,r){this.setParameterValueNormalized(t,a,r)}getParameterValue(t){switch(t){case 0:return this.param_01_value;case 1:return this.param_02_value;case 2:return this.param_03_value;case 3:return this.param_04_value;case 4:return this.param_05_value;default:return(t-=5)<this.p_01.getNumParameters()?this.p_01.getParameterValue(t):0}}getPolyParameterValue(t,a){return t[0].getParameterValue(a)}setPolyParameterValue(t,a,r,s){for(var e=0;e<8;e++)t[e].setParameterValue(a,r,s)}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 5+this.p_01.getNumParameters()}getParameterName(t){switch(t){case 0:return\"buffer\";case 1:return\"rate\";case 2:return\"scatter\";case 3:return\"duration\";case 4:return\"wet_dry_mix\";default:return(t-=5)<this.p_01.getNumParameters()?this.p_01.getParameterName(t):\"bogus\"}}getParameterId(t){switch(t){case 0:return\"granular/buffer\";case 1:return\"granular/rate\";case 2:return\"granular/scatter\";case 3:return\"granular/duration\";case 4:return\"granular/wet_dry_mix\";default:return(t-=5)<this.p_01.getNumParameters()?this.p_01.getParameterId(t):\"bogus\"}}getParameterInfo(t,a){switch(t){case 0:a.type=ParameterTypeNumber,a.initialValue=0,a.min=0,a.max=8,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;case 1:a.type=ParameterTypeNumber,a.initialValue=20,a.min=0,a.max=1e3,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"hz\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;case 2:a.type=ParameterTypeNumber,a.initialValue=0,a.min=0,a.max=220500,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;case 3:a.type=ParameterTypeNumber,a.initialValue=2205,a.min=1,a.max=220500,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;case 4:a.type=ParameterTypeNumber,a.initialValue=.75,a.min=0,a.max=1,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;default:(t-=5)<this.p_01.getNumParameters()&&this.p_01.getParameterInfo(t,a)}}sendParameter(t){1==this._voiceIndex&&this.getPatcher().sendParameter(t+this.parameterOffset)}sendPolyParameter(t,a){this.getPatcher().sendParameter(t+this.parameterOffset+a-1)}getParameterOffset(t){return t==this.p_01?5:0}setParameterOffset(t){this.parameterOffset=t}applyStepsToNormalizedParameterValue(t,a){if(1==a)t>0&&(t=1);else{let r=1/(a-1);t=1*rnbo_fround(t/r*1/1)*r}return t}convertToNormalizedParameterValue(t,a){switch(t){case 4:return((a=a<0?0:a>1?1:a)-0)/1;case 0:return((a=a<0?0:a>8?8:a)-0)/8;case 1:return((a=a<0?0:a>1e3?1e3:a)-0)/1e3;case 2:return((a=a<0?0:a>220500?220500:a)-0)/220500;case 3:return((a=a<1?1:a>220500?220500:a)-1)/220499;default:return(t-=5)<this.p_01.getNumParameters()?this.p_01.convertToNormalizedParameterValue(t,a):a}}convertFromNormalizedParameterValue(t,a){switch(a=a<0?0:a>1?1:a,t){case 4:return 0+1*(a=a<0?0:a>1?1:a);case 0:return 0+8*(a=a<0?0:a>1?1:a);case 1:return 0+1e3*(a=a<0?0:a>1?1:a);case 2:return 0+220500*(a=a<0?0:a>1?1:a);case 3:return 1+220499*(a=a<0?0:a>1?1:a);default:return(t-=5)<this.p_01.getNumParameters()?this.p_01.convertFromNormalizedParameterValue(t,a):a}}constrainParameterValue(t,a){switch(t){case 0:return this.param_01_value_constrain(a);case 1:return this.param_02_value_constrain(a);case 2:return this.param_03_value_constrain(a);case 3:return this.param_04_value_constrain(a);case 4:return this.param_05_value_constrain(a);default:return(t-=5)<this.p_01.getNumParameters()?this.p_01.constrainParameterValue(t,a):a}}scheduleParamInit(t,a){this.getPatcher().scheduleParamInit(t+this.parameterOffset,a)}processClockEvent(t,a,r,s){switch(RNBO_UNUSED(s),RNBO_UNUSED(r),this.updateTime(t),a){case-871642103:this.loadbang_01_startupbang_bang();break;case-1468824490:this.adsr_01_mute_bang()}}processOutletAtCurrentTime(t,a,r){}processOutletEvent(t,a,r,s){this.updateTime(s),this.processOutletAtCurrentTime(t,a,r)}sendOutlet(t,a){this.getEngine().sendOutlet(this,t,a)}processNumMessage(t,a,r,s){RNBO_UNUSED(a),this.updateTime(r),this.p_01.processNumMessage(t,a,r,s)}processListMessage(t,a,r,s){RNBO_UNUSED(a),this.updateTime(r),this.p_01.processListMessage(t,a,r,s)}processBangMessage(t,a,r){switch(this.updateTime(r),t){case TAG(\"startupbang\"):TAG(\"granular/loadbang_obj-18\")==a&&this.loadbang_01_startupbang_bang()}this.p_01.processBangMessage(t,a,r)}resolveTag(t){switch(t){case TAG(\"startupbang\"):return\"startupbang\";case TAG(\"granular/loadbang_obj-18\"):return\"granular/loadbang_obj-18\"}var a=this.p_01.resolveTag(t);return a||null}startup(){this.updateTime(this.getEngine().getCurrentTime()),this.p_01.startup(),this.getEngine().scheduleClockEvent(this,-871642103,0+this._currentTime),this.scheduleParamInit(0,0),this.scheduleParamInit(1,0),this.scheduleParamInit(2,0),this.scheduleParamInit(3,0),this.scheduleParamInit(4,0)}getDataRef(t){return null}getNumDataRefs(){return 0}fillDataRef(t,a){}zeroDataRef(t){t.setZero()}processDataViewUpdate(t,a){this.updateTime(a),-2!=t&&2!=t&&3!=t&&4!=t&&5!=t||(this.granulator_01_buffer=new Float32MultiBuffer(this.granulator_01_bufferobj),this.granulator_01_bufferUpdated()),-3!=t&&2!=t&&3!=t&&4!=t&&5!=t||(this.wave_01_buffer=new Float32MultiBuffer(this.wave_01_bufferobj)),1==t&&(this.gen_01_mtof_2_buffer=new Float64Buffer(this.getPatcher().RNBODefaultMtofLookupTable256)),this.p_01.processDataViewUpdate(t,a)}allocateDataRefs(){this.p_01.allocateDataRefs(),this.gen_01_mtof_2_buffer.requestSize(65536,1),this.gen_01_mtof_2_buffer.setSampleRate(this.sr),this.gen_01_mtof_2_buffer=this.gen_01_mtof_2_buffer.allocateIfNeeded()}initialize(){this.granulator_01_bufferobj=initMultiRef(this.getPatcher().harp_riff,this.getPatcher().jongly,this.getPatcher().big,this.getPatcher().usr_buff),this.wave_01_bufferobj=initMultiRef(this.getPatcher().harp_riff,this.getPatcher().jongly,this.getPatcher().big,this.getPatcher().usr_buff),this.assign_defaults(),this.setState(),this.granulator_01_bufferobj.setIndex(-2),this.granulator_01_buffer=new Float32MultiBuffer(this.granulator_01_bufferobj),this.wave_01_bufferobj.setIndex(-3),this.wave_01_buffer=new Float32MultiBuffer(this.wave_01_bufferobj),this.gen_01_mtof_2_buffer=new Float64Buffer(this.getPatcher().RNBODefaultMtofLookupTable256)}adsr_01_release_set(t){this.adsr_01_release=t}unpack_01_out4_set(t){this.unpack_01_out4=t,this.adsr_01_release_set(t)}adsr_01_sustain_set(t){this.adsr_01_sustain=t}unpack_01_out3_set(t){this.unpack_01_out3=t,this.adsr_01_sustain_set(t)}adsr_01_decay_set(t){this.adsr_01_decay=t}unpack_01_out2_set(t){this.unpack_01_out2=t,this.adsr_01_decay_set(t)}adsr_01_attack_set(t){this.adsr_01_attack=t}unpack_01_out1_set(t){this.unpack_01_out1=t,this.adsr_01_attack_set(t)}unpack_01_input_list_set(t){t.length>3&&this.unpack_01_out4_set(t[3]),t.length>2&&this.unpack_01_out3_set(t[2]),t.length>1&&this.unpack_01_out2_set(t[1]),t.length>0&&this.unpack_01_out1_set(t[0])}eventinlet_02_out1_list_set(t){this.unpack_01_input_list_set(t)}param_01_value_constrain(t){return t=t>8?8:t<0?0:t}wave_01_buffer_set(t){updateMultiRef(this,this.wave_01_buffer,t)}granulator_01_buffer_set(t){updateMultiRef(this,this.granulator_01_buffer,t)}param_02_value_constrain(t){return t=t>1e3?1e3:t<0?0:t}floatnum_01_value_set(t){this.floatnum_01_value=t,this.floatnum_01_stored=t}trigger_04_out2_set(t){this.floatnum_01_value_set(t)}phasor_01_freq_set(t){this.phasor_01_freq=t}floatnum_01_out_set(t){this.phasor_01_freq_set(t)}floatnum_01_input_bang_bang(){this.floatnum_01_out_set(this.floatnum_01_stored)}gate_01_out1_bang_bang(){this.floatnum_01_input_bang_bang()}gate_01_input_bang_bang(){1==this.gate_01_onoff&&this.gate_01_out1_bang_bang()}trigger_04_out1_bang(){this.gate_01_input_bang_bang()}trigger_04_input_number_set(t){this.trigger_04_out2_set(t),this.trigger_04_out1_bang()}param_03_value_constrain(t){return t=t>220500?220500:t<0?0:t}dspexpr_09_in2_set(t){this.dspexpr_09_in2=t}param_04_value_constrain(t){return t=t>220500?220500:t<1?1:t}granulator_01_length_set(t){this.granulator_01_length=t}param_05_value_constrain(t){return t=t>1?1:t<0?0:t}p_01_in5_number_set(t){this.p_01.updateTime(this._currentTime),this.p_01.eventinlet_01_out1_number_set(t)}trigger_03_out2_set(t){this.phasor_01_freq_set(t)}phasor_01_phase_set(t){t>=0&&this.phasor_01_sigbuf&&(this.phasor_01_sigbuf[this.sampleOffsetIntoNextAudioBuffer]=t)}trigger_03_out1_set(t){this.phasor_01_phase_set(t)}trigger_03_input_bang_bang(){this.trigger_03_out2_set(0),this.trigger_03_out1_set(.5)}loadbang_01_output_bang(){this.trigger_03_input_bang_bang()}unpack_01_out4_bang(){var t=this.unpack_01_out4;this.adsr_01_release_set(t)}unpack_01_out3_bang(){var t=this.unpack_01_out3;this.adsr_01_sustain_set(t)}unpack_01_out2_bang(){var t=this.unpack_01_out2;this.adsr_01_decay_set(t)}unpack_01_out1_bang(){var t=this.unpack_01_out1;this.adsr_01_attack_set(t)}unpack_01_input_bang_bang(){this.unpack_01_out4_bang(),this.unpack_01_out3_bang(),this.unpack_01_out2_bang(),this.unpack_01_out1_bang()}notein_01_outchannel_set(t){}notein_01_releasevelocity_set(t){}gate_01_onoff_set(t){this.gate_01_onoff=t}trigger_02_out2_set(t){this.gate_01_onoff_set(t)}trigger_02_out1_bang(){this.floatnum_01_input_bang_bang()}trigger_02_input_bang_bang(){this.trigger_02_out2_set(1),this.trigger_02_out1_bang()}select_01_match1_bang(){this.trigger_02_input_bang_bang()}select_01_nomatch_number_set(t){this.gate_01_onoff_set(t)}select_01_input_number_set(t){t==this.select_01_test1?this.select_01_match1_bang():this.select_01_nomatch_number_set(t)}expr_03_out1_set(t){this.expr_03_out1=t,this.select_01_input_number_set(this.expr_03_out1)}expr_03_in1_set(t){this.expr_03_in1=t,this.expr_03_out1_set(this.expr_03_in1>this.expr_03_in2)}trigger_01_out2_set(t){this.expr_03_in1_set(t)}adsr_01_trigger_set(t){this.adsr_01_trigger=t}expr_04_out1_set(t){this.expr_04_out1=t,this.adsr_01_trigger_set(this.expr_04_out1)}expr_04_in1_set(t){this.expr_04_in1=t,this.expr_04_out1_set(0==this.expr_04_in2||0==this.expr_04_in2?0:this.expr_04_in1/this.expr_04_in2)}trigger_01_out1_set(t){this.expr_04_in1_set(t)}trigger_01_input_number_set(t){this.trigger_01_out2_set(rnbo_trunc(t)),this.trigger_01_out1_set(rnbo_trunc(t))}notein_01_velocity_set(t){this.trigger_01_input_number_set(t)}ip_03_value_set(t){this.ip_03_value=t,this.ip_03_fillSigBuf(),this.ip_03_lastValue=t}notein_01_notenumber_set(t){this.ip_03_value_set(t)}notein_01_midihandler(t,a,r,s,e){RNBO_UNUSED(e),RNBO_UNUSED(r),a!=this.notein_01_channel&&0!=this.notein_01_channel||144!=t&&128!=t||(this.notein_01_outchannel_set(a),128==t?(this.notein_01_releasevelocity_set(s[2]),this.notein_01_velocity_set(0)):(this.notein_01_releasevelocity_set(0),this.notein_01_velocity_set(s[2])),this.notein_01_notenumber_set(s[1]))}midiouthelper_midiout_set(t){}phasor_01_perform(t,a,r){for(var s=this.phasor_01_sigbuf,e=0;e<r;e++)a[e]=this.phasor_01_ph_next(t,s[e]),s[e]=-1}dspexpr_06_perform(t,a,r,s){var e;for(RNBO_UNUSED(a),e=0;e<s;e++)r[e]=t[e]>.5}adsr_01_perform(t,a,r,s,e,_,i){for(var n=this.adsr_01_time,l=this.adsr_01_amplitude,u=this.adsr_01_outval,h=this.adsr_01_startingpoint,g=this.adsr_01_phase,o=this.adsr_01_triggerval,p=this.adsr_01_lasttrigger,c=this.adsr_01_mspersamp,f=!1,m=0;m<i;m++){let i=a>c?a:c,d=r>c?r:c,b=e>c?e:c;p=o,o=t,0==p&&0!=o?(h=0!=g?u:0,l=o,g=1,n=0,f=!1):0!=p&&0==o&&4!=g&&0!=g&&(g=4,l=u,n=0),n+=c,0==g?u=0:1==g?n>i?(n-=i,g=2,u=l):u=(l-h)*n/i+h:2==g?n>d?(n-=d,g=3,u=l*s):u=l*s+(l-l*s)*(1-n/d):3==g?u=l*s:4==g&&(n>b?(n=0,g=0,u=0,l=0,f=!0):u=l*(1-n/b)),_[m]=u}f&&this.getEngine().scheduleClockEventWithValue(this,-1468824490,this.sampsToMs(this.vs)+this._currentTime,0),this.adsr_01_lasttrigger=p,this.adsr_01_triggerval=o,this.adsr_01_phase=g,this.adsr_01_startingpoint=h,this.adsr_01_outval=u,this.adsr_01_amplitude=l,this.adsr_01_time=n}noise_tilde_01_perform(t,a){var r,s=this.noise_tilde_01_recip,e=this.noise_tilde_01_last;for(r=0;r<a;r++){var _=8388607&(e=rnbo_imul(1664525,e)+1013904223|0);t[r]=_*s-1}this.noise_tilde_01_last=e}dspexpr_09_perform(t,a,r,s){var e;for(e=0;e<s;e++)r[e]=t[e]*a}dspexpr_08_perform(t,a,r,s){var e;for(e=0;e<s;e++)r[e]=t[e]+a[e]}wave_01_perform(t,a,r,s,e,_,i,n){var l;for(RNBO_UNUSED(s),RNBO_UNUSED(r),RNBO_UNUSED(a),l=0;l<n;l++){var u=-1;-1==u&&(u=this.wave_01_buffer.getSize());var h=this.wave(this.wave_01_buffer,t[l],0,u,0,3,3,4,0);e[l]=h[0],i[l]=h[1];var g=this.wave(this.wave_01_buffer,t[l],0,u,1,3,3,4,0);_[l]=g[0]}}ip_03_perform(t,a){for(var r=this.ip_03_sigbuf,s=this.ip_03_lastValue,e=this.ip_03_lastIndex,_=0;_<a;_++)t[_]=_>=e?s:r[_];e=0,this.ip_03_lastIndex=e}ip_04_perform(t,a){for(var r=this.ip_04_sigbuf,s=this.ip_04_lastValue,e=this.ip_04_lastIndex,_=0;_<a;_++)t[_]=_>=e?s:r[_];e=0,this.ip_04_lastIndex=e}gen_01_perform(t,a,r,s){var e;for(e=0;e<s;e++){let s=this.gen_01_mtof_2_next(t[e],440)/261.625565*(a[e]>0?-1:1);r[e]=s}}noise_tilde_02_perform(t,a){var r,s=this.noise_tilde_02_recip,e=this.noise_tilde_02_last;for(r=0;r<a;r++){var _=8388607&(e=rnbo_imul(1664525,e)+1013904223|0);t[r]=_*s-1}this.noise_tilde_02_last=e}dspexpr_10_perform(t,a,r){var s;for(s=0;s<r;s++)a[s]=rnbo_abs(t[s])}granulator_01_perform(t,a,r,s,e,_,i,n,l){RNBO_UNUSED(s);var u,h=this.granulator_01_grainPan,g=this.granulator_01_limitLast,o=this.granulator_01_limit;for(u=0;u<l;u++){var p=this.granulator_01_edgedetect_next(_[u])>0,c=o>32?32:o<0?0:o;g=c,i[u]=0,n[u]=0;for(var f=t[u],m=r[u],d=a,b=0;b<32;b++){var v=0;if(p&&this.granulator_01_grains_inactive(b)&&b<c&&(p=!1,v=1,h[b][0]=this.granulator_01_panfunc_next(e[u],0),h[b][1]=this.granulator_01_panfunc_next(e[u],1)),0!=v||!this.granulator_01_grains_inactive(b)){var S=this.granulator_01_grains_next(b,this.granulator_01_buffer,v,f,d,m,0),O=S[0]*this.hann(S[1]);i[u]+=O*h[b][0],n[u]+=O*h[b][1]}}}this.granulator_01_limitLast=g}p_01_perform(t,a,r,s,e,_,i){var n=[t,a,r,s],l=[e,_];this.p_01.process(n,4,l,2,i)}dspexpr_05_perform(t,a,r,s){var e;for(e=0;e<s;e++)r[e]=t[e]*a[e]}signaladder_01_perform(t,a,r,s){var e;for(e=0;e<s;e++)r[e]=t[e]+a[e]}dspexpr_07_perform(t,a,r,s){var e;for(e=0;e<s;e++)r[e]=t[e]*a[e]}signaladder_02_perform(t,a,r,s){var e;for(e=0;e<s;e++)r[e]=t[e]+a[e]}stackprotect_perform(t){RNBO_UNUSED(t);this.stackprotect_count;this.stackprotect_count=0}param_01_getPresetValue(t){t.value=this.param_01_value}param_01_setPresetValue(t){stateIsEmpty(t)||this.param_01_value_set(t.value)}phasor_01_ph_next(t,a){a>=0&&(this.phasor_01_ph_currentPhase=a);const r=t*this.phasor_01_ph_conv;this.phasor_01_ph_currentPhase<0&&(this.phasor_01_ph_currentPhase=1+this.phasor_01_ph_currentPhase),this.phasor_01_ph_currentPhase>1&&(this.phasor_01_ph_currentPhase=this.phasor_01_ph_currentPhase-1);var s=this.phasor_01_ph_currentPhase;return this.phasor_01_ph_currentPhase+=r,s}phasor_01_ph_reset(){this.phasor_01_ph_currentPhase=0}phasor_01_ph_dspsetup(){this.phasor_01_ph_conv=1/this.sr}phasor_01_dspsetup(t){this.phasor_01_setupDone&&!t||(this.phasor_01_conv=1/this.samplerate(),this.phasor_01_setupDone=!0,this.phasor_01_ph_dspsetup())}granulator_01_edgedetect_next(t){if(t<=0)this.granulator_01_edgedetect_active=!1;else if(!this.granulator_01_edgedetect_active)return this.granulator_01_edgedetect_active=!0,1;return 0}granulator_01_edgedetect_init(){}granulator_01_edgedetect_reset(){this.granulator_01_edgedetect_active=!1}granulator_01_panfunc_next(t,a){return t=(t*=1)>=0?this.safemod(t,2):this.safemod(2+this.safemod(t,2),2),0==a&&t>=1&&(t-=2),(t-=a)>-1&&t<1?rnbo_sqrt(1-rnbo_abs(t)):0}granulator_01_panfunc_reset(){}granulator_01_grains1_inactive(){return!this.granulator_01_grains1_active}granulator_01_grains1_reset(){this.granulator_01_grains1_active=!1}granulator_01_grains1_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains1_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains1_curRate||s<=0?(this.granulator_01_grains1_active&&(i=!0),this.granulator_01_grains1_curRate=0,this.granulator_01_grains1_active=!1):(this.granulator_01_grains1_curLen=s,this.granulator_01_grains1_active=!0,this.granulator_01_grains1_backwards=e<0,this.granulator_01_grains1_sampleOffset=0,this.granulator_01_grains1_curStart=r,this.granulator_01_grains1_backwards&&(this.granulator_01_grains1_curStart+=this.granulator_01_grains1_curLen),i=!1)),this.granulator_01_grains1_active){if(this.granulator_01_grains1_sampleOffset>=this.granulator_01_grains1_curLen)i=!0,this.granulator_01_grains1_active=!1,l=1;else{let a=this.granulator_01_grains1_curStart;this.granulator_01_grains1_backwards?a-=this.granulator_01_grains1_sampleOffset:a+=this.granulator_01_grains1_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains1_sampleOffset/this.granulator_01_grains1_curLen>1?1:this.granulator_01_grains1_sampleOffset/this.granulator_01_grains1_curLen<0?0:this.granulator_01_grains1_sampleOffset/this.granulator_01_grains1_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains1_sampleOffset+=this.granulator_01_grains1_curRate}return[n,l,i?1:0]}granulator_01_grains2_inactive(){return!this.granulator_01_grains2_active}granulator_01_grains2_reset(){this.granulator_01_grains2_active=!1}granulator_01_grains2_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains2_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains2_curRate||s<=0?(this.granulator_01_grains2_active&&(i=!0),this.granulator_01_grains2_curRate=0,this.granulator_01_grains2_active=!1):(this.granulator_01_grains2_curLen=s,this.granulator_01_grains2_active=!0,this.granulator_01_grains2_backwards=e<0,this.granulator_01_grains2_sampleOffset=0,this.granulator_01_grains2_curStart=r,this.granulator_01_grains2_backwards&&(this.granulator_01_grains2_curStart+=this.granulator_01_grains2_curLen),i=!1)),this.granulator_01_grains2_active){if(this.granulator_01_grains2_sampleOffset>=this.granulator_01_grains2_curLen)i=!0,this.granulator_01_grains2_active=!1,l=1;else{let a=this.granulator_01_grains2_curStart;this.granulator_01_grains2_backwards?a-=this.granulator_01_grains2_sampleOffset:a+=this.granulator_01_grains2_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains2_sampleOffset/this.granulator_01_grains2_curLen>1?1:this.granulator_01_grains2_sampleOffset/this.granulator_01_grains2_curLen<0?0:this.granulator_01_grains2_sampleOffset/this.granulator_01_grains2_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains2_sampleOffset+=this.granulator_01_grains2_curRate}return[n,l,i?1:0]}granulator_01_grains3_inactive(){return!this.granulator_01_grains3_active}granulator_01_grains3_reset(){this.granulator_01_grains3_active=!1}granulator_01_grains3_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains3_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains3_curRate||s<=0?(this.granulator_01_grains3_active&&(i=!0),this.granulator_01_grains3_curRate=0,this.granulator_01_grains3_active=!1):(this.granulator_01_grains3_curLen=s,this.granulator_01_grains3_active=!0,this.granulator_01_grains3_backwards=e<0,this.granulator_01_grains3_sampleOffset=0,this.granulator_01_grains3_curStart=r,this.granulator_01_grains3_backwards&&(this.granulator_01_grains3_curStart+=this.granulator_01_grains3_curLen),i=!1)),this.granulator_01_grains3_active){if(this.granulator_01_grains3_sampleOffset>=this.granulator_01_grains3_curLen)i=!0,this.granulator_01_grains3_active=!1,l=1;else{let a=this.granulator_01_grains3_curStart;this.granulator_01_grains3_backwards?a-=this.granulator_01_grains3_sampleOffset:a+=this.granulator_01_grains3_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains3_sampleOffset/this.granulator_01_grains3_curLen>1?1:this.granulator_01_grains3_sampleOffset/this.granulator_01_grains3_curLen<0?0:this.granulator_01_grains3_sampleOffset/this.granulator_01_grains3_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains3_sampleOffset+=this.granulator_01_grains3_curRate}return[n,l,i?1:0]}granulator_01_grains4_inactive(){return!this.granulator_01_grains4_active}granulator_01_grains4_reset(){this.granulator_01_grains4_active=!1}granulator_01_grains4_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains4_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains4_curRate||s<=0?(this.granulator_01_grains4_active&&(i=!0),this.granulator_01_grains4_curRate=0,this.granulator_01_grains4_active=!1):(this.granulator_01_grains4_curLen=s,this.granulator_01_grains4_active=!0,this.granulator_01_grains4_backwards=e<0,this.granulator_01_grains4_sampleOffset=0,this.granulator_01_grains4_curStart=r,this.granulator_01_grains4_backwards&&(this.granulator_01_grains4_curStart+=this.granulator_01_grains4_curLen),i=!1)),this.granulator_01_grains4_active){if(this.granulator_01_grains4_sampleOffset>=this.granulator_01_grains4_curLen)i=!0,this.granulator_01_grains4_active=!1,l=1;else{let a=this.granulator_01_grains4_curStart;this.granulator_01_grains4_backwards?a-=this.granulator_01_grains4_sampleOffset:a+=this.granulator_01_grains4_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains4_sampleOffset/this.granulator_01_grains4_curLen>1?1:this.granulator_01_grains4_sampleOffset/this.granulator_01_grains4_curLen<0?0:this.granulator_01_grains4_sampleOffset/this.granulator_01_grains4_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains4_sampleOffset+=this.granulator_01_grains4_curRate}return[n,l,i?1:0]}granulator_01_grains5_inactive(){return!this.granulator_01_grains5_active}granulator_01_grains5_reset(){this.granulator_01_grains5_active=!1}granulator_01_grains5_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains5_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains5_curRate||s<=0?(this.granulator_01_grains5_active&&(i=!0),this.granulator_01_grains5_curRate=0,this.granulator_01_grains5_active=!1):(this.granulator_01_grains5_curLen=s,this.granulator_01_grains5_active=!0,this.granulator_01_grains5_backwards=e<0,this.granulator_01_grains5_sampleOffset=0,this.granulator_01_grains5_curStart=r,this.granulator_01_grains5_backwards&&(this.granulator_01_grains5_curStart+=this.granulator_01_grains5_curLen),i=!1)),this.granulator_01_grains5_active){if(this.granulator_01_grains5_sampleOffset>=this.granulator_01_grains5_curLen)i=!0,this.granulator_01_grains5_active=!1,l=1;else{let a=this.granulator_01_grains5_curStart;this.granulator_01_grains5_backwards?a-=this.granulator_01_grains5_sampleOffset:a+=this.granulator_01_grains5_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains5_sampleOffset/this.granulator_01_grains5_curLen>1?1:this.granulator_01_grains5_sampleOffset/this.granulator_01_grains5_curLen<0?0:this.granulator_01_grains5_sampleOffset/this.granulator_01_grains5_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains5_sampleOffset+=this.granulator_01_grains5_curRate}return[n,l,i?1:0]}granulator_01_grains6_inactive(){return!this.granulator_01_grains6_active}granulator_01_grains6_reset(){this.granulator_01_grains6_active=!1}granulator_01_grains6_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains6_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains6_curRate||s<=0?(this.granulator_01_grains6_active&&(i=!0),this.granulator_01_grains6_curRate=0,this.granulator_01_grains6_active=!1):(this.granulator_01_grains6_curLen=s,this.granulator_01_grains6_active=!0,this.granulator_01_grains6_backwards=e<0,this.granulator_01_grains6_sampleOffset=0,this.granulator_01_grains6_curStart=r,this.granulator_01_grains6_backwards&&(this.granulator_01_grains6_curStart+=this.granulator_01_grains6_curLen),i=!1)),this.granulator_01_grains6_active){if(this.granulator_01_grains6_sampleOffset>=this.granulator_01_grains6_curLen)i=!0,this.granulator_01_grains6_active=!1,l=1;else{let a=this.granulator_01_grains6_curStart;this.granulator_01_grains6_backwards?a-=this.granulator_01_grains6_sampleOffset:a+=this.granulator_01_grains6_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains6_sampleOffset/this.granulator_01_grains6_curLen>1?1:this.granulator_01_grains6_sampleOffset/this.granulator_01_grains6_curLen<0?0:this.granulator_01_grains6_sampleOffset/this.granulator_01_grains6_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains6_sampleOffset+=this.granulator_01_grains6_curRate}return[n,l,i?1:0]}granulator_01_grains7_inactive(){return!this.granulator_01_grains7_active}granulator_01_grains7_reset(){this.granulator_01_grains7_active=!1}granulator_01_grains7_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains7_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains7_curRate||s<=0?(this.granulator_01_grains7_active&&(i=!0),this.granulator_01_grains7_curRate=0,this.granulator_01_grains7_active=!1):(this.granulator_01_grains7_curLen=s,this.granulator_01_grains7_active=!0,this.granulator_01_grains7_backwards=e<0,this.granulator_01_grains7_sampleOffset=0,this.granulator_01_grains7_curStart=r,this.granulator_01_grains7_backwards&&(this.granulator_01_grains7_curStart+=this.granulator_01_grains7_curLen),i=!1)),this.granulator_01_grains7_active){if(this.granulator_01_grains7_sampleOffset>=this.granulator_01_grains7_curLen)i=!0,this.granulator_01_grains7_active=!1,l=1;else{let a=this.granulator_01_grains7_curStart;this.granulator_01_grains7_backwards?a-=this.granulator_01_grains7_sampleOffset:a+=this.granulator_01_grains7_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains7_sampleOffset/this.granulator_01_grains7_curLen>1?1:this.granulator_01_grains7_sampleOffset/this.granulator_01_grains7_curLen<0?0:this.granulator_01_grains7_sampleOffset/this.granulator_01_grains7_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains7_sampleOffset+=this.granulator_01_grains7_curRate}return[n,l,i?1:0]}granulator_01_grains8_inactive(){return!this.granulator_01_grains8_active}granulator_01_grains8_reset(){this.granulator_01_grains8_active=!1}granulator_01_grains8_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains8_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains8_curRate||s<=0?(this.granulator_01_grains8_active&&(i=!0),this.granulator_01_grains8_curRate=0,this.granulator_01_grains8_active=!1):(this.granulator_01_grains8_curLen=s,this.granulator_01_grains8_active=!0,this.granulator_01_grains8_backwards=e<0,this.granulator_01_grains8_sampleOffset=0,this.granulator_01_grains8_curStart=r,this.granulator_01_grains8_backwards&&(this.granulator_01_grains8_curStart+=this.granulator_01_grains8_curLen),i=!1)),this.granulator_01_grains8_active){if(this.granulator_01_grains8_sampleOffset>=this.granulator_01_grains8_curLen)i=!0,this.granulator_01_grains8_active=!1,l=1;else{let a=this.granulator_01_grains8_curStart;this.granulator_01_grains8_backwards?a-=this.granulator_01_grains8_sampleOffset:a+=this.granulator_01_grains8_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains8_sampleOffset/this.granulator_01_grains8_curLen>1?1:this.granulator_01_grains8_sampleOffset/this.granulator_01_grains8_curLen<0?0:this.granulator_01_grains8_sampleOffset/this.granulator_01_grains8_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains8_sampleOffset+=this.granulator_01_grains8_curRate}return[n,l,i?1:0]}granulator_01_grains9_inactive(){return!this.granulator_01_grains9_active}granulator_01_grains9_reset(){this.granulator_01_grains9_active=!1}granulator_01_grains9_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains9_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains9_curRate||s<=0?(this.granulator_01_grains9_active&&(i=!0),this.granulator_01_grains9_curRate=0,this.granulator_01_grains9_active=!1):(this.granulator_01_grains9_curLen=s,this.granulator_01_grains9_active=!0,this.granulator_01_grains9_backwards=e<0,this.granulator_01_grains9_sampleOffset=0,this.granulator_01_grains9_curStart=r,this.granulator_01_grains9_backwards&&(this.granulator_01_grains9_curStart+=this.granulator_01_grains9_curLen),i=!1)),this.granulator_01_grains9_active){if(this.granulator_01_grains9_sampleOffset>=this.granulator_01_grains9_curLen)i=!0,this.granulator_01_grains9_active=!1,l=1;else{let a=this.granulator_01_grains9_curStart;this.granulator_01_grains9_backwards?a-=this.granulator_01_grains9_sampleOffset:a+=this.granulator_01_grains9_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains9_sampleOffset/this.granulator_01_grains9_curLen>1?1:this.granulator_01_grains9_sampleOffset/this.granulator_01_grains9_curLen<0?0:this.granulator_01_grains9_sampleOffset/this.granulator_01_grains9_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains9_sampleOffset+=this.granulator_01_grains9_curRate}return[n,l,i?1:0]}granulator_01_grains10_inactive(){return!this.granulator_01_grains10_active}granulator_01_grains10_reset(){this.granulator_01_grains10_active=!1}granulator_01_grains10_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains10_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains10_curRate||s<=0?(this.granulator_01_grains10_active&&(i=!0),this.granulator_01_grains10_curRate=0,this.granulator_01_grains10_active=!1):(this.granulator_01_grains10_curLen=s,this.granulator_01_grains10_active=!0,this.granulator_01_grains10_backwards=e<0,this.granulator_01_grains10_sampleOffset=0,this.granulator_01_grains10_curStart=r,this.granulator_01_grains10_backwards&&(this.granulator_01_grains10_curStart+=this.granulator_01_grains10_curLen),i=!1)),this.granulator_01_grains10_active){if(this.granulator_01_grains10_sampleOffset>=this.granulator_01_grains10_curLen)i=!0,this.granulator_01_grains10_active=!1,l=1;else{let a=this.granulator_01_grains10_curStart;this.granulator_01_grains10_backwards?a-=this.granulator_01_grains10_sampleOffset:a+=this.granulator_01_grains10_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains10_sampleOffset/this.granulator_01_grains10_curLen>1?1:this.granulator_01_grains10_sampleOffset/this.granulator_01_grains10_curLen<0?0:this.granulator_01_grains10_sampleOffset/this.granulator_01_grains10_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains10_sampleOffset+=this.granulator_01_grains10_curRate}return[n,l,i?1:0]}granulator_01_grains11_inactive(){return!this.granulator_01_grains11_active}granulator_01_grains11_reset(){this.granulator_01_grains11_active=!1}granulator_01_grains11_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains11_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains11_curRate||s<=0?(this.granulator_01_grains11_active&&(i=!0),this.granulator_01_grains11_curRate=0,this.granulator_01_grains11_active=!1):(this.granulator_01_grains11_curLen=s,this.granulator_01_grains11_active=!0,this.granulator_01_grains11_backwards=e<0,this.granulator_01_grains11_sampleOffset=0,this.granulator_01_grains11_curStart=r,this.granulator_01_grains11_backwards&&(this.granulator_01_grains11_curStart+=this.granulator_01_grains11_curLen),i=!1)),this.granulator_01_grains11_active){if(this.granulator_01_grains11_sampleOffset>=this.granulator_01_grains11_curLen)i=!0,this.granulator_01_grains11_active=!1,l=1;else{let a=this.granulator_01_grains11_curStart;this.granulator_01_grains11_backwards?a-=this.granulator_01_grains11_sampleOffset:a+=this.granulator_01_grains11_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains11_sampleOffset/this.granulator_01_grains11_curLen>1?1:this.granulator_01_grains11_sampleOffset/this.granulator_01_grains11_curLen<0?0:this.granulator_01_grains11_sampleOffset/this.granulator_01_grains11_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains11_sampleOffset+=this.granulator_01_grains11_curRate}return[n,l,i?1:0]}granulator_01_grains12_inactive(){return!this.granulator_01_grains12_active}granulator_01_grains12_reset(){this.granulator_01_grains12_active=!1}granulator_01_grains12_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains12_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains12_curRate||s<=0?(this.granulator_01_grains12_active&&(i=!0),this.granulator_01_grains12_curRate=0,this.granulator_01_grains12_active=!1):(this.granulator_01_grains12_curLen=s,this.granulator_01_grains12_active=!0,this.granulator_01_grains12_backwards=e<0,this.granulator_01_grains12_sampleOffset=0,this.granulator_01_grains12_curStart=r,this.granulator_01_grains12_backwards&&(this.granulator_01_grains12_curStart+=this.granulator_01_grains12_curLen),i=!1)),this.granulator_01_grains12_active){if(this.granulator_01_grains12_sampleOffset>=this.granulator_01_grains12_curLen)i=!0,this.granulator_01_grains12_active=!1,l=1;else{let a=this.granulator_01_grains12_curStart;this.granulator_01_grains12_backwards?a-=this.granulator_01_grains12_sampleOffset:a+=this.granulator_01_grains12_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains12_sampleOffset/this.granulator_01_grains12_curLen>1?1:this.granulator_01_grains12_sampleOffset/this.granulator_01_grains12_curLen<0?0:this.granulator_01_grains12_sampleOffset/this.granulator_01_grains12_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains12_sampleOffset+=this.granulator_01_grains12_curRate}return[n,l,i?1:0]}granulator_01_grains13_inactive(){return!this.granulator_01_grains13_active}granulator_01_grains13_reset(){this.granulator_01_grains13_active=!1}granulator_01_grains13_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains13_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains13_curRate||s<=0?(this.granulator_01_grains13_active&&(i=!0),this.granulator_01_grains13_curRate=0,this.granulator_01_grains13_active=!1):(this.granulator_01_grains13_curLen=s,this.granulator_01_grains13_active=!0,this.granulator_01_grains13_backwards=e<0,this.granulator_01_grains13_sampleOffset=0,this.granulator_01_grains13_curStart=r,this.granulator_01_grains13_backwards&&(this.granulator_01_grains13_curStart+=this.granulator_01_grains13_curLen),i=!1)),this.granulator_01_grains13_active){if(this.granulator_01_grains13_sampleOffset>=this.granulator_01_grains13_curLen)i=!0,this.granulator_01_grains13_active=!1,l=1;else{let a=this.granulator_01_grains13_curStart;this.granulator_01_grains13_backwards?a-=this.granulator_01_grains13_sampleOffset:a+=this.granulator_01_grains13_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains13_sampleOffset/this.granulator_01_grains13_curLen>1?1:this.granulator_01_grains13_sampleOffset/this.granulator_01_grains13_curLen<0?0:this.granulator_01_grains13_sampleOffset/this.granulator_01_grains13_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains13_sampleOffset+=this.granulator_01_grains13_curRate}return[n,l,i?1:0]}granulator_01_grains14_inactive(){return!this.granulator_01_grains14_active}granulator_01_grains14_reset(){this.granulator_01_grains14_active=!1}granulator_01_grains14_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains14_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains14_curRate||s<=0?(this.granulator_01_grains14_active&&(i=!0),this.granulator_01_grains14_curRate=0,this.granulator_01_grains14_active=!1):(this.granulator_01_grains14_curLen=s,this.granulator_01_grains14_active=!0,this.granulator_01_grains14_backwards=e<0,this.granulator_01_grains14_sampleOffset=0,this.granulator_01_grains14_curStart=r,this.granulator_01_grains14_backwards&&(this.granulator_01_grains14_curStart+=this.granulator_01_grains14_curLen),i=!1)),this.granulator_01_grains14_active){if(this.granulator_01_grains14_sampleOffset>=this.granulator_01_grains14_curLen)i=!0,this.granulator_01_grains14_active=!1,l=1;else{let a=this.granulator_01_grains14_curStart;this.granulator_01_grains14_backwards?a-=this.granulator_01_grains14_sampleOffset:a+=this.granulator_01_grains14_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains14_sampleOffset/this.granulator_01_grains14_curLen>1?1:this.granulator_01_grains14_sampleOffset/this.granulator_01_grains14_curLen<0?0:this.granulator_01_grains14_sampleOffset/this.granulator_01_grains14_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains14_sampleOffset+=this.granulator_01_grains14_curRate}return[n,l,i?1:0]}granulator_01_grains15_inactive(){return!this.granulator_01_grains15_active}granulator_01_grains15_reset(){this.granulator_01_grains15_active=!1}granulator_01_grains15_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains15_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains15_curRate||s<=0?(this.granulator_01_grains15_active&&(i=!0),this.granulator_01_grains15_curRate=0,this.granulator_01_grains15_active=!1):(this.granulator_01_grains15_curLen=s,this.granulator_01_grains15_active=!0,this.granulator_01_grains15_backwards=e<0,this.granulator_01_grains15_sampleOffset=0,this.granulator_01_grains15_curStart=r,this.granulator_01_grains15_backwards&&(this.granulator_01_grains15_curStart+=this.granulator_01_grains15_curLen),i=!1)),this.granulator_01_grains15_active){if(this.granulator_01_grains15_sampleOffset>=this.granulator_01_grains15_curLen)i=!0,this.granulator_01_grains15_active=!1,l=1;else{let a=this.granulator_01_grains15_curStart;this.granulator_01_grains15_backwards?a-=this.granulator_01_grains15_sampleOffset:a+=this.granulator_01_grains15_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains15_sampleOffset/this.granulator_01_grains15_curLen>1?1:this.granulator_01_grains15_sampleOffset/this.granulator_01_grains15_curLen<0?0:this.granulator_01_grains15_sampleOffset/this.granulator_01_grains15_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains15_sampleOffset+=this.granulator_01_grains15_curRate}return[n,l,i?1:0]}granulator_01_grains16_inactive(){return!this.granulator_01_grains16_active}granulator_01_grains16_reset(){this.granulator_01_grains16_active=!1}granulator_01_grains16_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains16_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains16_curRate||s<=0?(this.granulator_01_grains16_active&&(i=!0),this.granulator_01_grains16_curRate=0,this.granulator_01_grains16_active=!1):(this.granulator_01_grains16_curLen=s,this.granulator_01_grains16_active=!0,this.granulator_01_grains16_backwards=e<0,this.granulator_01_grains16_sampleOffset=0,this.granulator_01_grains16_curStart=r,this.granulator_01_grains16_backwards&&(this.granulator_01_grains16_curStart+=this.granulator_01_grains16_curLen),i=!1)),this.granulator_01_grains16_active){if(this.granulator_01_grains16_sampleOffset>=this.granulator_01_grains16_curLen)i=!0,this.granulator_01_grains16_active=!1,l=1;else{let a=this.granulator_01_grains16_curStart;this.granulator_01_grains16_backwards?a-=this.granulator_01_grains16_sampleOffset:a+=this.granulator_01_grains16_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains16_sampleOffset/this.granulator_01_grains16_curLen>1?1:this.granulator_01_grains16_sampleOffset/this.granulator_01_grains16_curLen<0?0:this.granulator_01_grains16_sampleOffset/this.granulator_01_grains16_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains16_sampleOffset+=this.granulator_01_grains16_curRate}return[n,l,i?1:0]}granulator_01_grains17_inactive(){return!this.granulator_01_grains17_active}granulator_01_grains17_reset(){this.granulator_01_grains17_active=!1}granulator_01_grains17_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains17_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains17_curRate||s<=0?(this.granulator_01_grains17_active&&(i=!0),this.granulator_01_grains17_curRate=0,this.granulator_01_grains17_active=!1):(this.granulator_01_grains17_curLen=s,this.granulator_01_grains17_active=!0,this.granulator_01_grains17_backwards=e<0,this.granulator_01_grains17_sampleOffset=0,this.granulator_01_grains17_curStart=r,this.granulator_01_grains17_backwards&&(this.granulator_01_grains17_curStart+=this.granulator_01_grains17_curLen),i=!1)),this.granulator_01_grains17_active){if(this.granulator_01_grains17_sampleOffset>=this.granulator_01_grains17_curLen)i=!0,this.granulator_01_grains17_active=!1,l=1;else{let a=this.granulator_01_grains17_curStart;this.granulator_01_grains17_backwards?a-=this.granulator_01_grains17_sampleOffset:a+=this.granulator_01_grains17_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains17_sampleOffset/this.granulator_01_grains17_curLen>1?1:this.granulator_01_grains17_sampleOffset/this.granulator_01_grains17_curLen<0?0:this.granulator_01_grains17_sampleOffset/this.granulator_01_grains17_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains17_sampleOffset+=this.granulator_01_grains17_curRate}return[n,l,i?1:0]}granulator_01_grains18_inactive(){return!this.granulator_01_grains18_active}granulator_01_grains18_reset(){this.granulator_01_grains18_active=!1}granulator_01_grains18_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains18_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains18_curRate||s<=0?(this.granulator_01_grains18_active&&(i=!0),this.granulator_01_grains18_curRate=0,this.granulator_01_grains18_active=!1):(this.granulator_01_grains18_curLen=s,this.granulator_01_grains18_active=!0,this.granulator_01_grains18_backwards=e<0,this.granulator_01_grains18_sampleOffset=0,this.granulator_01_grains18_curStart=r,this.granulator_01_grains18_backwards&&(this.granulator_01_grains18_curStart+=this.granulator_01_grains18_curLen),i=!1)),this.granulator_01_grains18_active){if(this.granulator_01_grains18_sampleOffset>=this.granulator_01_grains18_curLen)i=!0,this.granulator_01_grains18_active=!1,l=1;else{let a=this.granulator_01_grains18_curStart;this.granulator_01_grains18_backwards?a-=this.granulator_01_grains18_sampleOffset:a+=this.granulator_01_grains18_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains18_sampleOffset/this.granulator_01_grains18_curLen>1?1:this.granulator_01_grains18_sampleOffset/this.granulator_01_grains18_curLen<0?0:this.granulator_01_grains18_sampleOffset/this.granulator_01_grains18_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains18_sampleOffset+=this.granulator_01_grains18_curRate}return[n,l,i?1:0]}granulator_01_grains19_inactive(){return!this.granulator_01_grains19_active}granulator_01_grains19_reset(){this.granulator_01_grains19_active=!1}granulator_01_grains19_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains19_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains19_curRate||s<=0?(this.granulator_01_grains19_active&&(i=!0),this.granulator_01_grains19_curRate=0,this.granulator_01_grains19_active=!1):(this.granulator_01_grains19_curLen=s,this.granulator_01_grains19_active=!0,this.granulator_01_grains19_backwards=e<0,this.granulator_01_grains19_sampleOffset=0,this.granulator_01_grains19_curStart=r,this.granulator_01_grains19_backwards&&(this.granulator_01_grains19_curStart+=this.granulator_01_grains19_curLen),i=!1)),this.granulator_01_grains19_active){if(this.granulator_01_grains19_sampleOffset>=this.granulator_01_grains19_curLen)i=!0,this.granulator_01_grains19_active=!1,l=1;else{let a=this.granulator_01_grains19_curStart;this.granulator_01_grains19_backwards?a-=this.granulator_01_grains19_sampleOffset:a+=this.granulator_01_grains19_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains19_sampleOffset/this.granulator_01_grains19_curLen>1?1:this.granulator_01_grains19_sampleOffset/this.granulator_01_grains19_curLen<0?0:this.granulator_01_grains19_sampleOffset/this.granulator_01_grains19_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains19_sampleOffset+=this.granulator_01_grains19_curRate}return[n,l,i?1:0]}granulator_01_grains20_inactive(){return!this.granulator_01_grains20_active}granulator_01_grains20_reset(){this.granulator_01_grains20_active=!1}granulator_01_grains20_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains20_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains20_curRate||s<=0?(this.granulator_01_grains20_active&&(i=!0),this.granulator_01_grains20_curRate=0,this.granulator_01_grains20_active=!1):(this.granulator_01_grains20_curLen=s,this.granulator_01_grains20_active=!0,this.granulator_01_grains20_backwards=e<0,this.granulator_01_grains20_sampleOffset=0,this.granulator_01_grains20_curStart=r,this.granulator_01_grains20_backwards&&(this.granulator_01_grains20_curStart+=this.granulator_01_grains20_curLen),i=!1)),this.granulator_01_grains20_active){if(this.granulator_01_grains20_sampleOffset>=this.granulator_01_grains20_curLen)i=!0,this.granulator_01_grains20_active=!1,l=1;else{let a=this.granulator_01_grains20_curStart;this.granulator_01_grains20_backwards?a-=this.granulator_01_grains20_sampleOffset:a+=this.granulator_01_grains20_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains20_sampleOffset/this.granulator_01_grains20_curLen>1?1:this.granulator_01_grains20_sampleOffset/this.granulator_01_grains20_curLen<0?0:this.granulator_01_grains20_sampleOffset/this.granulator_01_grains20_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains20_sampleOffset+=this.granulator_01_grains20_curRate}return[n,l,i?1:0]}granulator_01_grains21_inactive(){return!this.granulator_01_grains21_active}granulator_01_grains21_reset(){this.granulator_01_grains21_active=!1}granulator_01_grains21_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains21_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains21_curRate||s<=0?(this.granulator_01_grains21_active&&(i=!0),this.granulator_01_grains21_curRate=0,this.granulator_01_grains21_active=!1):(this.granulator_01_grains21_curLen=s,this.granulator_01_grains21_active=!0,this.granulator_01_grains21_backwards=e<0,this.granulator_01_grains21_sampleOffset=0,this.granulator_01_grains21_curStart=r,this.granulator_01_grains21_backwards&&(this.granulator_01_grains21_curStart+=this.granulator_01_grains21_curLen),i=!1)),this.granulator_01_grains21_active){if(this.granulator_01_grains21_sampleOffset>=this.granulator_01_grains21_curLen)i=!0,this.granulator_01_grains21_active=!1,l=1;else{let a=this.granulator_01_grains21_curStart;this.granulator_01_grains21_backwards?a-=this.granulator_01_grains21_sampleOffset:a+=this.granulator_01_grains21_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains21_sampleOffset/this.granulator_01_grains21_curLen>1?1:this.granulator_01_grains21_sampleOffset/this.granulator_01_grains21_curLen<0?0:this.granulator_01_grains21_sampleOffset/this.granulator_01_grains21_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains21_sampleOffset+=this.granulator_01_grains21_curRate}return[n,l,i?1:0]}granulator_01_grains22_inactive(){return!this.granulator_01_grains22_active}granulator_01_grains22_reset(){this.granulator_01_grains22_active=!1}granulator_01_grains22_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains22_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains22_curRate||s<=0?(this.granulator_01_grains22_active&&(i=!0),this.granulator_01_grains22_curRate=0,this.granulator_01_grains22_active=!1):(this.granulator_01_grains22_curLen=s,this.granulator_01_grains22_active=!0,this.granulator_01_grains22_backwards=e<0,this.granulator_01_grains22_sampleOffset=0,this.granulator_01_grains22_curStart=r,this.granulator_01_grains22_backwards&&(this.granulator_01_grains22_curStart+=this.granulator_01_grains22_curLen),i=!1)),this.granulator_01_grains22_active){if(this.granulator_01_grains22_sampleOffset>=this.granulator_01_grains22_curLen)i=!0,this.granulator_01_grains22_active=!1,l=1;else{let a=this.granulator_01_grains22_curStart;this.granulator_01_grains22_backwards?a-=this.granulator_01_grains22_sampleOffset:a+=this.granulator_01_grains22_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains22_sampleOffset/this.granulator_01_grains22_curLen>1?1:this.granulator_01_grains22_sampleOffset/this.granulator_01_grains22_curLen<0?0:this.granulator_01_grains22_sampleOffset/this.granulator_01_grains22_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains22_sampleOffset+=this.granulator_01_grains22_curRate}return[n,l,i?1:0]}granulator_01_grains23_inactive(){return!this.granulator_01_grains23_active}granulator_01_grains23_reset(){this.granulator_01_grains23_active=!1}granulator_01_grains23_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains23_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains23_curRate||s<=0?(this.granulator_01_grains23_active&&(i=!0),this.granulator_01_grains23_curRate=0,this.granulator_01_grains23_active=!1):(this.granulator_01_grains23_curLen=s,this.granulator_01_grains23_active=!0,this.granulator_01_grains23_backwards=e<0,this.granulator_01_grains23_sampleOffset=0,this.granulator_01_grains23_curStart=r,this.granulator_01_grains23_backwards&&(this.granulator_01_grains23_curStart+=this.granulator_01_grains23_curLen),i=!1)),this.granulator_01_grains23_active){if(this.granulator_01_grains23_sampleOffset>=this.granulator_01_grains23_curLen)i=!0,this.granulator_01_grains23_active=!1,l=1;else{let a=this.granulator_01_grains23_curStart;this.granulator_01_grains23_backwards?a-=this.granulator_01_grains23_sampleOffset:a+=this.granulator_01_grains23_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains23_sampleOffset/this.granulator_01_grains23_curLen>1?1:this.granulator_01_grains23_sampleOffset/this.granulator_01_grains23_curLen<0?0:this.granulator_01_grains23_sampleOffset/this.granulator_01_grains23_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains23_sampleOffset+=this.granulator_01_grains23_curRate}return[n,l,i?1:0]}granulator_01_grains24_inactive(){return!this.granulator_01_grains24_active}granulator_01_grains24_reset(){this.granulator_01_grains24_active=!1}granulator_01_grains24_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains24_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains24_curRate||s<=0?(this.granulator_01_grains24_active&&(i=!0),this.granulator_01_grains24_curRate=0,this.granulator_01_grains24_active=!1):(this.granulator_01_grains24_curLen=s,this.granulator_01_grains24_active=!0,this.granulator_01_grains24_backwards=e<0,this.granulator_01_grains24_sampleOffset=0,this.granulator_01_grains24_curStart=r,this.granulator_01_grains24_backwards&&(this.granulator_01_grains24_curStart+=this.granulator_01_grains24_curLen),i=!1)),this.granulator_01_grains24_active){if(this.granulator_01_grains24_sampleOffset>=this.granulator_01_grains24_curLen)i=!0,this.granulator_01_grains24_active=!1,l=1;else{let a=this.granulator_01_grains24_curStart;this.granulator_01_grains24_backwards?a-=this.granulator_01_grains24_sampleOffset:a+=this.granulator_01_grains24_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains24_sampleOffset/this.granulator_01_grains24_curLen>1?1:this.granulator_01_grains24_sampleOffset/this.granulator_01_grains24_curLen<0?0:this.granulator_01_grains24_sampleOffset/this.granulator_01_grains24_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains24_sampleOffset+=this.granulator_01_grains24_curRate}return[n,l,i?1:0]}granulator_01_grains25_inactive(){return!this.granulator_01_grains25_active}granulator_01_grains25_reset(){this.granulator_01_grains25_active=!1}granulator_01_grains25_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains25_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains25_curRate||s<=0?(this.granulator_01_grains25_active&&(i=!0),this.granulator_01_grains25_curRate=0,this.granulator_01_grains25_active=!1):(this.granulator_01_grains25_curLen=s,this.granulator_01_grains25_active=!0,this.granulator_01_grains25_backwards=e<0,this.granulator_01_grains25_sampleOffset=0,this.granulator_01_grains25_curStart=r,this.granulator_01_grains25_backwards&&(this.granulator_01_grains25_curStart+=this.granulator_01_grains25_curLen),i=!1)),this.granulator_01_grains25_active){if(this.granulator_01_grains25_sampleOffset>=this.granulator_01_grains25_curLen)i=!0,this.granulator_01_grains25_active=!1,l=1;else{let a=this.granulator_01_grains25_curStart;this.granulator_01_grains25_backwards?a-=this.granulator_01_grains25_sampleOffset:a+=this.granulator_01_grains25_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains25_sampleOffset/this.granulator_01_grains25_curLen>1?1:this.granulator_01_grains25_sampleOffset/this.granulator_01_grains25_curLen<0?0:this.granulator_01_grains25_sampleOffset/this.granulator_01_grains25_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains25_sampleOffset+=this.granulator_01_grains25_curRate}return[n,l,i?1:0]}granulator_01_grains26_inactive(){return!this.granulator_01_grains26_active}granulator_01_grains26_reset(){this.granulator_01_grains26_active=!1}granulator_01_grains26_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains26_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains26_curRate||s<=0?(this.granulator_01_grains26_active&&(i=!0),this.granulator_01_grains26_curRate=0,this.granulator_01_grains26_active=!1):(this.granulator_01_grains26_curLen=s,this.granulator_01_grains26_active=!0,this.granulator_01_grains26_backwards=e<0,this.granulator_01_grains26_sampleOffset=0,this.granulator_01_grains26_curStart=r,this.granulator_01_grains26_backwards&&(this.granulator_01_grains26_curStart+=this.granulator_01_grains26_curLen),i=!1)),this.granulator_01_grains26_active){if(this.granulator_01_grains26_sampleOffset>=this.granulator_01_grains26_curLen)i=!0,this.granulator_01_grains26_active=!1,l=1;else{let a=this.granulator_01_grains26_curStart;this.granulator_01_grains26_backwards?a-=this.granulator_01_grains26_sampleOffset:a+=this.granulator_01_grains26_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains26_sampleOffset/this.granulator_01_grains26_curLen>1?1:this.granulator_01_grains26_sampleOffset/this.granulator_01_grains26_curLen<0?0:this.granulator_01_grains26_sampleOffset/this.granulator_01_grains26_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains26_sampleOffset+=this.granulator_01_grains26_curRate}return[n,l,i?1:0]}granulator_01_grains27_inactive(){return!this.granulator_01_grains27_active}granulator_01_grains27_reset(){this.granulator_01_grains27_active=!1}granulator_01_grains27_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains27_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains27_curRate||s<=0?(this.granulator_01_grains27_active&&(i=!0),this.granulator_01_grains27_curRate=0,this.granulator_01_grains27_active=!1):(this.granulator_01_grains27_curLen=s,this.granulator_01_grains27_active=!0,this.granulator_01_grains27_backwards=e<0,this.granulator_01_grains27_sampleOffset=0,this.granulator_01_grains27_curStart=r,this.granulator_01_grains27_backwards&&(this.granulator_01_grains27_curStart+=this.granulator_01_grains27_curLen),i=!1)),this.granulator_01_grains27_active){if(this.granulator_01_grains27_sampleOffset>=this.granulator_01_grains27_curLen)i=!0,this.granulator_01_grains27_active=!1,l=1;else{let a=this.granulator_01_grains27_curStart;this.granulator_01_grains27_backwards?a-=this.granulator_01_grains27_sampleOffset:a+=this.granulator_01_grains27_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains27_sampleOffset/this.granulator_01_grains27_curLen>1?1:this.granulator_01_grains27_sampleOffset/this.granulator_01_grains27_curLen<0?0:this.granulator_01_grains27_sampleOffset/this.granulator_01_grains27_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains27_sampleOffset+=this.granulator_01_grains27_curRate}return[n,l,i?1:0]}granulator_01_grains28_inactive(){return!this.granulator_01_grains28_active}granulator_01_grains28_reset(){this.granulator_01_grains28_active=!1}granulator_01_grains28_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains28_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains28_curRate||s<=0?(this.granulator_01_grains28_active&&(i=!0),this.granulator_01_grains28_curRate=0,this.granulator_01_grains28_active=!1):(this.granulator_01_grains28_curLen=s,this.granulator_01_grains28_active=!0,this.granulator_01_grains28_backwards=e<0,this.granulator_01_grains28_sampleOffset=0,this.granulator_01_grains28_curStart=r,this.granulator_01_grains28_backwards&&(this.granulator_01_grains28_curStart+=this.granulator_01_grains28_curLen),i=!1)),this.granulator_01_grains28_active){if(this.granulator_01_grains28_sampleOffset>=this.granulator_01_grains28_curLen)i=!0,this.granulator_01_grains28_active=!1,l=1;else{let a=this.granulator_01_grains28_curStart;this.granulator_01_grains28_backwards?a-=this.granulator_01_grains28_sampleOffset:a+=this.granulator_01_grains28_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains28_sampleOffset/this.granulator_01_grains28_curLen>1?1:this.granulator_01_grains28_sampleOffset/this.granulator_01_grains28_curLen<0?0:this.granulator_01_grains28_sampleOffset/this.granulator_01_grains28_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains28_sampleOffset+=this.granulator_01_grains28_curRate}return[n,l,i?1:0]}granulator_01_grains29_inactive(){return!this.granulator_01_grains29_active}granulator_01_grains29_reset(){this.granulator_01_grains29_active=!1}granulator_01_grains29_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains29_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains29_curRate||s<=0?(this.granulator_01_grains29_active&&(i=!0),this.granulator_01_grains29_curRate=0,this.granulator_01_grains29_active=!1):(this.granulator_01_grains29_curLen=s,this.granulator_01_grains29_active=!0,this.granulator_01_grains29_backwards=e<0,this.granulator_01_grains29_sampleOffset=0,this.granulator_01_grains29_curStart=r,this.granulator_01_grains29_backwards&&(this.granulator_01_grains29_curStart+=this.granulator_01_grains29_curLen),i=!1)),this.granulator_01_grains29_active){if(this.granulator_01_grains29_sampleOffset>=this.granulator_01_grains29_curLen)i=!0,this.granulator_01_grains29_active=!1,l=1;else{let a=this.granulator_01_grains29_curStart;this.granulator_01_grains29_backwards?a-=this.granulator_01_grains29_sampleOffset:a+=this.granulator_01_grains29_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains29_sampleOffset/this.granulator_01_grains29_curLen>1?1:this.granulator_01_grains29_sampleOffset/this.granulator_01_grains29_curLen<0?0:this.granulator_01_grains29_sampleOffset/this.granulator_01_grains29_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains29_sampleOffset+=this.granulator_01_grains29_curRate}return[n,l,i?1:0]}granulator_01_grains30_inactive(){return!this.granulator_01_grains30_active}granulator_01_grains30_reset(){this.granulator_01_grains30_active=!1}granulator_01_grains30_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains30_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains30_curRate||s<=0?(this.granulator_01_grains30_active&&(i=!0),this.granulator_01_grains30_curRate=0,this.granulator_01_grains30_active=!1):(this.granulator_01_grains30_curLen=s,this.granulator_01_grains30_active=!0,this.granulator_01_grains30_backwards=e<0,this.granulator_01_grains30_sampleOffset=0,this.granulator_01_grains30_curStart=r,this.granulator_01_grains30_backwards&&(this.granulator_01_grains30_curStart+=this.granulator_01_grains30_curLen),i=!1)),this.granulator_01_grains30_active){if(this.granulator_01_grains30_sampleOffset>=this.granulator_01_grains30_curLen)i=!0,this.granulator_01_grains30_active=!1,l=1;else{let a=this.granulator_01_grains30_curStart;this.granulator_01_grains30_backwards?a-=this.granulator_01_grains30_sampleOffset:a+=this.granulator_01_grains30_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains30_sampleOffset/this.granulator_01_grains30_curLen>1?1:this.granulator_01_grains30_sampleOffset/this.granulator_01_grains30_curLen<0?0:this.granulator_01_grains30_sampleOffset/this.granulator_01_grains30_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains30_sampleOffset+=this.granulator_01_grains30_curRate}return[n,l,i?1:0]}granulator_01_grains31_inactive(){return!this.granulator_01_grains31_active}granulator_01_grains31_reset(){this.granulator_01_grains31_active=!1}granulator_01_grains31_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains31_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains31_curRate||s<=0?(this.granulator_01_grains31_active&&(i=!0),this.granulator_01_grains31_curRate=0,this.granulator_01_grains31_active=!1):(this.granulator_01_grains31_curLen=s,this.granulator_01_grains31_active=!0,this.granulator_01_grains31_backwards=e<0,this.granulator_01_grains31_sampleOffset=0,this.granulator_01_grains31_curStart=r,this.granulator_01_grains31_backwards&&(this.granulator_01_grains31_curStart+=this.granulator_01_grains31_curLen),i=!1)),this.granulator_01_grains31_active){if(this.granulator_01_grains31_sampleOffset>=this.granulator_01_grains31_curLen)i=!0,this.granulator_01_grains31_active=!1,l=1;else{let a=this.granulator_01_grains31_curStart;this.granulator_01_grains31_backwards?a-=this.granulator_01_grains31_sampleOffset:a+=this.granulator_01_grains31_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains31_sampleOffset/this.granulator_01_grains31_curLen>1?1:this.granulator_01_grains31_sampleOffset/this.granulator_01_grains31_curLen<0?0:this.granulator_01_grains31_sampleOffset/this.granulator_01_grains31_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains31_sampleOffset+=this.granulator_01_grains31_curRate}return[n,l,i?1:0]}granulator_01_grains32_inactive(){return!this.granulator_01_grains32_active}granulator_01_grains32_reset(){this.granulator_01_grains32_active=!1}granulator_01_grains32_next(t,a,r,s,e,_){let i=!1,n=0,l=0;const u=t.getSize();if(a>0&&(this.granulator_01_grains32_curRate=rnbo_abs(e*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains32_curRate||s<=0?(this.granulator_01_grains32_active&&(i=!0),this.granulator_01_grains32_curRate=0,this.granulator_01_grains32_active=!1):(this.granulator_01_grains32_curLen=s,this.granulator_01_grains32_active=!0,this.granulator_01_grains32_backwards=e<0,this.granulator_01_grains32_sampleOffset=0,this.granulator_01_grains32_curStart=r,this.granulator_01_grains32_backwards&&(this.granulator_01_grains32_curStart+=this.granulator_01_grains32_curLen),i=!1)),this.granulator_01_grains32_active){if(this.granulator_01_grains32_sampleOffset>=this.granulator_01_grains32_curLen)i=!0,this.granulator_01_grains32_active=!1,l=1;else{let a=this.granulator_01_grains32_curStart;this.granulator_01_grains32_backwards?a-=this.granulator_01_grains32_sampleOffset:a+=this.granulator_01_grains32_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains32_sampleOffset/this.granulator_01_grains32_curLen>1?1:this.granulator_01_grains32_sampleOffset/this.granulator_01_grains32_curLen<0?0:this.granulator_01_grains32_sampleOffset/this.granulator_01_grains32_curLen,0==u?n=0:(_=this.bufferbindchannel(_,r,1),a=this.bufferbindindex(a,0,u,3),n=this.bufferreadsample(t,a,_,0,u,0))}this.granulator_01_grains32_sampleOffset+=this.granulator_01_grains32_curRate}return[n,l,i?1:0]}granulator_01_grains_inactive(t){switch(t){case 0:return this.granulator_01_grains1_inactive();case 1:return this.granulator_01_grains2_inactive();case 2:return this.granulator_01_grains3_inactive();case 3:return this.granulator_01_grains4_inactive();case 4:return this.granulator_01_grains5_inactive();case 5:return this.granulator_01_grains6_inactive();case 6:return this.granulator_01_grains7_inactive();case 7:return this.granulator_01_grains8_inactive();case 8:return this.granulator_01_grains9_inactive();case 9:return this.granulator_01_grains10_inactive();case 10:return this.granulator_01_grains11_inactive();case 11:return this.granulator_01_grains12_inactive();case 12:return this.granulator_01_grains13_inactive();case 13:return this.granulator_01_grains14_inactive();case 14:return this.granulator_01_grains15_inactive();case 15:return this.granulator_01_grains16_inactive();case 16:return this.granulator_01_grains17_inactive();case 17:return this.granulator_01_grains18_inactive();case 18:return this.granulator_01_grains19_inactive();case 19:return this.granulator_01_grains20_inactive();case 20:return this.granulator_01_grains21_inactive();case 21:return this.granulator_01_grains22_inactive();case 22:return this.granulator_01_grains23_inactive();case 23:return this.granulator_01_grains24_inactive();case 24:return this.granulator_01_grains25_inactive();case 25:return this.granulator_01_grains26_inactive();case 26:return this.granulator_01_grains27_inactive();case 27:return this.granulator_01_grains28_inactive();case 28:return this.granulator_01_grains29_inactive();case 29:return this.granulator_01_grains30_inactive();case 30:return this.granulator_01_grains31_inactive();default:return this.granulator_01_grains32_inactive()}return 0}granulator_01_grains_reset(t){switch(t){case 0:return this.granulator_01_grains1_reset();case 1:return this.granulator_01_grains2_reset();case 2:return this.granulator_01_grains3_reset();case 3:return this.granulator_01_grains4_reset();case 4:return this.granulator_01_grains5_reset();case 5:return this.granulator_01_grains6_reset();case 6:return this.granulator_01_grains7_reset();case 7:return this.granulator_01_grains8_reset();case 8:return this.granulator_01_grains9_reset();case 9:return this.granulator_01_grains10_reset();case 10:return this.granulator_01_grains11_reset();case 11:return this.granulator_01_grains12_reset();case 12:return this.granulator_01_grains13_reset();case 13:return this.granulator_01_grains14_reset();case 14:return this.granulator_01_grains15_reset();case 15:return this.granulator_01_grains16_reset();case 16:return this.granulator_01_grains17_reset();case 17:return this.granulator_01_grains18_reset();case 18:return this.granulator_01_grains19_reset();case 19:return this.granulator_01_grains20_reset();case 20:return this.granulator_01_grains21_reset();case 21:return this.granulator_01_grains22_reset();case 22:return this.granulator_01_grains23_reset();case 23:return this.granulator_01_grains24_reset();case 24:return this.granulator_01_grains25_reset();case 25:return this.granulator_01_grains26_reset();case 26:return this.granulator_01_grains27_reset();case 27:return this.granulator_01_grains28_reset();case 28:return this.granulator_01_grains29_reset();case 29:return this.granulator_01_grains30_reset();case 30:return this.granulator_01_grains31_reset();default:return this.granulator_01_grains32_reset()}}granulator_01_grains_next(t,a,r,s,e,_,i){switch(t){case 0:return this.granulator_01_grains1_next(a,r,s,e,_,i);case 1:return this.granulator_01_grains2_next(a,r,s,e,_,i);case 2:return this.granulator_01_grains3_next(a,r,s,e,_,i);case 3:return this.granulator_01_grains4_next(a,r,s,e,_,i);case 4:return this.granulator_01_grains5_next(a,r,s,e,_,i);case 5:return this.granulator_01_grains6_next(a,r,s,e,_,i);case 6:return this.granulator_01_grains7_next(a,r,s,e,_,i);case 7:return this.granulator_01_grains8_next(a,r,s,e,_,i);case 8:return this.granulator_01_grains9_next(a,r,s,e,_,i);case 9:return this.granulator_01_grains10_next(a,r,s,e,_,i);case 10:return this.granulator_01_grains11_next(a,r,s,e,_,i);case 11:return this.granulator_01_grains12_next(a,r,s,e,_,i);case 12:return this.granulator_01_grains13_next(a,r,s,e,_,i);case 13:return this.granulator_01_grains14_next(a,r,s,e,_,i);case 14:return this.granulator_01_grains15_next(a,r,s,e,_,i);case 15:return this.granulator_01_grains16_next(a,r,s,e,_,i);case 16:return this.granulator_01_grains17_next(a,r,s,e,_,i);case 17:return this.granulator_01_grains18_next(a,r,s,e,_,i);case 18:return this.granulator_01_grains19_next(a,r,s,e,_,i);case 19:return this.granulator_01_grains20_next(a,r,s,e,_,i);case 20:return this.granulator_01_grains21_next(a,r,s,e,_,i);case 21:return this.granulator_01_grains22_next(a,r,s,e,_,i);case 22:return this.granulator_01_grains23_next(a,r,s,e,_,i);case 23:return this.granulator_01_grains24_next(a,r,s,e,_,i);case 24:return this.granulator_01_grains25_next(a,r,s,e,_,i);case 25:return this.granulator_01_grains26_next(a,r,s,e,_,i);case 26:return this.granulator_01_grains27_next(a,r,s,e,_,i);case 27:return this.granulator_01_grains28_next(a,r,s,e,_,i);case 28:return this.granulator_01_grains29_next(a,r,s,e,_,i);case 29:return this.granulator_01_grains30_next(a,r,s,e,_,i);case 30:return this.granulator_01_grains31_next(a,r,s,e,_,i);default:return this.granulator_01_grains32_next(a,r,s,e,_,i)}return 0}granulator_01_init(){this.granulator_01_edgedetect_init();for(var t=0;t<32;t++)for(var a=0;a<2;a++)this.granulator_01_grainPan[t][a]=1}granulator_01_bufferUpdated(){this.granulator_01_buffer.getSampleRate(),this.granulator_01_buffer.getSize();for(var t=0;t<32;t++)this.granulator_01_grains_reset(t)}granulator_01_onSampleRateChanged(t){RNBO_UNUSED(t),this.granulator_01_bufferUpdated()}param_02_getPresetValue(t){t.value=this.param_02_value}param_02_setPresetValue(t){stateIsEmpty(t)||this.param_02_value_set(t.value)}adsr_01_dspsetup(t){this.adsr_01_setupDone&&!t||(this.adsr_01_mspersamp=1e3/this.sr,this.adsr_01_setupDone=!0)}noise_tilde_01_init(){this.noise_tilde_01_last=systemticks()+this.voice()+this.random(0,1e4),this.noise_tilde_01_recip=2/8388607}param_03_getPresetValue(t){t.value=this.param_03_value}param_03_setPresetValue(t){stateIsEmpty(t)||this.param_03_value_set(t.value)}param_04_getPresetValue(t){t.value=this.param_04_value}param_04_setPresetValue(t){stateIsEmpty(t)||this.param_04_value_set(t.value)}ip_03_init(){this.ip_03_lastValue=this.ip_03_value}ip_03_fillSigBuf(){if(this.ip_03_sigbuf){var t=this.sampleOffsetIntoNextAudioBuffer;t>=this.vs&&(t=this.vs-1);for(var a=this.ip_03_lastIndex;a<t;a++)this.ip_03_resetCount>0?(this.ip_03_sigbuf[a]=1,this.ip_03_resetCount--):this.ip_03_sigbuf[a]=this.ip_03_lastValue;this.ip_03_lastIndex=t}}ip_03_dspsetup(t){this.ip_03_setupDone&&!t||(this.ip_03_lastIndex=0,this.ip_03_setupDone=!0)}gen_01_mtof_2_next(t,a){if(RNBO_UNUSED(a),t==this.gen_01_mtof_2_lastInValue&&440==this.gen_01_mtof_2_lastTuning)return this.gen_01_mtof_2_lastOutValue;this.gen_01_mtof_2_lastInValue=t,this.gen_01_mtof_2_lastTuning=440;let r=0;return r=rnbo_exp(.057762265*(t-69)),this.gen_01_mtof_2_lastOutValue=440*r,this.gen_01_mtof_2_lastOutValue}gen_01_mtof_2_reset(){this.gen_01_mtof_2_lastInValue=0,this.gen_01_mtof_2_lastOutValue=0,this.gen_01_mtof_2_lastTuning=0}param_05_getPresetValue(t){t.value=this.param_05_value}param_05_setPresetValue(t){stateIsEmpty(t)||this.param_05_value_set(t.value)}ip_04_init(){this.ip_04_lastValue=this.ip_04_value}ip_04_dspsetup(t){this.ip_04_setupDone&&!t||(this.ip_04_lastIndex=0,this.ip_04_setupDone=!0)}noise_tilde_02_init(){this.noise_tilde_02_last=systemticks()+this.voice()+this.random(0,1e4),this.noise_tilde_02_recip=2/8388607}midiouthelper_sendMidi(t){this.midiouthelper_midiout_set(t)}stackprotect_check(){return this.stackprotect_count++,this.stackprotect_count>128&&(console.log(\"STACK OVERFLOW DETECTED - stopped processing branch !\"),!0)}updateTime(t){this._currentTime=t,this.sampleOffsetIntoNextAudioBuffer=rnbo_fround(this.msToSamps(t-this.getEngine().getCurrentTime(),this.sr)),this.sampleOffsetIntoNextAudioBuffer>=this.vs&&(this.sampleOffsetIntoNextAudioBuffer=this.vs-1),this.sampleOffsetIntoNextAudioBuffer<0&&(this.sampleOffsetIntoNextAudioBuffer=0)}assign_defaults(){}setEngineAndPatcher(t,a){this._engineInterface=t,this._parentPatcher=a}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOPatcher{constructor(){this.ip_05_value=0,this.ip_05_impulse=0,this.sampstohz_tilde_01_samps=0,this.svf_tilde_01_x=0,this.svf_tilde_01_freq=40,this.svf_tilde_01_q=.5,this.dspexpr_11_in1=0,this.dspexpr_11_in2=1,this.dspexpr_12_in1=0,this.dspexpr_12_in2=1,this.dspexpr_13_in1=0,this.dspexpr_14_in1=0,this.dspexpr_14_in2=0,this.phasor_02_freq=0,this.p_02_target=0,this.p_02_midiin=0,this.dspexpr_15_in1=0,this.dspexpr_15_in2=0,this.limi_01_bypass=0,this.limi_01_dcblock=0,this.limi_01_lookahead=100,this.limi_01_lookahead_setter(this.limi_01_lookahead),this.limi_01_preamp=0,this.limi_01_preamp_setter(this.limi_01_preamp),this.limi_01_postamp=0,this.limi_01_postamp_setter(this.limi_01_postamp),this.limi_01_threshold=0,this.limi_01_threshold_setter(this.limi_01_threshold),this.limi_01_release=1e3,this.svf_tilde_02_x=0,this.svf_tilde_02_freq=40,this.svf_tilde_02_q=.5,this.dspexpr_16_in1=0,this.dspexpr_16_in2=0,this.dspexpr_17_in1=0,this.dspexpr_17_in2=0,this.midiin_01_port=0,this.param_06_value=.5,this.pak_01_in1=20,this.pak_01_in2=20,this.pak_01_in3=.8,this.pak_01_in4=500,this.param_07_value=20,this.expr_05_in1=0,this.expr_05_in2=100,this.expr_05_out1=0,this.mstosamps_01_ms=0,this.mstosamps_02_ms=0,this.param_08_value=0,this.param_09_value=50,this.param_10_value=20,this.param_11_value=100,this.dspexpr_18_in1=0,this.param_12_value=0,this.data_01_sizeout=0,this.data_01_size=0,this.data_01_sizems=0,this.data_01_channels=2,this.data_02_sizeout=0,this.data_02_size=0,this.data_02_sizems=0,this.data_02_channels=2,this.param_13_value=20,this.param_14_value=.8,this.data_03_sizeout=0,this.data_03_size=0,this.data_03_sizems=0,this.data_03_channels=2,this.param_15_value=500,this.data_04_sizeout=0,this.data_04_size=0,this.data_04_sizems=0,this.data_04_channels=1,this.midinotecontroller_01_currenttarget=0,this.midinotecontroller_01_midiin=0,this._currentTime=0,this.audioProcessSampleCount=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.signals=new Array(5),this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.ip_05_lastIndex=0,this.ip_05_lastValue=0,this.ip_05_resetCount=0,this.ip_05_sigbuf=0,this.ip_05_setupDone=!1,this.dim_01_buffer=0,this.svf_tilde_01_low=0,this.svf_tilde_01_high=0,this.svf_tilde_01_band=0,this.svf_tilde_01_notch=0,this.svf_tilde_01__freq=0,this.svf_tilde_01__q=0,this.svf_tilde_01_dFreq_prev=0,this.svf_tilde_01_dQ_prev=0,this.svf_tilde_01_setupDone=!1,this.phasor_02_sigbuf=0,this.phasor_02_lastLockedPhase=0,this.phasor_02_conv=0,this.phasor_02_ph_currentPhase=0,this.phasor_02_ph_conv=0,this.phasor_02_setupDone=!1,this.p_02_currentStatus=-1,this.p_02_mididata=new Array(3),this.limi_01_lookaheadBuffers=Array(2).fill(0).map(t=>Array(512).fill(0)),this.limi_01_gainBuffer=Array(512).fill(0),this.limi_01_last=0,this.limi_01_lookaheadIndex=0,this.limi_01_recover=0,this.limi_01_lookaheadInv=0,this.limi_01_dc1_xm1=0,this.limi_01_dc1_ym1=0,this.limi_01_dc2_xm1=0,this.limi_01_dc2_ym1=0,this.limi_01_setupDone=!1,this.svf_tilde_02_low=0,this.svf_tilde_02_high=0,this.svf_tilde_02_band=0,this.svf_tilde_02_notch=0,this.svf_tilde_02__freq=0,this.svf_tilde_02__q=0,this.svf_tilde_02_dFreq_prev=0,this.svf_tilde_02_dQ_prev=0,this.svf_tilde_02_setupDone=!1,this.param_06_lastValue=0,this.param_07_lastValue=0,this.param_08_lastValue=0,this.param_09_lastValue=0,this.param_10_lastValue=0,this.param_11_lastValue=0,this.param_12_lastValue=0,this.data_01_buffer=0,this.data_01_sizemode=0,this.data_01_setupDone=!1,this.data_02_buffer=0,this.data_02_sizemode=0,this.data_02_setupDone=!1,this.param_13_lastValue=0,this.param_14_lastValue=0,this.data_03_buffer=0,this.data_03_sizemode=0,this.data_03_setupDone=!1,this.param_15_lastValue=0,this.data_04_buffer=0,this.data_04_sizemode=0,this.data_04_setupDone=!1,this.midinotecontroller_01_currentStatus=-1,this.midinotecontroller_01_status=-1,this.midinotecontroller_01_byte1=-1,this.midinotecontroller_01_zone_masterchannel=1,this.midinotecontroller_01_zone_numnotechannels=15,this.midinotecontroller_01_zone_masterpitchbendrange=2,this.midinotecontroller_01_zone_pernotepitchbendrange=48,this.midinotecontroller_01_channel_pitchbend=new Array(16).fill(8192),this.midinotecontroller_01_channel_pressure=new Array(16).fill(0),this.midinotecontroller_01_channel_timbre=new Array(16).fill(0),this.midinotecontroller_01_channel_sustain=new Array(16),this.midinotecontroller_01_voice_lastontime=[-1,-1,-1,-1,-1,-1,-1,-1],this.midinotecontroller_01_voice_notenumber=[0,0,0,0,0,0,0,0],this.midinotecontroller_01_voice_channel=[0,0,0,0,0,0,0,0],this.midinotecontroller_01_voice_state=[0,0,0,0,0,0,0,0],this.midinotecontroller_01_maxnotesdown=128,this.midinotecontroller_01_notesdown=new Array(129).fill(0),this.midinotecontroller_01_note_lastvelocity=new Array(128).fill(0),this.midinotecontroller_01_muteval=[0,0],this.globaltransport_tempo=0,this.globaltransport_tempoNeedsReset=!1,this.globaltransport_lastTempo=120,this.globaltransport_state=0,this.globaltransport_stateNeedsReset=!1,this.globaltransport_lastState=0,this.globaltransport_beatTimeChanges=[0,0],this.globaltransport_timeSignatureChanges=[4,4,0],this.globaltransport_notify=!1,this.globaltransport_setupDone=!1,this.stackprotect_count=0,this.dim_01_bufferobj=0,this.RNBODefaultSinus=0,this.RNBODefaultMtofLookupTable256=0,this.harp_riff=0,this.jongly=0,this.big=0,this.usr_buff=0,this._voiceIndex=0,this._noteNumber=0,this.isMuted=1,this.paramInitIndices=[],this.paramInitOrder=[],this.p_02=new Array}listquicksort(t,a,r,s,e){if(r<s){var _=this.listpartition(t,a,r,s,e);this.listquicksort(t,a,r,_-1,e),this.listquicksort(t,a,_+1,s,e)}}listpartition(t,a,r,s,e){for(var _=t[s],i=r-1,n=r;n<=s-1;n++){var l=e&&t[n]<=_,u=!e&&t[n]>=_;(l||u)&&(i++,this.listswapelements(t,i,n),this.listswapelements(a,i,n))}return i++,this.listswapelements(t,i,s),this.listswapelements(a,i,s),i}listswapelements(t,a,r){var s=t[a];t[a]=t[r],t[r]=s}dim(t){return t.getSize()}sampstoms(t){return 1e3*t/this.sr}samplerate(){return this.sr}mstosamps(t){return t*this.sr*.001}vectorsize(){return this.vs}currenttime(){return this._currentTime}tempo(){return this.getTopLevelPatcher().globaltransport_getTempo()}mstobeats(t){return t*this.tempo()*.008/480}param_06_value_set(t){t=this.param_06_value_constrain(t),this.param_06_value=t,this.sendParameter(0),this.param_06_value!=this.param_06_lastValue&&(this.getEngine().presetTouched(),this.param_06_lastValue=this.param_06_value),this.outport_05_input_number_set(t),this.p_02_wet_dry_mix_set(t)}param_07_value_set(t){t=this.param_07_value_constrain(t),this.param_07_value=t,this.sendParameter(1),this.param_07_value!=this.param_07_lastValue&&(this.getEngine().presetTouched(),this.param_07_lastValue=this.param_07_value),this.pak_01_in1_set(t)}param_08_value_set(t){t=this.param_08_value_constrain(t),this.param_08_value=t,this.sendParameter(2),this.param_08_value!=this.param_08_lastValue&&(this.getEngine().presetTouched(),this.param_08_lastValue=this.param_08_value),this.outport_06_input_number_set(t),this.mstosamps_01_ms_set(t)}param_09_value_set(t){t=this.param_09_value_constrain(t),this.param_09_value=t,this.sendParameter(3),this.param_09_value!=this.param_09_lastValue&&(this.getEngine().presetTouched(),this.param_09_lastValue=this.param_09_value),this.outport_07_input_number_set(t),this.mstosamps_02_ms_set(t)}param_10_value_set(t){t=this.param_10_value_constrain(t),this.param_10_value=t,this.sendParameter(4),this.param_10_value!=this.param_10_lastValue&&(this.getEngine().presetTouched(),this.param_10_lastValue=this.param_10_value),this.outport_03_input_number_set(t),this.p_02_rate_set(t)}param_11_value_set(t){t=this.param_11_value_constrain(t),this.param_11_value=t,this.sendParameter(5),this.param_11_value!=this.param_11_lastValue&&(this.getEngine().presetTouched(),this.param_11_lastValue=this.param_11_value),this.outport_04_input_number_set(t),this.expr_05_in1_set(t)}param_12_value_set(t){t=this.param_12_value_constrain(t),this.param_12_value=t,this.sendParameter(6),this.param_12_value!=this.param_12_lastValue&&(this.getEngine().presetTouched(),this.param_12_lastValue=this.param_12_value),this.outport_02_input_number_set(t),this.dspexpr_18_in1_set(t)}param_13_value_set(t){t=this.param_13_value_constrain(t),this.param_13_value=t,this.sendParameter(7),this.param_13_value!=this.param_13_lastValue&&(this.getEngine().presetTouched(),this.param_13_lastValue=this.param_13_value),this.pak_01_in2_set(t)}param_14_value_set(t){t=this.param_14_value_constrain(t),this.param_14_value=t,this.sendParameter(8),this.param_14_value!=this.param_14_lastValue&&(this.getEngine().presetTouched(),this.param_14_lastValue=this.param_14_value),this.pak_01_in3_set(t)}param_15_value_set(t){t=this.param_15_value_constrain(t),this.param_15_value=t,this.sendParameter(9),this.param_15_value!=this.param_15_lastValue&&(this.getEngine().presetTouched(),this.param_15_lastValue=this.param_15_value),this.pak_01_in4_set(t)}eventinlet_03_out1_bang_bang(){this.outport_01_input_bang_bang(),this.trigger_05_input_bang_bang()}eventinlet_03_out1_number_set(t){this.outport_01_input_number_set(t),this.trigger_05_input_number_set(t)}eventinlet_03_out1_list_set(t){this.outport_01_input_list_set(t),this.trigger_05_input_list_set(t)}loadbang_02_startupbang_bang(){this.loadbang_02_output_bang()}getParameterIndexForID(t){return stringCompare(t,\"wet_dry_mix\")?stringCompare(t,\"attack\")?stringCompare(t,\"scatter\")?stringCompare(t,\"grainDur\")?stringCompare(t,\"grainRate\")?stringCompare(t,\"traversal\")?stringCompare(t,\"gain\")?stringCompare(t,\"decay\")?stringCompare(t,\"sustain\")?stringCompare(t,\"release\")?INVALID_INDEX:9:8:7:6:5:4:3:2:1:0}getNumMidiInputPorts(){return 1}processMidiEvent(t,a,r,s){this.updateTime(t),this.midiin_01_midihandler(240&r[0],1+(15&r[0]),a,r,s)}getNumMidiOutputPorts(){return 0}process(t,a,r,s,e){RNBO_UNUSED(a),RNBO_UNUSED(t),this.vs=e,this.updateTime(this.getEngine().getCurrentTime());var _=s>=1&&r[0]?r[0]:this.dummyBuffer,i=s>=2&&r[1]?r[1]:this.dummyBuffer;this.ip_05_perform(this.signals[0],e),this.sampstohz_tilde_01_perform(this.signals[0],this.signals[1],e),this.dspexpr_11_perform(this.signals[1],this.dspexpr_11_in2,this.signals[0],e),this.dspexpr_12_perform(this.signals[0],this.dspexpr_12_in2,this.signals[1],e),this.phasor_02_perform(this.signals[1],this.signals[0],e),this.dspexpr_14_perform(this.signals[0],this.dspexpr_14_in2,this.signals[1],e),this.dspexpr_13_perform(this.signals[1],this.signals[2],e),this.dspexpr_17_perform(this.dspexpr_17_in1,this.dspexpr_17_in2,this.signals[1],e),this.p_02_perform(this.signals[2],this.signals[0],this.signals[1],this.signals[3],this.signals[4],e),this.svf_tilde_01_perform(this.signals[3],this.svf_tilde_01_freq,this.svf_tilde_01_q,this.dummyBuffer,this.signals[1],this.dummyBuffer,this.dummyBuffer,e),this.svf_tilde_02_perform(this.signals[4],this.svf_tilde_02_freq,this.svf_tilde_02_q,this.dummyBuffer,this.signals[3],this.dummyBuffer,this.dummyBuffer,e),this.dspexpr_18_perform(this.dspexpr_18_in1,this.signals[4],e),this.dspexpr_15_perform(this.signals[1],this.signals[4],this.signals[0],e),this.dspexpr_16_perform(this.signals[3],this.signals[4],this.signals[1],e),this.limi_01_perform(this.signals[0],this.signals[1],_,i,e),this.stackprotect_perform(e),this.globaltransport_advance(),this.audioProcessSampleCount+=this.vs}prepareToProcess(t,a,r){if(this.maxvs<a||!this.didAllocateSignals){for(i=0;i<5;i++)this.signals[i]=resizeSignal(this.signals[i],this.maxvs,a);this.ip_05_sigbuf=resizeSignal(this.ip_05_sigbuf,this.maxvs,a),this.phasor_02_sigbuf=resizeSignal(this.phasor_02_sigbuf,this.maxvs,a),this.globaltransport_tempo=resizeSignal(this.globaltransport_tempo,this.maxvs,a),this.globaltransport_state=resizeSignal(this.globaltransport_state,this.maxvs,a),this.zeroBuffer=resizeSignal(this.zeroBuffer,this.maxvs,a),this.dummyBuffer=resizeSignal(this.dummyBuffer,this.maxvs,a),this.didAllocateSignals=!0}var s=t!=this.sr,e=a!=this.maxvs,_=s||e||r;(s||e)&&(this.vs=a,this.maxvs=a,this.sr=t,this.invsr=1/t),this.ip_05_dspsetup(_),this.phasor_02_dspsetup(_),this.svf_tilde_01_dspsetup(_),this.svf_tilde_02_dspsetup(_),this.limi_01_dspsetup(_),this.data_01_dspsetup(_),this.data_02_dspsetup(_),this.data_03_dspsetup(_),this.data_04_dspsetup(_),this.globaltransport_dspsetup(_);for(var i=0;i<8;i++)this.p_02[i].prepareToProcess(t,a,r);s&&this.onSampleRateChanged(t)}msToSamps(t,a){return t*a*.001}sampsToMs(t){return t*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 2}setProbingTarget(t){this.setProbingIndex(-1)}setProbingIndex(t){}getProbingChannels(t){return RNBO_UNUSED(t),0}getDataRef(t){switch(t){case 0:return addressOf(this.RNBODefaultSinus);case 1:return addressOf(this.RNBODefaultMtofLookupTable256);case 2:return addressOf(this.harp_riff);case 3:return addressOf(this.jongly);case 4:return addressOf(this.big);case 5:return addressOf(this.usr_buff);default:return null}}getNumDataRefs(){return 6}fillRNBODefaultSinus(t){var a;let r=(a=new Float64Buffer(t)).getSize();for(let t=0;t<r;t++)a[t]=rnbo_cos(3.141592653589793*t*2/r)}fillRNBODefaultMtofLookupTable256(t){var a;let r=(a=new Float64Buffer(t)).getSize();for(let t=0;t<r;t++){let s=512/(r-1)*t-256;a[t]=rnbo_exp(.057762265*(s-69))}}fillDataRef(t,a){switch(t){case 1:this.fillRNBODefaultSinus(a);break;case 2:this.fillRNBODefaultMtofLookupTable256(a)}}zeroDataRef(t){t.setZero()}processDataViewUpdate(t,a){this.updateTime(a),-1!=t&&2!=t&&3!=t&&4!=t&&5!=t||(this.dim_01_buffer=new Float32MultiBuffer(this.dim_01_bufferobj),this.dim_01_bufferUpdated()),2==t&&(this.data_01_buffer=new Float32Buffer(this.harp_riff),this.data_01_bufferUpdated()),3==t&&(this.data_02_buffer=new Float32Buffer(this.jongly),this.data_02_bufferUpdated()),4==t&&(this.data_03_buffer=new Float32Buffer(this.big),this.data_03_bufferUpdated()),5==t&&(this.data_04_buffer=new Float32Buffer(this.usr_buff),this.data_04_bufferUpdated());for(var r=0;r<8;r++)this.p_02[r].processDataViewUpdate(t,a)}allocateDataRefs(){for(var t=0;t<8;t++)this.p_02[t].allocateDataRefs();this.RNBODefaultSinus.hasRequestedSize()&&(this.RNBODefaultSinus.wantsFill()&&this.fillRNBODefaultSinus(this.RNBODefaultSinus),this.getEngine().sendDataRefUpdated(0)),this.RNBODefaultMtofLookupTable256.hasRequestedSize()&&(this.RNBODefaultMtofLookupTable256.wantsFill()&&this.fillRNBODefaultMtofLookupTable256(this.RNBODefaultMtofLookupTable256),this.getEngine().sendDataRefUpdated(1)),this.data_01_buffer=this.data_01_buffer.allocateIfNeeded(),this.harp_riff.hasRequestedSize()&&(this.harp_riff.wantsFill()&&this.zeroDataRef(this.harp_riff),this.getEngine().sendDataRefUpdated(2)),this.data_02_buffer=this.data_02_buffer.allocateIfNeeded(),this.jongly.hasRequestedSize()&&(this.jongly.wantsFill()&&this.zeroDataRef(this.jongly),this.getEngine().sendDataRefUpdated(3)),this.data_03_buffer=this.data_03_buffer.allocateIfNeeded(),this.big.hasRequestedSize()&&(this.big.wantsFill()&&this.zeroDataRef(this.big),this.getEngine().sendDataRefUpdated(4)),this.data_04_buffer=this.data_04_buffer.allocateIfNeeded(),this.usr_buff.hasRequestedSize()&&(this.usr_buff.wantsFill()&&this.zeroDataRef(this.usr_buff),this.getEngine().sendDataRefUpdated(5))}initialize(){this.dim_01_bufferobj=initMultiRef(this.harp_riff,this.jongly,this.big,this.usr_buff),this.RNBODefaultSinus=initDataRef(\"RNBODefaultSinus\",!0,null),this.RNBODefaultMtofLookupTable256=initDataRef(\"RNBODefaultMtofLookupTable256\",!0,null),this.harp_riff=initDataRef(\"harp_riff\",!1,\"harp_riff.wav\"),this.jongly=initDataRef(\"jongly\",!1,\"jongly.wav\"),this.big=initDataRef(\"big\",!1,\"big.wav\"),this.usr_buff=initDataRef(\"usr_buff\",!1,null),this.assign_defaults(),this.setState(),this.dim_01_bufferobj.setIndex(-1),this.dim_01_buffer=new Float32MultiBuffer(this.dim_01_bufferobj),this.RNBODefaultSinus.setIndex(0),this.RNBODefaultMtofLookupTable256.setIndex(1),this.harp_riff.setIndex(2),this.data_01_buffer=new Float32Buffer(this.harp_riff),this.jongly.setIndex(3),this.data_02_buffer=new Float32Buffer(this.jongly),this.big.setIndex(4),this.data_03_buffer=new Float32Buffer(this.big),this.usr_buff.setIndex(5),this.data_04_buffer=new Float32Buffer(this.usr_buff),this.initializeObjects(),this.allocateDataRefs(),this.startup()}initializeObjects(){this.ip_05_init(),this.data_01_init(),this.data_02_init(),this.data_03_init(),this.data_04_init();for(var t=0;t<8;t++)this.p_02[t].initializeObjects()}getIsMuted(){return this.isMuted}setIsMuted(t){this.isMuted=t}getPatcherSerial(){return 0}getState(t){}setState(){for(var t=0;t<8;t++)this.p_02[t]=new RNBOSubpatcher_103,this.p_02[t].setEngineAndPatcher(this.getEngine(),this),this.p_02[t].initialize(),this.p_02[t].setParameterOffset(this.getParameterOffset(this.p_02[0])),this.p_02[t].setVoiceIndex(t+1)}getPreset(t){this.param_06_getPresetValue(getSubState(t,\"wet_dry_mix\")),this.param_07_getPresetValue(getSubState(t,\"attack\")),this.param_08_getPresetValue(getSubState(t,\"scatter\")),this.param_09_getPresetValue(getSubState(t,\"grainDur\")),this.param_10_getPresetValue(getSubState(t,\"grainRate\")),this.param_11_getPresetValue(getSubState(t,\"traversal\")),this.param_12_getPresetValue(getSubState(t,\"gain\")),this.param_13_getPresetValue(getSubState(t,\"decay\")),this.param_14_getPresetValue(getSubState(t,\"sustain\")),this.param_15_getPresetValue(getSubState(t,\"release\"));for(var a=0;a<8;a++)this.p_02[a].getPreset(getSubStateAt(getSubState(t,\"__sps\"),\"granular\",a))}setPreset(t,a){this.updateTime(t),this.param_06_setPresetValue(getSubState(a,\"wet_dry_mix\")),this.param_07_setPresetValue(getSubState(a,\"attack\")),this.param_08_setPresetValue(getSubState(a,\"scatter\")),this.param_09_setPresetValue(getSubState(a,\"grainDur\")),this.param_10_setPresetValue(getSubState(a,\"grainRate\")),this.param_11_setPresetValue(getSubState(a,\"traversal\")),this.param_12_setPresetValue(getSubState(a,\"gain\")),this.param_13_setPresetValue(getSubState(a,\"decay\")),this.param_14_setPresetValue(getSubState(a,\"sustain\")),this.param_15_setPresetValue(getSubState(a,\"release\"));for(var r=0;r<8;r++)this.p_02[r].param_01_setPresetValue(getSubState(getSubStateAt(getSubState(a,\"__sps\"),\"granular\",r),\"buffer\"));for(r=0;r<8;r++)this.p_02[r].param_02_setPresetValue(getSubState(getSubStateAt(getSubState(a,\"__sps\"),\"granular\",r),\"rate\"));for(r=0;r<8;r++)this.p_02[r].param_03_setPresetValue(getSubState(getSubStateAt(getSubState(a,\"__sps\"),\"granular\",r),\"scatter\"));for(r=0;r<8;r++)this.p_02[r].param_04_setPresetValue(getSubState(getSubStateAt(getSubState(a,\"__sps\"),\"granular\",r),\"duration\"));for(r=0;r<8;r++)this.p_02[r].param_05_setPresetValue(getSubState(getSubStateAt(getSubState(a,\"__sps\"),\"granular\",r),\"wet_dry_mix\"))}processTempoEvent(t,a){if(this.updateTime(t),this.globaltransport_setTempo(a,!1))for(var r=0;r<8;r++)this.p_02[r].processTempoEvent(t,a)}processTransportEvent(t,a){if(this.updateTime(t),this.globaltransport_setState(a,!1))for(var r=0;r<8;r++)this.p_02[r].processTransportEvent(t,a)}processBeatTimeEvent(t,a){if(this.updateTime(t),this.globaltransport_setBeatTime(a,!1))for(var r=0;r<8;r++)this.p_02[r].processBeatTimeEvent(t,a)}onSampleRateChanged(t){}processTimeSignatureEvent(t,a,r){if(this.updateTime(t),this.globaltransport_setTimeSignature(a,r,!1))for(var s=0;s<8;s++)this.p_02[s].processTimeSignatureEvent(t,a,r)}setParameterValue(t,a,r){switch(this.updateTime(r),t){case 0:this.param_06_value_set(a);break;case 1:this.param_07_value_set(a);break;case 2:this.param_08_value_set(a);break;case 3:this.param_09_value_set(a);break;case 4:this.param_10_value_set(a);break;case 5:this.param_11_value_set(a);break;case 6:this.param_12_value_set(a);break;case 7:this.param_13_value_set(a);break;case 8:this.param_14_value_set(a);break;case 9:this.param_15_value_set(a);break;default:(t-=10)<this.p_02[0].getNumParameters()&&this.p_02[0].setPolyParameterValue(this.p_02,t,a,r)}}processParameterEvent(t,a,r){this.setParameterValue(t,a,r)}processNormalizedParameterEvent(t,a,r){this.setParameterValueNormalized(t,a,r)}getParameterValue(t){switch(t){case 0:return this.param_06_value;case 1:return this.param_07_value;case 2:return this.param_08_value;case 3:return this.param_09_value;case 4:return this.param_10_value;case 5:return this.param_11_value;case 6:return this.param_12_value;case 7:return this.param_13_value;case 8:return this.param_14_value;case 9:return this.param_15_value;default:return(t-=10)<this.p_02[0].getNumParameters()?this.p_02[0].getPolyParameterValue(this.p_02,t):0}}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 10+this.p_02[0].getNumParameters()}getParameterName(t){switch(t){case 0:return\"wet_dry_mix\";case 1:return\"attack\";case 2:return\"scatter\";case 3:return\"grainDur\";case 4:return\"grainRate\";case 5:return\"traversal\";case 6:return\"gain\";case 7:return\"decay\";case 8:return\"sustain\";case 9:return\"release\";default:return(t-=10)<this.p_02[0].getNumParameters()?this.p_02[0].getParameterName(t):\"bogus\"}}getParameterId(t){switch(t){case 0:return\"wet_dry_mix\";case 1:return\"attack\";case 2:return\"scatter\";case 3:return\"grainDur\";case 4:return\"grainRate\";case 5:return\"traversal\";case 6:return\"gain\";case 7:return\"decay\";case 8:return\"sustain\";case 9:return\"release\";default:return(t-=10)<this.p_02[0].getNumParameters()?this.p_02[0].getParameterId(t):\"bogus\"}}getParameterInfo(t,a){switch(t){case 0:a.type=ParameterTypeNumber,a.initialValue=.5,a.min=0,a.max=1,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;case 1:a.type=ParameterTypeNumber,a.initialValue=20,a.min=0,a.max=5e3,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"ms\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;case 2:a.type=ParameterTypeNumber,a.initialValue=0,a.min=0,a.max=5e3,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"ms\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;case 3:a.type=ParameterTypeNumber,a.initialValue=50,a.min=.1,a.max=5e3,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"ms\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;case 4:a.type=ParameterTypeNumber,a.initialValue=20,a.min=0,a.max=1e3,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"hz\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;case 5:a.type=ParameterTypeNumber,a.initialValue=100,a.min=-800,a.max=800,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"%\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;case 6:a.type=ParameterTypeNumber,a.initialValue=0,a.min=-120,a.max=6,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"db\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;case 7:a.type=ParameterTypeNumber,a.initialValue=20,a.min=0,a.max=5e3,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"ms\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;case 8:a.type=ParameterTypeNumber,a.initialValue=.8,a.min=0,a.max=1,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"amp\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;case 9:a.type=ParameterTypeNumber,a.initialValue=500,a.min=0,a.max=5e3,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"ms\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;default:if((t-=10)<this.p_02[0].getNumParameters())for(var r=0;r<8;r++)this.p_02[r].getParameterInfo(t,a)}}sendParameter(t){this.getEngine().notifyParameterValueChanged(t,this.getParameterValue(t))}getParameterOffset(t){return t==this.p_02[0]?10:0}applyStepsToNormalizedParameterValue(t,a){if(1==a)t>0&&(t=1);else{let r=1/(a-1);t=1*rnbo_fround(t/r*1/1)*r}return t}convertToNormalizedParameterValue(t,a){switch(t){case 0:case 8:return((a=a<0?0:a>1?1:a)-0)/1;case 4:return((a=a<0?0:a>1e3?1e3:a)-0)/1e3;case 1:case 2:case 7:case 9:return((a=a<0?0:a>5e3?5e3:a)-0)/5e3;case 3:return((a=a<.1?.1:a>5e3?5e3:a)-.1)/4999.9;case 5:return((a=a<-800?-800:a>800?800:a)- -800)/1600;case 6:return((a=a<-120?-120:a>6?6:a)- -120)/126;default:return(t-=10)<this.p_02[0].getNumParameters()?this.p_02[0].convertToNormalizedParameterValue(t,a):a}}convertFromNormalizedParameterValue(t,a){switch(a=a<0?0:a>1?1:a,t){case 0:case 8:return 0+1*(a=a<0?0:a>1?1:a);case 4:return 0+1e3*(a=a<0?0:a>1?1:a);case 1:case 2:case 7:case 9:return 0+5e3*(a=a<0?0:a>1?1:a);case 3:return.1+4999.9*(a=a<0?0:a>1?1:a);case 5:return 1600*(a=a<0?0:a>1?1:a)-800;case 6:return 126*(a=a<0?0:a>1?1:a)-120;default:return(t-=10)<this.p_02[0].getNumParameters()?this.p_02[0].convertFromNormalizedParameterValue(t,a):a}}constrainParameterValue(t,a){switch(t){case 0:return this.param_06_value_constrain(a);case 1:return this.param_07_value_constrain(a);case 2:return this.param_08_value_constrain(a);case 3:return this.param_09_value_constrain(a);case 4:return this.param_10_value_constrain(a);case 5:return this.param_11_value_constrain(a);case 6:return this.param_12_value_constrain(a);case 7:return this.param_13_value_constrain(a);case 8:return this.param_14_value_constrain(a);case 9:return this.param_15_value_constrain(a);default:return(t-=10)<this.p_02[0].getNumParameters()?this.p_02[0].constrainParameterValue(t,a):a}}scheduleParamInit(t,a){this.paramInitIndices.push(t),this.paramInitOrder.push(a)}processParamInitEvents(){this.listquicksort(this.paramInitOrder,this.paramInitIndices,0,this.paramInitOrder.length-1,!0);for(var t=0;t<this.paramInitOrder.length;t++)this.getEngine().scheduleParameterChange(this.paramInitIndices[t],this.getParameterValue(this.paramInitIndices[t]),0)}processClockEvent(t,a,r,s){switch(RNBO_UNUSED(s),RNBO_UNUSED(r),this.updateTime(t),a){case 832840460:this.loadbang_02_startupbang_bang()}}processOutletAtCurrentTime(t,a,r){}processOutletEvent(t,a,r,s){this.updateTime(s),this.processOutletAtCurrentTime(t,a,r)}sendOutlet(t,a){this.getEngine().sendOutlet(this,t,a)}processNumMessage(t,a,r,s){switch(RNBO_UNUSED(a),this.updateTime(r),t){case TAG(\"in1\"):this.eventinlet_03_out1_number_set(s)}for(var e=0;e<8;e++)this.p_02[e].processNumMessage(t,a,r,s)}processListMessage(t,a,r,s){switch(RNBO_UNUSED(a),this.updateTime(r),t){case TAG(\"in1\"):this.eventinlet_03_out1_list_set(s)}for(var e=0;e<8;e++)this.p_02[e].processListMessage(t,a,r,s)}processBangMessage(t,a,r){switch(this.updateTime(r),t){case TAG(\"in1\"):this.eventinlet_03_out1_bang_bang();break;case TAG(\"startupbang\"):TAG(\"loadbang_obj-55\")==a&&this.loadbang_02_startupbang_bang()}for(var s=0;s<8;s++)this.p_02[s].processBangMessage(t,a,r)}resolveTag(t){switch(t){case TAG(\"buffer\"):return\"buffer\";case TAG(\"\"):return\"\";case TAG(\"gain\"):return\"gain\";case TAG(\"grainRate\"):return\"grainRate\";case TAG(\"traversal\"):return\"traversal\";case TAG(\"wet_dry_mix\"):return\"wet_dry_mix\";case TAG(\"scatter\"):return\"scatter\";case TAG(\"grainDur\"):return\"grainDur\";case TAG(\"in1\"):return\"in1\";case TAG(\"startupbang\"):return\"startupbang\";case TAG(\"loadbang_obj-55\"):return\"loadbang_obj-55\"}var a=this.p_02[0].resolveTag(t);return a||\"\"}getNumMessages(){return 8}getMessageInfo(t){switch(t){case 0:return{tag:\"buffer\",type:Outport};case 1:return{tag:\"gain\",type:Outport};case 2:return{tag:\"grainRate\",type:Outport};case 3:return{tag:\"traversal\",type:Outport};case 4:return{tag:\"wet_dry_mix\",type:Outport};case 5:return{tag:\"scatter\",type:Outport};case 6:return{tag:\"grainDur\",type:Outport};case 7:return{tag:\"in1\",type:Inport}}return NullMessageInfo}startup(){this.updateTime(this.getEngine().getCurrentTime());for(var t=0;t<8;t++)this.p_02[t].startup();this.getEngine().scheduleClockEvent(this,832840460,0+this._currentTime),this.scheduleParamInit(0,0),this.scheduleParamInit(1,0),this.scheduleParamInit(2,0),this.scheduleParamInit(3,0),this.scheduleParamInit(4,0),this.scheduleParamInit(5,0),this.scheduleParamInit(6,0),this.scheduleParamInit(7,0),this.scheduleParamInit(8,0),this.scheduleParamInit(9,0),this.processParamInitEvents()}param_06_value_constrain(t){return t=t>1?1:t<0?0:t}outport_05_input_number_set(t){this.getEngine().sendNumMessage(TAG(\"wet_dry_mix\"),TAG(\"\"),t,this._currentTime)}p_02_wet_dry_mix_set(t){for(var a=0;a<8;a++)a+1!=this.p_02_target&&0!=this.p_02_target||this.p_02[a].setParameterValue(4,t,this._currentTime)}param_07_value_constrain(t){return t=t>5e3?5e3:t<0?0:t}p_02_in3_list_set(t){for(var a=0;a<8;a++)a+1!=this.p_02_target&&0!=this.p_02_target||this.p_02[a].updateTime(this._currentTime);for(a=0;a<8;a++)a+1!=this.p_02_target&&0!=this.p_02_target||this.p_02[a].eventinlet_02_out1_list_set(t)}pak_01_out_set(t){this.p_02_in3_list_set(t)}pak_01_in1_set(t){this.pak_01_in1=t;let a=list(0,0,0,0);a[0]=this.pak_01_in1,a[1]=this.pak_01_in2,a[2]=this.pak_01_in3,a[3]=this.pak_01_in4,this.pak_01_out_set(a)}param_08_value_constrain(t){return t=t>5e3?5e3:t<0?0:t}outport_06_input_number_set(t){this.getEngine().sendNumMessage(TAG(\"scatter\"),TAG(\"\"),t,this._currentTime)}p_02_scatter_set(t){for(var a=0;a<8;a++)a+1!=this.p_02_target&&0!=this.p_02_target||this.p_02[a].setParameterValue(2,t,this._currentTime)}mstosamps_01_out1_set(t){this.p_02_scatter_set(t)}mstosamps_01_ms_set(t){this.mstosamps_01_ms=t,this.mstosamps_01_out1_set(t*this.sr*.001)}param_09_value_constrain(t){return t=t>5e3?5e3:t<.1?.1:t}outport_07_input_number_set(t){this.getEngine().sendNumMessage(TAG(\"grainDur\"),TAG(\"\"),t,this._currentTime)}p_02_duration_set(t){for(var a=0;a<8;a++)a+1!=this.p_02_target&&0!=this.p_02_target||this.p_02[a].setParameterValue(3,t,this._currentTime)}mstosamps_02_out1_set(t){this.p_02_duration_set(t)}mstosamps_02_ms_set(t){this.mstosamps_02_ms=t,this.mstosamps_02_out1_set(t*this.sr*.001)}param_10_value_constrain(t){return t=t>1e3?1e3:t<0?0:t}outport_03_input_number_set(t){this.getEngine().sendNumMessage(TAG(\"grainRate\"),TAG(\"\"),t,this._currentTime)}p_02_rate_set(t){for(var a=0;a<8;a++)a+1!=this.p_02_target&&0!=this.p_02_target||this.p_02[a].setParameterValue(1,t,this._currentTime)}param_11_value_constrain(t){return t=t>800?800:t<-800?-800:t}outport_04_input_number_set(t){this.getEngine().sendNumMessage(TAG(\"traversal\"),TAG(\"\"),t,this._currentTime)}dspexpr_17_in1_set(t){this.dspexpr_17_in1=t}dspexpr_12_in2_set(t){this.dspexpr_12_in2=t}expr_05_out1_set(t){this.expr_05_out1=t,this.dspexpr_17_in1_set(this.expr_05_out1),this.dspexpr_12_in2_set(this.expr_05_out1)}expr_05_in1_set(t){this.expr_05_in1=t,this.expr_05_out1_set(0==this.expr_05_in2||0==this.expr_05_in2?0:this.expr_05_in1/this.expr_05_in2)}param_12_value_constrain(t){return t=t>6?6:t<-120?-120:t}outport_02_input_number_set(t){this.getEngine().sendNumMessage(TAG(\"gain\"),TAG(\"\"),t,this._currentTime)}dspexpr_18_in1_set(t){this.dspexpr_18_in1=t}param_13_value_constrain(t){return t=t>5e3?5e3:t<0?0:t}pak_01_in2_set(t){this.pak_01_in2=t;let a=list(0,0,0,0);a[0]=this.pak_01_in1,a[1]=this.pak_01_in2,a[2]=this.pak_01_in3,a[3]=this.pak_01_in4,this.pak_01_out_set(a)}param_14_value_constrain(t){return t=t>1?1:t<0?0:t}pak_01_in3_set(t){this.pak_01_in3=t;let a=list(0,0,0,0);a[0]=this.pak_01_in1,a[1]=this.pak_01_in2,a[2]=this.pak_01_in3,a[3]=this.pak_01_in4,this.pak_01_out_set(a)}param_15_value_constrain(t){return t=t>5e3?5e3:t<0?0:t}pak_01_in4_set(t){this.pak_01_in4=t;let a=list(0,0,0,0);a[0]=this.pak_01_in1,a[1]=this.pak_01_in2,a[2]=this.pak_01_in3,a[3]=this.pak_01_in4,this.pak_01_out_set(a)}outport_01_input_bang_bang(){this.getEngine().sendBangMessage(TAG(\"buffer\"),TAG(\"\"),this._currentTime)}dim_01_buffer_set(t){updateMultiRef(this,this.dim_01_buffer,t)}p_02_buffer_set(t){for(var a=0;a<8;a++)a+1!=this.p_02_target&&0!=this.p_02_target||this.p_02[a].setParameterValue(0,t,this._currentTime)}trigger_05_out2_set(t){this.dim_01_buffer_set(t),this.p_02_buffer_set(t)}dspexpr_14_in2_set(t){this.dspexpr_14_in2=t}ip_05_value_set(t){this.ip_05_value=t,this.ip_05_fillSigBuf(),this.ip_05_lastValue=t}dim_01_out_set(t){this.dspexpr_14_in2_set(t),this.ip_05_value_set(t)}dim_01_outms_set(t){}dim_01_input_bang(){let t=this.dim(this.dim_01_buffer);this.dim_01_out_set(t),this.dim_01_outms_set(this.sampstoms(t))}trigger_05_out1_bang(){this.dim_01_input_bang()}trigger_05_input_bang_bang(){this.trigger_05_out2_set(0),this.trigger_05_out1_bang()}outport_01_input_number_set(t){this.getEngine().sendNumMessage(TAG(\"buffer\"),TAG(\"\"),t,this._currentTime)}trigger_05_input_number_set(t){this.trigger_05_out2_set(rnbo_trunc(t)),this.trigger_05_out1_bang()}outport_01_input_list_set(t){this.getEngine().sendListMessage(TAG(\"buffer\"),TAG(\"\"),t,this._currentTime)}trigger_05_input_list_set(t){this.trigger_05_out2_set(t.length>0?rnbo_trunc(t[0]):0),this.trigger_05_out1_bang()}loadbang_02_output_bang(){this.dim_01_input_bang()}midinotecontroller_01_currenttarget_set(t){this.midinotecontroller_01_currenttarget=t}p_02_target_set(t){this.p_02_target=t,this.midinotecontroller_01_currenttarget_set(t)}midinotecontroller_01_target_set(t){this.p_02_target_set(t)}p_02_midiininternal_set(t){let a=0;switch(this.p_02_currentStatus=parseMidi(this.p_02_currentStatus,t,this.p_02_mididata[0]),this.p_02_currentStatus){case MIDI_StatusByteReceived:this.p_02_mididata[0]=t,this.p_02_mididata[1]=0;break;case MIDI_SecondByteReceived:case MIDI_ProgramChange:case MIDI_ChannelPressure:this.p_02_mididata[1]=t,this.p_02_currentStatus!=MIDI_ProgramChange&&this.p_02_currentStatus!=MIDI_ChannelPressure||(a=2);break;case MIDI_NoteOff:case MIDI_NoteOn:case MIDI_Aftertouch:case MIDI_CC:case MIDI_PitchBend:default:this.p_02_mididata[2]=t,a=3}var r;if(a>0)if(this.p_02_target>0&&this.p_02_target<=8)r=this.p_02_target-1,this.p_02[r].processMidiEvent(_currentTime,0,this.p_02_mididata,a);else if(0==this.p_02_target)for(r=0;r<8;r++)this.p_02[r].processMidiEvent(_currentTime,0,this.p_02_mididata,a)}midinotecontroller_01_midiout_set(t){this.p_02_midiininternal_set(t)}p_02_noteNumber_set(t){this.p_02_target>0&&this.p_02[this.p_02_target-1].setNoteNumber(t)}midinotecontroller_01_noteNumber_set(t){this.p_02_noteNumber_set(t)}midinotecontroller_01_voicestatus_set(t){if(1==t[1]){let a=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(t[0]),this.midinotecontroller_01_noteNumber_set(0),this.midinotecontroller_01_target_set(a)}}p_02_voicestatus_set(t){this.midinotecontroller_01_voicestatus_set(t)}p_02_activevoices_set(t){}p_02_mute_set(t){var a=t[0],r=t[1];if(0==a)for(var s=0;s<8;s++)this.p_02[s].setIsMuted(r);else{var e=a-1;e>=0&&e<8&&this.p_02[e].setIsMuted(r)}var _=[t[0],t[1]];this.p_02_voicestatus_set(_),this.p_02_activevoices_set(this.p_02_calcActiveVoices())}midinotecontroller_01_mute_set(t){this.p_02_mute_set(t)}midinotecontroller_01_midiin_set(t){this.midinotecontroller_01_midiin=t;let a=t;switch(this.midinotecontroller_01_currentStatus=parseMidi(this.midinotecontroller_01_currentStatus,t,this.midinotecontroller_01_status),this.midinotecontroller_01_currentStatus){case MIDI_StatusByteReceived:this.midinotecontroller_01_status=a,this.midinotecontroller_01_byte1=-1;break;case MIDI_SecondByteReceived:this.midinotecontroller_01_byte1=a;break;case MIDI_NoteOn:{let t=!0,r=1,s=this.midinotecontroller_01_voice_lastontime[0],e=this.midinotecontroller_01_voice_state[0];for(let a=0;a<8;a++){let _=this.midinotecontroller_01_voice_state[a];if(this.midinotecontroller_01_voice_notenumber[a]==this.midinotecontroller_01_byte1&&_==MIDI_NoteState_On){t=!1,r=a+1;break}if(a>0&&(_!=MIDI_NoteState_On||e==MIDI_NoteState_On)){let t=this.midinotecontroller_01_voice_lastontime[a];(t<s||e==MIDI_NoteState_On&&_!=MIDI_NoteState_On)&&(r=a+1,s=t,e=_)}}t&&this.midinotecontroller_01_sendnoteoff(r);let _=r-1;this.midinotecontroller_01_voice_state[_]=MIDI_NoteState_On,this.midinotecontroller_01_voice_lastontime[_]=this.currenttime(),this.midinotecontroller_01_voice_notenumber[_]=this.midinotecontroller_01_byte1,this.midinotecontroller_01_voice_channel[_]=15&this.midinotecontroller_01_status;for(let t=0;t<this.midinotecontroller_01_maxnotesdown;t++)if(0==this.midinotecontroller_01_notesdown[t]){this.midinotecontroller_01_notesdown[t]=this.midinotecontroller_01_voice_notenumber[_];break}this.midinotecontroller_01_note_lastvelocity[this.midinotecontroller_01_voice_notenumber[_]]=a,this.midinotecontroller_01_sendpitchbend(_),this.midinotecontroller_01_sendpressure(_),this.midinotecontroller_01_sendtimbre(_),this.midinotecontroller_01_muteval[0]=r,this.midinotecontroller_01_muteval[1]=0,this.midinotecontroller_01_mute_set(this.midinotecontroller_01_muteval);let i=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(r),this.midinotecontroller_01_noteNumber_set(this.midinotecontroller_01_voice_notenumber[_]),this.midinotecontroller_01_midiout_set(MIDI_NoteOnMask|this.midinotecontroller_01_voice_channel[_]),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_voice_notenumber[_]),this.midinotecontroller_01_midiout_set(a),this.midinotecontroller_01_target_set(i);break}case MIDI_NoteOff:{let a=0,r=this.midinotecontroller_01_byte1,s=15&this.midinotecontroller_01_status;for(let t=0;t<8;t++)if(this.midinotecontroller_01_voice_notenumber[t]==r&&this.midinotecontroller_01_voice_channel[t]==s&&this.midinotecontroller_01_voice_state[t]==MIDI_NoteState_On){a=t+1;break}if(a>0){let r=a-1,e=s,_=!0;if(this.midinotecontroller_01_channel_sustain[_?0:e])this.midinotecontroller_01_voice_state[r]=MIDI_NoteState_Sustained;else{let s=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(a),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_status),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_byte1),this.midinotecontroller_01_midiout_set(t),this.midinotecontroller_01_target_set(s),this.midinotecontroller_01_currentStatus==MIDI_NoteOff&&(this.midinotecontroller_01_voice_state[r]=MIDI_NoteState_Off)}}let e=!1;for(let t=0;t<this.midinotecontroller_01_maxnotesdown&&0!=this.midinotecontroller_01_notesdown[t];t++)this.midinotecontroller_01_notesdown[t]==r&&(e=!0),e&&(this.midinotecontroller_01_notesdown[t]=this.midinotecontroller_01_notesdown[t+1]);break}case MIDI_Aftertouch:{let a=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(0),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_status),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_byte1),this.midinotecontroller_01_midiout_set(t),this.midinotecontroller_01_target_set(a);break}case MIDI_CC:{let r=!0;switch(this.midinotecontroller_01_byte1){case MIDI_CC_Sustain:{let t=a>=64,r=15&this.midinotecontroller_01_status,s=r,e=!0;if(this.midinotecontroller_01_channel_sustain[e?0:s]=t,!t)for(let t=0;t<8;t++)if((e||this.midinotecontroller_01_voice_channel[t]==r)&&this.midinotecontroller_01_voice_state[t]==MIDI_NoteState_Sustained){let a=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(t+1),this.midinotecontroller_01_midiout_set(MIDI_NoteOffMask|s),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_voice_notenumber[t]),this.midinotecontroller_01_midiout_set(64),this.midinotecontroller_01_target_set(a),this.midinotecontroller_01_voice_state[t]=MIDI_NoteState_Off}break}case MIDI_CC_TimbreMSB:{let a=15&this.midinotecontroller_01_status,s=(127&t)<<7;this.midinotecontroller_01_channel_timbre[15&this.midinotecontroller_01_status]=s;for(let t=0;t<8;t++)this.midinotecontroller_01_voice_channel[t]==a&&this.midinotecontroller_01_voice_state[t]!=MIDI_NoteState_Off&&this.midinotecontroller_01_sendtimbre(t);r=!1;break}case MIDI_CC_TimbreLSB:break;case MIDI_CC_AllNotesOff:this.midinotecontroller_01_sendallnotesoff()}if(r){let a=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(0),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_status),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_byte1),this.midinotecontroller_01_midiout_set(t),this.midinotecontroller_01_target_set(a)}break}case MIDI_ProgramChange:{let t=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(0),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_status),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_byte1),this.midinotecontroller_01_target_set(t);break}case MIDI_ChannelPressure:{let a=15&this.midinotecontroller_01_status;for(let r=0;r<8;r++)if(this.midinotecontroller_01_voice_state[r]!=MIDI_NoteState_Off&&this.midinotecontroller_01_voice_channel[r]==a){let s=a;this.midinotecontroller_01_channel_pressure[s]=t,this.midinotecontroller_01_sendpressure(r)}break}case MIDI_PitchBend:{let t=this.midinotecontroller_01_byte1|a<<7,r=15&this.midinotecontroller_01_status;this.midinotecontroller_01_channel_pitchbend[r]=t;for(let t=0;t<8;t++)this.midinotecontroller_01_voice_state[t]!=MIDI_NoteState_Off&&this.midinotecontroller_01_voice_channel[t]==r&&this.midinotecontroller_01_sendpitchbend(t);break}}}p_02_midiin_set(t){this.p_02_midiin=t,this.midinotecontroller_01_midiin_set(t)}midiin_01_midiout_set(t){this.p_02_midiin_set(t)}midiin_01_midihandler(t,a,r,s,e){var _;for(RNBO_UNUSED(r),RNBO_UNUSED(a),RNBO_UNUSED(t),_=0;_<e;_++)this.midiin_01_midiout_set(s[_])}ip_05_perform(t,a){for(var r=this.ip_05_sigbuf,s=this.ip_05_lastValue,e=this.ip_05_lastIndex,_=0;_<a;_++)t[_]=_>=e?s:r[_];e=0,this.ip_05_lastIndex=e}sampstohz_tilde_01_perform(t,a,r){var s;for(s=0;s<r;s++)a[s]=t[s]/this.sr}dspexpr_11_perform(t,a,r,s){var e;for(RNBO_UNUSED(a),e=0;e<s;e++)r[e]=0==t[e]?0:1/t[e]}dspexpr_12_perform(t,a,r,s){var e;for(e=0;e<s;e++)r[e]=t[e]*a}phasor_02_perform(t,a,r){for(var s=this.phasor_02_sigbuf,e=0;e<r;e++)a[e]=this.phasor_02_ph_next(t[e],-1),s[e]=-1}dspexpr_14_perform(t,a,r,s){var e;for(e=0;e<s;e++)r[e]=t[e]*a}dspexpr_13_perform(t,a,r){var s;for(s=0;s<r;s++)a[s]=rnbo_floor(t[s])}dspexpr_17_perform(t,a,r,s){var e;for(RNBO_UNUSED(a),e=0;e<s;e++)r[e]=t<0}p_02_perform(t,a,r,s,e,_){for(var i=[t,a,r],n=[s,e],l=0;l<2;l++)zeroSignal(n[l],_);for(var u=0;u<8;u++)this.p_02[u].process(i,3,n,2,_)}svf_tilde_01_perform(t,a,r,s,e,_,i,n){RNBO_UNUSED(r),RNBO_UNUSED(a);var l,u=this.svf_tilde_01_high,h=this.svf_tilde_01_notch,g=this.svf_tilde_01_band,o=this.svf_tilde_01_low,p=this.svf_tilde_01__q,c=this.svf_tilde_01__freq;for(l=0;l<n;l++){0!=this.svf_tilde_01_dFreq_next(40)&&(c=40>.25*this.sr?.25*this.sr:40,c=(c=rnbo_sin(6.283185307179586*c/this.sr))>.99?.99:c<.001?.001:c),0!=this.svf_tilde_01_dQ_next(.5)&&(p=.6,p=(p*=p)>.99?.99:p<.001?.001:p),o+=c*g,g+=c*(u=(h=t[l]-p*g)-o)-g*g*g*1e-4;var f=[0,0,0,0];f[0]=o,f[1]=u,f[2]=g,f[3]=h,s[l]=f[0],e[l]=f[1],_[l]=f[2],i[l]=f[3]}this.svf_tilde_01__freq=c,this.svf_tilde_01__q=p,this.svf_tilde_01_low=o,this.svf_tilde_01_band=g,this.svf_tilde_01_notch=h,this.svf_tilde_01_high=u}svf_tilde_02_perform(t,a,r,s,e,_,i,n){RNBO_UNUSED(r),RNBO_UNUSED(a);var l,u=this.svf_tilde_02_high,h=this.svf_tilde_02_notch,g=this.svf_tilde_02_band,o=this.svf_tilde_02_low,p=this.svf_tilde_02__q,c=this.svf_tilde_02__freq;for(l=0;l<n;l++){0!=this.svf_tilde_02_dFreq_next(40)&&(c=40>.25*this.sr?.25*this.sr:40,c=(c=rnbo_sin(6.283185307179586*c/this.sr))>.99?.99:c<.001?.001:c),0!=this.svf_tilde_02_dQ_next(.5)&&(p=.6,p=(p*=p)>.99?.99:p<.001?.001:p),o+=c*g,g+=c*(u=(h=t[l]-p*g)-o)-g*g*g*1e-4;var f=[0,0,0,0];f[0]=o,f[1]=u,f[2]=g,f[3]=h,s[l]=f[0],e[l]=f[1],_[l]=f[2],i[l]=f[3]}this.svf_tilde_02__freq=c,this.svf_tilde_02__q=p,this.svf_tilde_02_low=o,this.svf_tilde_02_band=g,this.svf_tilde_02_notch=h,this.svf_tilde_02_high=u}dspexpr_18_perform(t,a,r){var s;for(s=0;s<r;s++)a[s]=rnbo_pow(10,.05*t)}dspexpr_15_perform(t,a,r,s){var e;for(e=0;e<s;e++)r[e]=t[e]*a[e]}dspexpr_16_perform(t,a,r,s){var e;for(e=0;e<s;e++)r[e]=t[e]*a[e]}limi_01_perform(t,a,r,s,e){RNBO_UNUSED(s),RNBO_UNUSED(r),RNBO_UNUSED(a),RNBO_UNUSED(t);var _,i=this.limi_01_lookaheadInv,n=this.limi_01_threshold,l=this.limi_01_lookahead,u=this.limi_01_gainBuffer,h=this.limi_01_recover,g=this.limi_01_last,o=this.limi_01_postamp,p=this.limi_01_lookaheadIndex,c=this.limi_01_lookaheadBuffers,f=this.limi_01_preamp,m=this.limi_01_dcblock,d=[t,a],b=[r,s];if(this.limi_01_bypass)for(let t=0;t<e;t++)for(let a=0;a<2;a++)b[a][t]=d[a][t];else for(let t=0;t<e;t++){var v=0;for(let a=0;a<2;a++){var S=d[a];_=m?this.limi_01_dc_next(a,S[t],.9997):S[t],_*=f,c[a][p]=_*o,(_=rnbo_fabs(_))>v&&(v=_)}(_=g>.01?g+h*g:g+h)>1&&(_=1),u[p]=_;var O=p-l;if(O<0&&(O+=l),v*_>n)for(var x,I=n/v,R=n-I,P=0,N=0,k=0;0==N&&k<l;k++){var T=p-k;T<0&&(T+=l),(x=I+R*(P*P))<u[T]?u[T]=x:N=1,P+=i}for(k=0;k<2;k++)b[k][t]=c[k][O]*u[O];g=u[p],++p>=l&&(p=0)}this.limi_01_lookaheadIndex=p,this.limi_01_last=g}stackprotect_perform(t){RNBO_UNUSED(t);this.stackprotect_count;this.stackprotect_count=0}data_01_sizeout_set(t){this.data_01_sizeout=t}data_01_chanout_set(t){}data_01_srout_set(t){}data_02_sizeout_set(t){this.data_02_sizeout=t}data_02_chanout_set(t){}data_02_srout_set(t){}data_03_sizeout_set(t){this.data_03_sizeout=t}data_03_chanout_set(t){}data_03_srout_set(t){}data_04_sizeout_set(t){this.data_04_sizeout=t}data_04_chanout_set(t){}data_04_srout_set(t){}limi_01_lookahead_setter(t){this.limi_01_lookahead=t>512?512:t<0?0:t,this.limi_01_lookaheadInv=1/this.limi_01_lookahead}limi_01_preamp_setter(t){this.limi_01_preamp=rnbo_pow(10,.05*t)}limi_01_postamp_setter(t){this.limi_01_postamp=rnbo_pow(10,.05*t)}limi_01_threshold_setter(t){this.limi_01_threshold=rnbo_pow(10,.05*t)}ip_05_init(){this.ip_05_lastValue=this.ip_05_value}ip_05_fillSigBuf(){if(this.ip_05_sigbuf){var t=this.sampleOffsetIntoNextAudioBuffer;t>=this.vs&&(t=this.vs-1);for(var a=this.ip_05_lastIndex;a<t;a++)this.ip_05_resetCount>0?(this.ip_05_sigbuf[a]=1,this.ip_05_resetCount--):this.ip_05_sigbuf[a]=this.ip_05_lastValue;this.ip_05_lastIndex=t}}ip_05_dspsetup(t){this.ip_05_setupDone&&!t||(this.ip_05_lastIndex=0,this.ip_05_setupDone=!0)}dim_01_bufferUpdated(){let t=this.dim(this.dim_01_buffer);this.dim_01_out_set(t),this.dim_01_outms_set(this.sampstoms(t))}svf_tilde_01_dFreq_next(t){var a=t-this.svf_tilde_01_dFreq_prev;return this.svf_tilde_01_dFreq_prev=t,a}svf_tilde_01_dFreq_dspsetup(){this.svf_tilde_01_dFreq_reset()}svf_tilde_01_dFreq_reset(){this.svf_tilde_01_dFreq_prev=0}svf_tilde_01_dQ_next(t){var a=t-this.svf_tilde_01_dQ_prev;return this.svf_tilde_01_dQ_prev=t,a}svf_tilde_01_dQ_dspsetup(){this.svf_tilde_01_dQ_reset()}svf_tilde_01_dQ_reset(){this.svf_tilde_01_dQ_prev=0}svf_tilde_01_dspsetup(t){this.svf_tilde_01_setupDone&&!t||(this.svf_tilde_01_setupDone=!0,this.svf_tilde_01_dFreq_dspsetup(),this.svf_tilde_01_dQ_dspsetup())}phasor_02_ph_next(t,a){RNBO_UNUSED(a);const r=t*this.phasor_02_ph_conv;this.phasor_02_ph_currentPhase<0&&(this.phasor_02_ph_currentPhase=1+this.phasor_02_ph_currentPhase),this.phasor_02_ph_currentPhase>1&&(this.phasor_02_ph_currentPhase=this.phasor_02_ph_currentPhase-1);var s=this.phasor_02_ph_currentPhase;return this.phasor_02_ph_currentPhase+=r,s}phasor_02_ph_reset(){this.phasor_02_ph_currentPhase=0}phasor_02_ph_dspsetup(){this.phasor_02_ph_conv=1/this.sr}phasor_02_dspsetup(t){this.phasor_02_setupDone&&!t||(this.phasor_02_conv=1/this.samplerate(),this.phasor_02_setupDone=!0,this.phasor_02_ph_dspsetup())}p_02_calcActiveVoices(){{let t=0;for(let a=0;a<8;a++)this.p_02[a].getIsMuted()||t++;return t}}limi_01_dc1_next(t,a){var r=t-this.limi_01_dc1_xm1+this.limi_01_dc1_ym1*a;return this.limi_01_dc1_xm1=t,this.limi_01_dc1_ym1=r,r}limi_01_dc1_reset(){this.limi_01_dc1_xm1=0,this.limi_01_dc1_ym1=0}limi_01_dc1_dspsetup(){this.limi_01_dc1_reset()}limi_01_dc2_next(t,a){var r=t-this.limi_01_dc2_xm1+this.limi_01_dc2_ym1*a;return this.limi_01_dc2_xm1=t,this.limi_01_dc2_ym1=r,r}limi_01_dc2_reset(){this.limi_01_dc2_xm1=0,this.limi_01_dc2_ym1=0}limi_01_dc2_dspsetup(){this.limi_01_dc2_reset()}limi_01_dc_next(t,a,r){switch(t){case 0:return this.limi_01_dc1_next(a,r);default:return this.limi_01_dc2_next(a,r)}return 0}limi_01_dc_reset(t){switch(t){case 0:return this.limi_01_dc1_reset();default:return this.limi_01_dc2_reset()}}limi_01_dc_dspsetup(t){switch(t){case 0:return this.limi_01_dc1_dspsetup();default:return this.limi_01_dc2_dspsetup()}}limi_01_reset(){this.limi_01_recover=1e3/(this.limi_01_release*this.samplerate()),this.limi_01_recover*=.707}limi_01_dspsetup(t){this.limi_01_setupDone&&!t||(this.limi_01_reset(),this.limi_01_setupDone=!0,this.limi_01_dc1_dspsetup(),this.limi_01_dc2_dspsetup())}svf_tilde_02_dFreq_next(t){var a=t-this.svf_tilde_02_dFreq_prev;return this.svf_tilde_02_dFreq_prev=t,a}svf_tilde_02_dFreq_dspsetup(){this.svf_tilde_02_dFreq_reset()}svf_tilde_02_dFreq_reset(){this.svf_tilde_02_dFreq_prev=0}svf_tilde_02_dQ_next(t){var a=t-this.svf_tilde_02_dQ_prev;return this.svf_tilde_02_dQ_prev=t,a}svf_tilde_02_dQ_dspsetup(){this.svf_tilde_02_dQ_reset()}svf_tilde_02_dQ_reset(){this.svf_tilde_02_dQ_prev=0}svf_tilde_02_dspsetup(t){this.svf_tilde_02_setupDone&&!t||(this.svf_tilde_02_setupDone=!0,this.svf_tilde_02_dFreq_dspsetup(),this.svf_tilde_02_dQ_dspsetup())}param_06_getPresetValue(t){t.value=this.param_06_value}param_06_setPresetValue(t){stateIsEmpty(t)||this.param_06_value_set(t.value)}param_07_getPresetValue(t){t.value=this.param_07_value}param_07_setPresetValue(t){stateIsEmpty(t)||this.param_07_value_set(t.value)}param_08_getPresetValue(t){t.value=this.param_08_value}param_08_setPresetValue(t){stateIsEmpty(t)||this.param_08_value_set(t.value)}param_09_getPresetValue(t){t.value=this.param_09_value}param_09_setPresetValue(t){stateIsEmpty(t)||this.param_09_value_set(t.value)}param_10_getPresetValue(t){t.value=this.param_10_value}param_10_setPresetValue(t){stateIsEmpty(t)||this.param_10_value_set(t.value)}param_11_getPresetValue(t){t.value=this.param_11_value}param_11_setPresetValue(t){stateIsEmpty(t)||this.param_11_value_set(t.value)}param_12_getPresetValue(t){t.value=this.param_12_value}param_12_setPresetValue(t){stateIsEmpty(t)||this.param_12_value_set(t.value)}data_01_init(){this.data_01_buffer.setWantsFill(!0)}data_01_evaluateSizeExpr(t,a){RNBO_UNUSED(a),RNBO_UNUSED(t);return 0}data_01_dspsetup(t){this.data_01_setupDone&&!t||(2==this.data_01_sizemode?(this.data_01_buffer=this.data_01_buffer.setSize(this.mstosamps(this.data_01_sizems)),updateDataRef(this,this.data_01_buffer)):3==this.data_01_sizemode&&(this.data_01_buffer=this.data_01_buffer.setSize(this.data_01_evaluateSizeExpr(this.samplerate(),this.vectorsize())),updateDataRef(this,this.data_01_buffer)),this.data_01_setupDone=!0)}data_01_bufferUpdated(){this.data_01_report()}data_01_report(){this.data_01_sizeout_set(this.data_01_buffer.getSize()),this.data_01_chanout_set(this.data_01_buffer.getChannels()),this.data_01_srout_set(this.data_01_buffer.getSampleRate())}data_02_init(){this.data_02_buffer.setWantsFill(!0)}data_02_evaluateSizeExpr(t,a){RNBO_UNUSED(a),RNBO_UNUSED(t);return 0}data_02_dspsetup(t){this.data_02_setupDone&&!t||(2==this.data_02_sizemode?(this.data_02_buffer=this.data_02_buffer.setSize(this.mstosamps(this.data_02_sizems)),updateDataRef(this,this.data_02_buffer)):3==this.data_02_sizemode&&(this.data_02_buffer=this.data_02_buffer.setSize(this.data_02_evaluateSizeExpr(this.samplerate(),this.vectorsize())),updateDataRef(this,this.data_02_buffer)),this.data_02_setupDone=!0)}data_02_bufferUpdated(){this.data_02_report()}data_02_report(){this.data_02_sizeout_set(this.data_02_buffer.getSize()),this.data_02_chanout_set(this.data_02_buffer.getChannels()),this.data_02_srout_set(this.data_02_buffer.getSampleRate())}param_13_getPresetValue(t){t.value=this.param_13_value}param_13_setPresetValue(t){stateIsEmpty(t)||this.param_13_value_set(t.value)}param_14_getPresetValue(t){t.value=this.param_14_value}param_14_setPresetValue(t){stateIsEmpty(t)||this.param_14_value_set(t.value)}data_03_init(){this.data_03_buffer.setWantsFill(!0)}data_03_evaluateSizeExpr(t,a){RNBO_UNUSED(a),RNBO_UNUSED(t);return 0}data_03_dspsetup(t){this.data_03_setupDone&&!t||(2==this.data_03_sizemode?(this.data_03_buffer=this.data_03_buffer.setSize(this.mstosamps(this.data_03_sizems)),updateDataRef(this,this.data_03_buffer)):3==this.data_03_sizemode&&(this.data_03_buffer=this.data_03_buffer.setSize(this.data_03_evaluateSizeExpr(this.samplerate(),this.vectorsize())),updateDataRef(this,this.data_03_buffer)),this.data_03_setupDone=!0)}data_03_bufferUpdated(){this.data_03_report()}data_03_report(){this.data_03_sizeout_set(this.data_03_buffer.getSize()),this.data_03_chanout_set(this.data_03_buffer.getChannels()),this.data_03_srout_set(this.data_03_buffer.getSampleRate())}param_15_getPresetValue(t){t.value=this.param_15_value}param_15_setPresetValue(t){stateIsEmpty(t)||this.param_15_value_set(t.value)}data_04_init(){this.data_04_buffer.setWantsFill(!0)}data_04_evaluateSizeExpr(t,a){RNBO_UNUSED(a),RNBO_UNUSED(t);return 0}data_04_dspsetup(t){this.data_04_setupDone&&!t||(2==this.data_04_sizemode?(this.data_04_buffer=this.data_04_buffer.setSize(this.mstosamps(this.data_04_sizems)),updateDataRef(this,this.data_04_buffer)):3==this.data_04_sizemode&&(this.data_04_buffer=this.data_04_buffer.setSize(this.data_04_evaluateSizeExpr(this.samplerate(),this.vectorsize())),updateDataRef(this,this.data_04_buffer)),this.data_04_setupDone=!0)}data_04_bufferUpdated(){this.data_04_report()}data_04_report(){this.data_04_sizeout_set(this.data_04_buffer.getSize()),this.data_04_chanout_set(this.data_04_buffer.getChannels()),this.data_04_srout_set(this.data_04_buffer.getSampleRate())}midinotecontroller_01_sendnoteoff(t){let a=t-1;if(this.midinotecontroller_01_voice_state[a]!=MIDI_NoteState_Off){let r=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(t),this.midinotecontroller_01_midiout_set(MIDI_NoteOffMask|this.midinotecontroller_01_voice_channel[a]),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_voice_notenumber[a]),this.midinotecontroller_01_midiout_set(64),this.midinotecontroller_01_voice_state[a]=MIDI_NoteState_Off,this.midinotecontroller_01_target_set(r)}}midinotecontroller_01_sendpitchbend(t){if(t>=0&&t<8){let a=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(t+1);let r=this.midinotecontroller_01_channel_pitchbend[this.midinotecontroller_01_voice_channel[t]];this.midinotecontroller_01_midiout_set(MIDI_PitchBendMask|this.midinotecontroller_01_voice_channel[t]),this.midinotecontroller_01_midiout_set(127&r),this.midinotecontroller_01_midiout_set(r>>7&127),this.midinotecontroller_01_target_set(a)}}midinotecontroller_01_sendpressure(t){let a=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(t+1),this.midinotecontroller_01_midiout_set(MIDI_ChannelPressureMask|this.midinotecontroller_01_voice_channel[t]),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_channel_pressure[this.midinotecontroller_01_voice_channel[t]]),this.midinotecontroller_01_target_set(a)}midinotecontroller_01_sendtimbre(t){let a=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(t+1),this.midinotecontroller_01_midiout_set(MIDI_CCMask|this.midinotecontroller_01_voice_channel[t]),this.midinotecontroller_01_midiout_set(MIDI_CC_TimbreLSB),this.midinotecontroller_01_midiout_set(127&this.midinotecontroller_01_channel_timbre[this.midinotecontroller_01_voice_channel[t]]),this.midinotecontroller_01_midiout_set(MIDI_CCMask|this.midinotecontroller_01_voice_channel[t]),this.midinotecontroller_01_midiout_set(MIDI_CC_TimbreMSB),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_channel_timbre[this.midinotecontroller_01_voice_channel[t]]>>7&127),this.midinotecontroller_01_target_set(a)}midinotecontroller_01_sendallnotesoff(){for(let t=1;t<=8;t++)this.midinotecontroller_01_sendnoteoff(t)}globaltransport_getTempoAtSample(t){return RNBO_UNUSED(t),this.vs>0?this.globaltransport_tempo[t]:this.globaltransport_lastTempo}globaltransport_getTempo(){return this.globaltransport_getTempoAtSample(this.sampleOffsetIntoNextAudioBuffer)}globaltransport_getStateAtSample(t){return RNBO_UNUSED(t),this.vs>0?this.globaltransport_state[t]:this.globaltransport_lastState}globaltransport_getState(){return this.globaltransport_getStateAtSample(this.sampleOffsetIntoNextAudioBuffer)}globaltransport_getBeatTimeAtMsTime(t){for(var a=2;a<this.globaltransport_beatTimeChanges.length&&this.globaltransport_beatTimeChanges[a+1]<=t;)a+=2;a-=2;var r=this.globaltransport_beatTimeChanges[a];if(0==this.globaltransport_getState())return r;var s=t-this.globaltransport_beatTimeChanges[a+1];return r+this.mstobeats(s)}globaltransport_setTempo(t,a){if(a)this.processTempoEvent(this.currenttime(),t),this.globaltransport_notify=!0;else if(this.globaltransport_getTempo()!=t){const a=this.currenttime();return this.globaltransport_beatTimeChanges.push(this.globaltransport_getBeatTimeAtMsTime(a)),this.globaltransport_beatTimeChanges.push(a),fillSignal(this.globaltransport_tempo,this.vs,t,this.sampleOffsetIntoNextAudioBuffer),this.globaltransport_lastTempo=t,this.globaltransport_tempoNeedsReset=!0,!0}return!1}globaltransport_getBeatTime(){return this.globaltransport_getBeatTimeAtMsTime(this.currenttime())}globaltransport_setState(t,a){if(a)this.processTransportEvent(this.currenttime(),TransportState(t)),this.globaltransport_notify=!0;else if(this.globaltransport_getState()!=t)return fillSignal(this.globaltransport_state,this.vs,t,this.sampleOffsetIntoNextAudioBuffer),this.globaltransport_lastState=TransportState(t),this.globaltransport_stateNeedsReset=!0,0==t&&(this.globaltransport_beatTimeChanges.push(this.globaltransport_getBeatTime()),this.globaltransport_beatTimeChanges.push(this.currenttime())),!0;return!1}globaltransport_setBeatTime(t,a){if(a)return this.processBeatTimeEvent(this.currenttime(),t),this.globaltransport_notify=!0,!1;var r=!1;return this.globaltransport_getBeatTime()!=t&&(r=!0),this.globaltransport_beatTimeChanges.push(t),this.globaltransport_beatTimeChanges.push(this.currenttime()),r}globaltransport_getBeatTimeAtSample(t){var a=this.sampstoms(t);return this.globaltransport_getBeatTimeAtMsTime(this.currenttime()+a)}globaltransport_getTimeSignatureAtMsTime(t){for(var a=3;a<this.globaltransport_timeSignatureChanges.length&&this.globaltransport_timeSignatureChanges[a+2]<=t;)a+=3;return a-=3,[this.globaltransport_timeSignatureChanges[a],this.globaltransport_timeSignatureChanges[a+1]]}globaltransport_getTimeSignature(){return this.globaltransport_getTimeSignatureAtMsTime(this.currenttime())}globaltransport_getTimeSignatureAtSample(t){var a=this.sampstoms(t);return this.globaltransport_getTimeSignatureAtMsTime(this.currenttime()+a)}globaltransport_setTimeSignature(t,a,r){if(r)this.processTimeSignatureEvent(this.currenttime(),t,a),this.globaltransport_notify=!0;else{var s=this.globaltransport_getTimeSignature();if(s[0]!=t||s[1]!=a)return this.globaltransport_timeSignatureChanges.push(t),this.globaltransport_timeSignatureChanges.push(a),this.globaltransport_timeSignatureChanges.push(this.currenttime()),!0}return!1}globaltransport_advance(){this.globaltransport_tempoNeedsReset&&(fillSignal(this.globaltransport_tempo,this.vs,this.globaltransport_lastTempo),this.globaltransport_tempoNeedsReset=!1,this.globaltransport_notify&&this.getEngine().sendTempoEvent(this.globaltransport_lastTempo)),this.globaltransport_stateNeedsReset&&(fillSignal(this.globaltransport_state,this.vs,this.globaltransport_lastState),this.globaltransport_stateNeedsReset=!1,this.globaltransport_notify&&this.getEngine().sendTransportEvent(TransportState(this.globaltransport_lastState))),this.globaltransport_beatTimeChanges.length>2&&(this.globaltransport_beatTimeChanges[0]=this.globaltransport_beatTimeChanges[this.globaltransport_beatTimeChanges.length-2],this.globaltransport_beatTimeChanges[1]=this.globaltransport_beatTimeChanges[this.globaltransport_beatTimeChanges.length-1],this.globaltransport_beatTimeChanges.length=2,this.globaltransport_notify&&this.getEngine().sendBeatTimeEvent(this.globaltransport_beatTimeChanges[0])),this.globaltransport_timeSignatureChanges.length>3&&(this.globaltransport_timeSignatureChanges[0]=this.globaltransport_timeSignatureChanges[this.globaltransport_timeSignatureChanges.length-3],this.globaltransport_timeSignatureChanges[1]=this.globaltransport_timeSignatureChanges[this.globaltransport_timeSignatureChanges.length-2],this.globaltransport_timeSignatureChanges[2]=this.globaltransport_timeSignatureChanges[this.globaltransport_timeSignatureChanges.length-1],this.globaltransport_timeSignatureChanges.length=3,this.globaltransport_notify&&this.getEngine().sendTimeSignatureEvent(this.globaltransport_timeSignatureChanges[0],this.globaltransport_timeSignatureChanges[1])),this.globaltransport_notify=!1}globaltransport_dspsetup(t){this.globaltransport_setupDone&&!t||(fillSignal(this.globaltransport_tempo,this.vs,this.globaltransport_lastTempo),this.globaltransport_tempoNeedsReset=!1,fillSignal(this.globaltransport_state,this.vs,this.globaltransport_lastState),this.globaltransport_stateNeedsReset=!1,this.globaltransport_setupDone=!0)}stackprotect_check(){return this.stackprotect_count++,this.stackprotect_count>128&&(console.log(\"STACK OVERFLOW DETECTED - stopped processing branch !\"),!0)}updateTime(t){this._currentTime=t,this.sampleOffsetIntoNextAudioBuffer=rnbo_fround(this.msToSamps(t-this.getEngine().getCurrentTime(),this.sr)),this.sampleOffsetIntoNextAudioBuffer>=this.vs&&(this.sampleOffsetIntoNextAudioBuffer=this.vs-1),this.sampleOffsetIntoNextAudioBuffer<0&&(this.sampleOffsetIntoNextAudioBuffer=0)}assign_defaults(){}setEngineAndPatcher(t,a){this._engineInterface=t,this._parentPatcher=a}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this}}rnboObj=new RNBOPatcher;",
  "wasm": "",
  "wasmEncoding": "base64",
  "presets": [
    {
      "name": "mirror",
      "preset": {
        "__sps": {
          "granular": [
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 0
              },
              "duration": {
                "value": 9120
              },
              "rate": {
                "value": 30
              },
              "scatter": {
                "value": 220500
              },
              "wet_dry_mix": {
                "value": 0.4800000000000001
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 0
              },
              "duration": {
                "value": 9120
              },
              "rate": {
                "value": 30
              },
              "scatter": {
                "value": 220500
              },
              "wet_dry_mix": {
                "value": 0.4800000000000001
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 0
              },
              "duration": {
                "value": 9120
              },
              "rate": {
                "value": 30
              },
              "scatter": {
                "value": 220500
              },
              "wet_dry_mix": {
                "value": 0.4800000000000001
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 0
              },
              "duration": {
                "value": 9120
              },
              "rate": {
                "value": 30
              },
              "scatter": {
                "value": 220500
              },
              "wet_dry_mix": {
                "value": 0.4800000000000001
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 0
              },
              "duration": {
                "value": 9120
              },
              "rate": {
                "value": 30
              },
              "scatter": {
                "value": 220500
              },
              "wet_dry_mix": {
                "value": 0.4800000000000001
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 0
              },
              "duration": {
                "value": 9120
              },
              "rate": {
                "value": 30
              },
              "scatter": {
                "value": 220500
              },
              "wet_dry_mix": {
                "value": 0.4800000000000001
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 0
              },
              "duration": {
                "value": 9120
              },
              "rate": {
                "value": 30
              },
              "scatter": {
                "value": 220500
              },
              "wet_dry_mix": {
                "value": 0.4800000000000001
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 0
              },
              "duration": {
                "value": 9120
              },
              "rate": {
                "value": 30
              },
              "scatter": {
                "value": 220500
              },
              "wet_dry_mix": {
                "value": 0.4800000000000001
              }
            }
          ]
        },
        "attack": {
          "value": 20
        },
        "decay": {
          "value": 215
        },
        "gain": {
          "value": 0
        },
        "grainDur": {
          "value": 190
        },
        "grainRate": {
          "value": 30
        },
        "release": {
          "value": 1003
        },
        "scatter": {
          "value": 5000
        },
        "sustain": {
          "value": 0.6300000000000001
        },
        "traversal": {
          "value": -70
        },
        "wet_dry_mix": {
          "value": 0.4800000000000001
        }
      }
    },
    {
      "name": "backwards swoop",
      "preset": {
        "__sps": {
          "granular": [
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 1
              },
              "duration": {
                "value": 27791.999999999996
              },
              "rate": {
                "value": 51
              },
              "scatter": {
                "value": 8400
              },
              "wet_dry_mix": {
                "value": 0.7300000000000001
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 1
              },
              "duration": {
                "value": 27791.999999999996
              },
              "rate": {
                "value": 51
              },
              "scatter": {
                "value": 8400
              },
              "wet_dry_mix": {
                "value": 0.7300000000000001
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 1
              },
              "duration": {
                "value": 27791.999999999996
              },
              "rate": {
                "value": 51
              },
              "scatter": {
                "value": 8400
              },
              "wet_dry_mix": {
                "value": 0.7300000000000001
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 1
              },
              "duration": {
                "value": 27791.999999999996
              },
              "rate": {
                "value": 51
              },
              "scatter": {
                "value": 8400
              },
              "wet_dry_mix": {
                "value": 0.7300000000000001
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 1
              },
              "duration": {
                "value": 27791.999999999996
              },
              "rate": {
                "value": 51
              },
              "scatter": {
                "value": 8400
              },
              "wet_dry_mix": {
                "value": 0.7300000000000001
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 1
              },
              "duration": {
                "value": 27791.999999999996
              },
              "rate": {
                "value": 51
              },
              "scatter": {
                "value": 8400
              },
              "wet_dry_mix": {
                "value": 0.7300000000000001
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 1
              },
              "duration": {
                "value": 27791.999999999996
              },
              "rate": {
                "value": 51
              },
              "scatter": {
                "value": 8400
              },
              "wet_dry_mix": {
                "value": 0.7300000000000001
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 1
              },
              "duration": {
                "value": 27791.999999999996
              },
              "rate": {
                "value": 51
              },
              "scatter": {
                "value": 8400
              },
              "wet_dry_mix": {
                "value": 0.7300000000000001
              }
            }
          ]
        },
        "attack": {
          "value": 20
        },
        "decay": {
          "value": 215
        },
        "gain": {
          "value": 0
        },
        "grainDur": {
          "value": 579
        },
        "grainRate": {
          "value": 51
        },
        "release": {
          "value": 1003
        },
        "scatter": {
          "value": 175
        },
        "sustain": {
          "value": 0.6300000000000001
        },
        "traversal": {
          "value": -30
        },
        "wet_dry_mix": {
          "value": 0.7300000000000001
        }
      }
    },
    {
      "name": "smatterings",
      "preset": {
        "__sps": {
          "granular": [
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 2
              },
              "duration": {
                "value": 24288
              },
              "rate": {
                "value": 10.200000000000001
              },
              "scatter": {
                "value": 1584
              },
              "wet_dry_mix": {
                "value": 0.8930000000000002
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 2
              },
              "duration": {
                "value": 24288
              },
              "rate": {
                "value": 10.200000000000001
              },
              "scatter": {
                "value": 1584
              },
              "wet_dry_mix": {
                "value": 0.8930000000000002
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 2
              },
              "duration": {
                "value": 24288
              },
              "rate": {
                "value": 10.200000000000001
              },
              "scatter": {
                "value": 1584
              },
              "wet_dry_mix": {
                "value": 0.8930000000000002
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 2
              },
              "duration": {
                "value": 24288
              },
              "rate": {
                "value": 10.200000000000001
              },
              "scatter": {
                "value": 1584
              },
              "wet_dry_mix": {
                "value": 0.8930000000000002
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 2
              },
              "duration": {
                "value": 24288
              },
              "rate": {
                "value": 10.200000000000001
              },
              "scatter": {
                "value": 1584
              },
              "wet_dry_mix": {
                "value": 0.8930000000000002
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 2
              },
              "duration": {
                "value": 24288
              },
              "rate": {
                "value": 10.200000000000001
              },
              "scatter": {
                "value": 1584
              },
              "wet_dry_mix": {
                "value": 0.8930000000000002
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 2
              },
              "duration": {
                "value": 24288
              },
              "rate": {
                "value": 10.200000000000001
              },
              "scatter": {
                "value": 1584
              },
              "wet_dry_mix": {
                "value": 0.8930000000000002
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 2
              },
              "duration": {
                "value": 24288
              },
              "rate": {
                "value": 10.200000000000001
              },
              "scatter": {
                "value": 1584
              },
              "wet_dry_mix": {
                "value": 0.8930000000000002
              }
            }
          ]
        },
        "attack": {
          "value": 997
        },
        "decay": {
          "value": 215
        },
        "gain": {
          "value": 0
        },
        "grainDur": {
          "value": 506
        },
        "grainRate": {
          "value": 10.200000000000001
        },
        "release": {
          "value": 74
        },
        "scatter": {
          "value": 33
        },
        "sustain": {
          "value": 0.6300000000000001
        },
        "traversal": {
          "value": 66
        },
        "wet_dry_mix": {
          "value": 0.8930000000000002
        }
      }
    },
    {
      "name": "foil",
      "preset": {
        "__sps": {
          "granular": [
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 0
              },
              "duration": {
                "value": 2880
              },
              "rate": {
                "value": 236
              },
              "scatter": {
                "value": 42672
              },
              "wet_dry_mix": {
                "value": 1
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 0
              },
              "duration": {
                "value": 2880
              },
              "rate": {
                "value": 236
              },
              "scatter": {
                "value": 42672
              },
              "wet_dry_mix": {
                "value": 1
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 0
              },
              "duration": {
                "value": 2880
              },
              "rate": {
                "value": 236
              },
              "scatter": {
                "value": 42672
              },
              "wet_dry_mix": {
                "value": 1
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 0
              },
              "duration": {
                "value": 2880
              },
              "rate": {
                "value": 236
              },
              "scatter": {
                "value": 42672
              },
              "wet_dry_mix": {
                "value": 1
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 0
              },
              "duration": {
                "value": 2880
              },
              "rate": {
                "value": 236
              },
              "scatter": {
                "value": 42672
              },
              "wet_dry_mix": {
                "value": 1
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 0
              },
              "duration": {
                "value": 2880
              },
              "rate": {
                "value": 236
              },
              "scatter": {
                "value": 42672
              },
              "wet_dry_mix": {
                "value": 1
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 0
              },
              "duration": {
                "value": 2880
              },
              "rate": {
                "value": 236
              },
              "scatter": {
                "value": 42672
              },
              "wet_dry_mix": {
                "value": 1
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 0
              },
              "duration": {
                "value": 2880
              },
              "rate": {
                "value": 236
              },
              "scatter": {
                "value": 42672
              },
              "wet_dry_mix": {
                "value": 1
              }
            }
          ]
        },
        "attack": {
          "value": 21
        },
        "decay": {
          "value": 40
        },
        "gain": {
          "value": 0
        },
        "grainDur": {
          "value": 60
        },
        "grainRate": {
          "value": 236
        },
        "release": {
          "value": 74
        },
        "scatter": {
          "value": 889
        },
        "sustain": {
          "value": 0.125
        },
        "traversal": {
          "value": 131
        },
        "wet_dry_mix": {
          "value": 1
        }
      }
    },
    {
      "name": "nearly frozen",
      "preset": {
        "__sps": {
          "granular": [
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 2
              },
              "duration": {
                "value": 6624.000000000001
              },
              "rate": {
                "value": 236
              },
              "scatter": {
                "value": 816.0000000000001
              },
              "wet_dry_mix": {
                "value": 1
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 2
              },
              "duration": {
                "value": 6624.000000000001
              },
              "rate": {
                "value": 236
              },
              "scatter": {
                "value": 816.0000000000001
              },
              "wet_dry_mix": {
                "value": 1
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 2
              },
              "duration": {
                "value": 6624.000000000001
              },
              "rate": {
                "value": 236
              },
              "scatter": {
                "value": 816.0000000000001
              },
              "wet_dry_mix": {
                "value": 1
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 2
              },
              "duration": {
                "value": 6624.000000000001
              },
              "rate": {
                "value": 236
              },
              "scatter": {
                "value": 816.0000000000001
              },
              "wet_dry_mix": {
                "value": 1
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 2
              },
              "duration": {
                "value": 6624.000000000001
              },
              "rate": {
                "value": 236
              },
              "scatter": {
                "value": 816.0000000000001
              },
              "wet_dry_mix": {
                "value": 1
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 2
              },
              "duration": {
                "value": 6624.000000000001
              },
              "rate": {
                "value": 236
              },
              "scatter": {
                "value": 816.0000000000001
              },
              "wet_dry_mix": {
                "value": 1
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 2
              },
              "duration": {
                "value": 6624.000000000001
              },
              "rate": {
                "value": 236
              },
              "scatter": {
                "value": 816.0000000000001
              },
              "wet_dry_mix": {
                "value": 1
              }
            },
            {
              "__sps": {
                "p_obj-58": {}
              },
              "buffer": {
                "value": 2
              },
              "duration": {
                "value": 6624.000000000001
              },
              "rate": {
                "value": 236
              },
              "scatter": {
                "value": 816.0000000000001
              },
              "wet_dry_mix": {
                "value": 1
              }
            }
          ]
        },
        "attack": {
          "value": 399
        },
        "decay": {
          "value": 40
        },
        "gain": {
          "value": 0
        },
        "grainDur": {
          "value": 138
        },
        "grainRate": {
          "value": 236
        },
        "release": {
          "value": 5000
        },
        "scatter": {
          "value": 17
        },
        "sustain": {
          "value": 1
        },
        "traversal": {
          "value": 0.1
        },
        "wet_dry_mix": {
          "value": 1
        }
      }
    }
  ]
}