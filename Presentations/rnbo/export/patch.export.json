{
  "desc": {
    "parameters": [
      {
        "type": "ParameterTypeNumber",
        "index": 0,
        "name": "grainRate",
        "paramId": "grainRate",
        "minimum": 0,
        "maximum": 1000,
        "exponent": 1,
        "steps": 0,
        "initialValue": 20,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "hz",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s07",
        "constrainFunc": "param_01_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 1,
        "name": "grainDur",
        "paramId": "grainDur",
        "minimum": 0.1,
        "maximum": 5000,
        "exponent": 1,
        "steps": 0,
        "initialValue": 50,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "ms",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s06",
        "constrainFunc": "param_02_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 2,
        "name": "trav",
        "paramId": "trav",
        "minimum": -800,
        "maximum": 800,
        "exponent": 1,
        "steps": 0,
        "initialValue": 100,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "%",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s08",
        "constrainFunc": "param_03_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 3,
        "name": "injitter",
        "paramId": "injitter",
        "minimum": 0,
        "maximum": 5000,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "ms",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s05",
        "constrainFunc": "param_04_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 4,
        "name": "gain",
        "paramId": "gain",
        "minimum": -120,
        "maximum": 6,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "db",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s09",
        "constrainFunc": "param_05_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 5,
        "name": "attack",
        "paramId": "attack",
        "minimum": 0,
        "maximum": 5000,
        "exponent": 1,
        "steps": 0,
        "initialValue": 20,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "ms",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s04",
        "constrainFunc": "param_06_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 6,
        "name": "decay",
        "paramId": "decay",
        "minimum": 0,
        "maximum": 5000,
        "exponent": 1,
        "steps": 0,
        "initialValue": 20,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "ms",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s03",
        "constrainFunc": "param_07_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 7,
        "name": "sustain",
        "paramId": "sustain",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0.8,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "amp",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s01",
        "constrainFunc": "param_08_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 8,
        "name": "release",
        "paramId": "release",
        "minimum": 0,
        "maximum": 5000,
        "exponent": 1,
        "steps": 0,
        "initialValue": 500,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "ms",
        "order": 0,
        "sendinit": true,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "param_s02",
        "constrainFunc": "param_09_value_constrain"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 9,
        "name": "numberobj_01_value",
        "paramId": "number_obj-21/value",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "sendinit": 0,
        "initialized": true,
        "debug": false,
        "saveable": true,
        "transmittable": true,
        "visible": false,
        "signalIndex": null,
        "ioType": "IOTypeUndefined",
        "serialId": "numberobj_a1_s01"
      }
    ],
    "numParameters": 10,
    "numSignalInParameters": 0,
    "numSignalOutParameters": 0,
    "numInputChannels": 0,
    "numOutputChannels": 2,
    "numMidiInputPorts": 1,
    "numMidiOutputPorts": 0,
    "externalDataRefs": [
      {
        "id": "jongly",
        "file": "jongly.wav"
      },
      {
        "id": "usr_buff"
      },
      {
        "id": "harp_riff",
        "file": "harp_riff.wav"
      }
    ],
    "patcherSerial": 0,
    "inports": [
      {
        "tag": "in1",
        "meta": ""
      }
    ],
    "outports": [],
    "inlets": [
      {
        "type": "event",
        "index": 1,
        "tag": "in1",
        "meta": ""
      },
      {
        "type": "midi"
      }
    ],
    "outlets": [
      {
        "type": "signal",
        "index": 1,
        "tag": "out1",
        "meta": ""
      },
      {
        "type": "signal",
        "index": 2,
        "tag": "out2",
        "meta": ""
      }
    ],
    "paramConversion": {
      "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
      "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 7:\n    case 9:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n            let normalizedValue = (value - 0) / (1 - 0);\n            return normalizedValue;\n        }\n    case 0:\n        {\n            value = (value < 0 ? 0 : (value > 1000 ? 1000 : value));\n            let normalizedValue = (value - 0) / (1000 - 0);\n            return normalizedValue;\n        }\n    case 3:\n    case 5:\n    case 6:\n    case 8:\n        {\n            value = (value < 0 ? 0 : (value > 5000 ? 5000 : value));\n            let normalizedValue = (value - 0) / (5000 - 0);\n            return normalizedValue;\n        }\n    case 1:\n        {\n            value = (value < 0.1 ? 0.1 : (value > 5000 ? 5000 : value));\n            let normalizedValue = (value - 0.1) / (5000 - 0.1);\n            return normalizedValue;\n        }\n    case 2:\n        {\n            value = (value < -800 ? -800 : (value > 800 ? 800 : value));\n            let normalizedValue = (value - -800) / (800 - -800);\n            return normalizedValue;\n        }\n    case 4:\n        {\n            value = (value < -120 ? -120 : (value > 6 ? 6 : value));\n            let normalizedValue = (value - -120) / (6 - -120);\n            return normalizedValue;\n        }\n    default:\n        index -= 10;\n\n        if (index < this.p_01[0].getNumParameters()) {\n            {\n                return this.p_01[0].convertToNormalizedParameterValue(index, value);\n            }\n        }\n\n        return value;\n    }\n}",
      "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 7:\n    case 9:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (1 - 0);\n            }\n        }\n    case 0:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (1000 - 0);\n            }\n        }\n    case 3:\n    case 5:\n    case 6:\n    case 8:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (5000 - 0);\n            }\n        }\n    case 1:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0.1 + value * (5000 - 0.1);\n            }\n        }\n    case 2:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return -800 + value * (800 - -800);\n            }\n        }\n    case 4:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return -120 + value * (6 - -120);\n            }\n        }\n    default:\n        index -= 10;\n\n        if (index < this.p_01[0].getNumParameters()) {\n            {\n                return this.p_01[0].convertFromNormalizedParameterValue(index, value);\n            }\n        }\n\n        return value;\n    }\n}",
      "getNumParameters": "function getNumParameters() {\n    return 10 + this.p_01[0].getNumParameters();\n}",
      "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    case 0:\n        {\n            v = (v > 1000 ? 1000 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 1:\n        {\n            v = (v > 5000 ? 5000 : (v < 0.1 ? 0.1 : v));\n            return v;\n        }\n    case 2:\n        {\n            v = (v > 800 ? 800 : (v < -800 ? -800 : v));\n            return v;\n        }\n    case 3:\n        {\n            v = (v > 5000 ? 5000 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 4:\n        {\n            v = (v > 6 ? 6 : (v < -120 ? -120 : v));\n            return v;\n        }\n    case 5:\n        {\n            v = (v > 5000 ? 5000 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 6:\n        {\n            v = (v > 5000 ? 5000 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 7:\n        {\n            v = (v > 1 ? 1 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 8:\n        {\n            v = (v > 5000 ? 5000 : (v < 0 ? 0 : v));\n            return v;\n        }\n    default:\n        index -= 10;\n\n        if (index < this.p_01[0].getNumParameters()) {\n            {\n                return this.p_01[0].constrainParameterValue(index, value);\n            }\n        }\n\n        return value;\n    }\n}",
      "subpatches": {
        "p_01": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
          "subpatches": {},
          "isPolyphonic": true
        }
      },
      "isPolyphonic": false
    },
    "rnboVersion": "0.17.0",
    "meta": {
      "architecture": "x64",
      "maxversion": "8.3.1",
      "filename": "gran_intro.maxpat"
    },
    "options": {
      "classname": "rnbomatic",
      "minifyOutput": true
    }
  },
  "src": "class RNBOSubpatcher_05{constructor(){this.dspexpr_01_in1=0,this.dspexpr_01_in2=.5,this.floatnum_01_input_number=0,this.floatnum_01_value=0,this.phasor_01_freq=8,this.granulator_01_start=0,this.granulator_01_length=2205,this.granulator_01_rate=1,this.granulator_01_bchan=0,this.granulator_01_limit=32,this.granulator_01_panpos=.5,this.dspexpr_02_in1=0,this.dspexpr_02_in2=0,this.dspexpr_03_in1=0,this.dspexpr_03_in2=0,this.dspexpr_04_in1=0,this.dspexpr_04_in2=4410,this.dspexpr_05_in1=0,this.dspexpr_05_in2=0,this.dspexpr_06_in1=0,this.notein_01_channel=0,this.ip_01_value=0,this.ip_01_impulse=0,this.gen_01_in1=0,this.gen_01_in2=0,this.expr_01_in1=0,this.expr_01_in2=60,this.expr_01_out1=0,this.mtof_01_midivalue=[],this.mtof_01_scale=[],this.mtof_01_map=[],this.mtof_01_base=440,this.ip_02_value=0,this.ip_02_impulse=0,this.expr_02_in1=0,this.expr_02_in2=0,this.expr_02_out1=0,this.select_01_test1=1,this.expr_03_in1=0,this.expr_03_in2=127,this.expr_03_out1=0,this.adsr_01_trigger=0,this.adsr_01_attack=20,this.adsr_01_decay=20,this.adsr_01_sustain=.8,this.adsr_01_release=100,this.unpack_01_out1=0,this.unpack_01_out2=0,this.unpack_01_out3=0,this.unpack_01_out4=0,this._currentTime=0,this.audioProcessSampleCount=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.signals=new Array(6),this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.floatnum_01_stored=0,this.phasor_01_sigbuf=0,this.phasor_01_lastLockedPhase=0,this.phasor_01_conv=0,this.phasor_01_ph_currentPhase=0,this.phasor_01_ph_conv=0,this.phasor_01_setupDone=!1,this.granulator_01_buffer=0,this.granulator_01_grainPan=Array(32).fill(0).map(t=>Array(2).fill(0)),this.granulator_01_startMul=1,this.granulator_01_lengthMul=1,this.granulator_01_limitLast=0,this.granulator_01_edgedetect_active=!1,this.granulator_01_grains1_sampleOffset=0,this.granulator_01_grains1_curRate=1,this.granulator_01_grains1_curStart=0,this.granulator_01_grains1_curLen=1,this.granulator_01_grains1_active=!1,this.granulator_01_grains1_backwards=!1,this.granulator_01_grains2_sampleOffset=0,this.granulator_01_grains2_curRate=1,this.granulator_01_grains2_curStart=0,this.granulator_01_grains2_curLen=1,this.granulator_01_grains2_active=!1,this.granulator_01_grains2_backwards=!1,this.granulator_01_grains3_sampleOffset=0,this.granulator_01_grains3_curRate=1,this.granulator_01_grains3_curStart=0,this.granulator_01_grains3_curLen=1,this.granulator_01_grains3_active=!1,this.granulator_01_grains3_backwards=!1,this.granulator_01_grains4_sampleOffset=0,this.granulator_01_grains4_curRate=1,this.granulator_01_grains4_curStart=0,this.granulator_01_grains4_curLen=1,this.granulator_01_grains4_active=!1,this.granulator_01_grains4_backwards=!1,this.granulator_01_grains5_sampleOffset=0,this.granulator_01_grains5_curRate=1,this.granulator_01_grains5_curStart=0,this.granulator_01_grains5_curLen=1,this.granulator_01_grains5_active=!1,this.granulator_01_grains5_backwards=!1,this.granulator_01_grains6_sampleOffset=0,this.granulator_01_grains6_curRate=1,this.granulator_01_grains6_curStart=0,this.granulator_01_grains6_curLen=1,this.granulator_01_grains6_active=!1,this.granulator_01_grains6_backwards=!1,this.granulator_01_grains7_sampleOffset=0,this.granulator_01_grains7_curRate=1,this.granulator_01_grains7_curStart=0,this.granulator_01_grains7_curLen=1,this.granulator_01_grains7_active=!1,this.granulator_01_grains7_backwards=!1,this.granulator_01_grains8_sampleOffset=0,this.granulator_01_grains8_curRate=1,this.granulator_01_grains8_curStart=0,this.granulator_01_grains8_curLen=1,this.granulator_01_grains8_active=!1,this.granulator_01_grains8_backwards=!1,this.granulator_01_grains9_sampleOffset=0,this.granulator_01_grains9_curRate=1,this.granulator_01_grains9_curStart=0,this.granulator_01_grains9_curLen=1,this.granulator_01_grains9_active=!1,this.granulator_01_grains9_backwards=!1,this.granulator_01_grains10_sampleOffset=0,this.granulator_01_grains10_curRate=1,this.granulator_01_grains10_curStart=0,this.granulator_01_grains10_curLen=1,this.granulator_01_grains10_active=!1,this.granulator_01_grains10_backwards=!1,this.granulator_01_grains11_sampleOffset=0,this.granulator_01_grains11_curRate=1,this.granulator_01_grains11_curStart=0,this.granulator_01_grains11_curLen=1,this.granulator_01_grains11_active=!1,this.granulator_01_grains11_backwards=!1,this.granulator_01_grains12_sampleOffset=0,this.granulator_01_grains12_curRate=1,this.granulator_01_grains12_curStart=0,this.granulator_01_grains12_curLen=1,this.granulator_01_grains12_active=!1,this.granulator_01_grains12_backwards=!1,this.granulator_01_grains13_sampleOffset=0,this.granulator_01_grains13_curRate=1,this.granulator_01_grains13_curStart=0,this.granulator_01_grains13_curLen=1,this.granulator_01_grains13_active=!1,this.granulator_01_grains13_backwards=!1,this.granulator_01_grains14_sampleOffset=0,this.granulator_01_grains14_curRate=1,this.granulator_01_grains14_curStart=0,this.granulator_01_grains14_curLen=1,this.granulator_01_grains14_active=!1,this.granulator_01_grains14_backwards=!1,this.granulator_01_grains15_sampleOffset=0,this.granulator_01_grains15_curRate=1,this.granulator_01_grains15_curStart=0,this.granulator_01_grains15_curLen=1,this.granulator_01_grains15_active=!1,this.granulator_01_grains15_backwards=!1,this.granulator_01_grains16_sampleOffset=0,this.granulator_01_grains16_curRate=1,this.granulator_01_grains16_curStart=0,this.granulator_01_grains16_curLen=1,this.granulator_01_grains16_active=!1,this.granulator_01_grains16_backwards=!1,this.granulator_01_grains17_sampleOffset=0,this.granulator_01_grains17_curRate=1,this.granulator_01_grains17_curStart=0,this.granulator_01_grains17_curLen=1,this.granulator_01_grains17_active=!1,this.granulator_01_grains17_backwards=!1,this.granulator_01_grains18_sampleOffset=0,this.granulator_01_grains18_curRate=1,this.granulator_01_grains18_curStart=0,this.granulator_01_grains18_curLen=1,this.granulator_01_grains18_active=!1,this.granulator_01_grains18_backwards=!1,this.granulator_01_grains19_sampleOffset=0,this.granulator_01_grains19_curRate=1,this.granulator_01_grains19_curStart=0,this.granulator_01_grains19_curLen=1,this.granulator_01_grains19_active=!1,this.granulator_01_grains19_backwards=!1,this.granulator_01_grains20_sampleOffset=0,this.granulator_01_grains20_curRate=1,this.granulator_01_grains20_curStart=0,this.granulator_01_grains20_curLen=1,this.granulator_01_grains20_active=!1,this.granulator_01_grains20_backwards=!1,this.granulator_01_grains21_sampleOffset=0,this.granulator_01_grains21_curRate=1,this.granulator_01_grains21_curStart=0,this.granulator_01_grains21_curLen=1,this.granulator_01_grains21_active=!1,this.granulator_01_grains21_backwards=!1,this.granulator_01_grains22_sampleOffset=0,this.granulator_01_grains22_curRate=1,this.granulator_01_grains22_curStart=0,this.granulator_01_grains22_curLen=1,this.granulator_01_grains22_active=!1,this.granulator_01_grains22_backwards=!1,this.granulator_01_grains23_sampleOffset=0,this.granulator_01_grains23_curRate=1,this.granulator_01_grains23_curStart=0,this.granulator_01_grains23_curLen=1,this.granulator_01_grains23_active=!1,this.granulator_01_grains23_backwards=!1,this.granulator_01_grains24_sampleOffset=0,this.granulator_01_grains24_curRate=1,this.granulator_01_grains24_curStart=0,this.granulator_01_grains24_curLen=1,this.granulator_01_grains24_active=!1,this.granulator_01_grains24_backwards=!1,this.granulator_01_grains25_sampleOffset=0,this.granulator_01_grains25_curRate=1,this.granulator_01_grains25_curStart=0,this.granulator_01_grains25_curLen=1,this.granulator_01_grains25_active=!1,this.granulator_01_grains25_backwards=!1,this.granulator_01_grains26_sampleOffset=0,this.granulator_01_grains26_curRate=1,this.granulator_01_grains26_curStart=0,this.granulator_01_grains26_curLen=1,this.granulator_01_grains26_active=!1,this.granulator_01_grains26_backwards=!1,this.granulator_01_grains27_sampleOffset=0,this.granulator_01_grains27_curRate=1,this.granulator_01_grains27_curStart=0,this.granulator_01_grains27_curLen=1,this.granulator_01_grains27_active=!1,this.granulator_01_grains27_backwards=!1,this.granulator_01_grains28_sampleOffset=0,this.granulator_01_grains28_curRate=1,this.granulator_01_grains28_curStart=0,this.granulator_01_grains28_curLen=1,this.granulator_01_grains28_active=!1,this.granulator_01_grains28_backwards=!1,this.granulator_01_grains29_sampleOffset=0,this.granulator_01_grains29_curRate=1,this.granulator_01_grains29_curStart=0,this.granulator_01_grains29_curLen=1,this.granulator_01_grains29_active=!1,this.granulator_01_grains29_backwards=!1,this.granulator_01_grains30_sampleOffset=0,this.granulator_01_grains30_curRate=1,this.granulator_01_grains30_curStart=0,this.granulator_01_grains30_curLen=1,this.granulator_01_grains30_active=!1,this.granulator_01_grains30_backwards=!1,this.granulator_01_grains31_sampleOffset=0,this.granulator_01_grains31_curRate=1,this.granulator_01_grains31_curStart=0,this.granulator_01_grains31_curLen=1,this.granulator_01_grains31_active=!1,this.granulator_01_grains31_backwards=!1,this.granulator_01_grains32_sampleOffset=0,this.granulator_01_grains32_curRate=1,this.granulator_01_grains32_curStart=0,this.granulator_01_grains32_curLen=1,this.granulator_01_grains32_active=!1,this.granulator_01_grains32_backwards=!1,this.noise_tilde_01_last=0,this.noise_tilde_01_recip=0,this.noise_tilde_02_last=0,this.noise_tilde_02_recip=0,this.notein_01_status=0,this.notein_01_byte1=-1,this.notein_01_inchan=0,this.numToListConverted1=[0],this.ip_01_lastIndex=0,this.ip_01_lastValue=0,this.ip_01_resetCount=0,this.ip_01_sigbuf=0,this.ip_01_setupDone=!1,this.mtof_01_innerMtoF_lastInValue=0,this.mtof_01_innerMtoF_lastOutValue=0,this.mtof_01_innerMtoF_lastTuning=0,this.mtof_01_innerMtoF_buffer=0,this.mtof_01_innerScala_internal=!0,this.mtof_01_innerScala_KBM_MAP_OFFSET=7,this.mtof_01_innerScala_lastValid=!1,this.mtof_01_innerScala_lastNote=0,this.mtof_01_innerScala_lastFreq=0,this.mtof_01_innerScala_sclEntryCount=0,this.mtof_01_innerScala_sclOctaveMul=1,this.mtof_01_innerScala_sclExpMul=[0],this.mtof_01_innerScala_kbmValid=[0,0,0,60,69,440],this.mtof_01_innerScala_kbmMid=60,this.mtof_01_innerScala_kbmRefNum=69,this.mtof_01_innerScala_kbmRefFreq=440,this.mtof_01_innerScala_kbmSize=0,this.mtof_01_innerScala_kbmMin=0,this.mtof_01_innerScala_kbmMax=0,this.mtof_01_innerScala_kbmOctaveDegree=12,this.mtof_01_innerScala_kbmMapSize=0,this.mtof_01_innerScala_refFreq=261.63,this.ip_02_lastIndex=0,this.ip_02_lastValue=0,this.ip_02_resetCount=0,this.ip_02_sigbuf=0,this.ip_02_setupDone=!1,this.adsr_01_phase=3,this.adsr_01_mspersamp=0,this.adsr_01_time=0,this.adsr_01_lasttrigger=0,this.adsr_01_amplitude=0,this.adsr_01_triggerval=0,this.adsr_01_outval=0,this.adsr_01_startingpoint=0,this.adsr_01_setupDone=!1,this.numToListConverted0=[0],this.stackprotect_count=0,this.granulator_01_bufferobj=0,this._voiceIndex=0,this._noteNumber=0,this.isMuted=1,this.parameterOffset=0}samplerate(){return this.sr}safemod(t,a){if(0!=a){if(a<0&&(a=-a),t>=a)if(t>=2*a){var r=t/a;t=(r-=rnbo_trunc(r))*a}else t-=a;else if(t<=-a)if(t<=2*-a){r=t/a;t=(r-=rnbo_trunc(r))*a}else t+=a}else t=0;return t}bufferbindchannel(t,a,r){return 0==r||4==r?a-1-t%a:3==r?0==a?0:t%a:t>a-1?a-1:t<0?0:t}wrap(t,a,r){var _,s;if(a==r)return a;a>r?(s=a,_=r):(_=a,s=r);var i=s-_;if(t>=_&&t<s)return t;if(i<=1e-9)return _;var e=rnbo_trunc((t-_)/i),n=t-i*(e-=t<_?1:0);return n>=s?n-i:n}bufferbindindex(t,a,r,_){if(0==_||4==_){if(t>=a&&t<r)return t;var s=r-a,i=t-a,e=i<0?2*s-1+this.safemod(i+1,2*s):this.safemod(i,2*s);return a+e>=s?2*s-e-1:e}return 3==_?this.wrap(t,a,r):t>r-1?r-1:t<a?a:t}linearinterp(t,a,r){return a+(r-a)*t}cubicinterp(t,a,r,_,s){var i=t*t,e=s-_-a+r;return e*t*i+(a-r-e)*i+(_-a)*t+r}splineinterp(t,a,r,_,s){var i=t*t;return(-.5*a+1.5*r-1.5*_+.5*s)*t*i+(a-2.5*r+2*_-.5*s)*i+(-.5*a+.5*_)*t+r}cosT8(t){var a,r=.00019841269841;return t<.7853981633974483&&t>-.7853981633974483?1-24801587302e-15*(a=t*t)*(20160-a*(1680-a*(56-a))):t>0?-(t-=1.5707963267948966)*(1-r*(a=t*t)*(840-a*(42-a))):(t+=1.5707963267948966)*(1-r*(a=t*t)*(840-a*(42-a)))}cosineinterp(t,a,r){var _=(1-this.cosT8(3.141592653589793*t))/2;return a*(1-_)+r*_}bufferreadsample(t,a,r,_,s,i){if(a<0)return 0;var e=rnbo_trunc(a);if(0==i){var n=a-e;return(h=e+1)>(u=s-1)&&(h=_),this.linearinterp(n,t.getSample(r,e),t.getSample(r,h))}if(1==i){n=a-e;return(h=e+1)>(u=s-1)&&(h=_),(l=h+1)>u&&(l=_),(o=l+1)>u&&(o=_),this.cubicinterp(n,t.getSample(r,e),t.getSample(r,h),t.getSample(r,l),t.getSample(r,o))}if(2==i){var l,o;n=a-e;return(h=e+1)>(u=s-1)&&(h=_),(l=h+1)>u&&(l=_),(o=l+1)>u&&(o=_),this.splineinterp(n,t.getSample(r,e),t.getSample(r,h),t.getSample(r,l),t.getSample(r,o))}if(3==i){var u,h;n=a-e;return(h=e+1)>(u=s-1)&&(h=_),this.cosineinterp(n,t.getSample(r,e),t.getSample(r,h))}return t.getSample(r,e)}hann(t){return t=t>1?1:t<0?0:t,.5*(1-rnbo_cos(6.283185307179586*t))}voice(){return this._voiceIndex}random(t,a){let r=a-t;return rand01()*r+t}eventinlet_01_out1_bang_bang(){this.floatnum_01_value_bang()}eventinlet_01_out1_list_set(t){{let a=convertListToNumber(t);this.floatnum_01_value_set(a)}}loadbang_01_startupbang_bang(){this.loadbang_01_output_bang()}eventinlet_03_out1_bang_bang(){this.ip_02_value_bang()}eventinlet_03_out1_number_set(t){this.ip_02_value_set(t)}eventinlet_03_out1_list_set(t){{let a=convertListToNumber(t);this.ip_02_value_set(a)}}eventinlet_04_out1_bang_bang(){this.print_01_input_bang_bang(),this.unpack_01_input_bang_bang()}eventinlet_04_out1_number_set(t){this.print_01_input_number_set(t),this.numToListConverted0.length=1,this.numToListConverted0[0]=t,this.unpack_01_input_list_set(this.numToListConverted0)}getParameterIndexForID(t){return RNBO_UNUSED(t),INVALID_INDEX}getNumMidiInputPorts(){return 1}processMidiEvent(t,a,r,_){this.updateTime(t),this.notein_01_midihandler(240&r[0],1+(15&r[0]),a,r,_)}getNumMidiOutputPorts(){return 0}adsr_01_mute_bang(){this.trigger_01_input_bang_bang()}process(t,a,r,_,s){this.vs=s,this.updateTime(this.getEngine().getCurrentTime());var i=_>=1&&r[0]?r[0]:this.dummyBuffer,e=_>=2&&r[1]?r[1]:this.dummyBuffer,n=a>=1&&t[0]?t[0]:this.zeroBuffer,l=a>=2&&t[1]?t[1]:this.zeroBuffer,o=a>=3&&t[2]?t[2]:this.zeroBuffer;this.getIsMuted()||(this.phasor_01_perform(this.phasor_01_freq,this.signals[0],s),this.dspexpr_01_perform(this.signals[0],this.dspexpr_01_in2,this.signals[1],s),this.noise_tilde_01_perform(this.signals[0],s),this.dspexpr_04_perform(this.signals[0],o,this.signals[2],s),this.dspexpr_03_perform(n,this.signals[2],this.signals[0],s),this.noise_tilde_02_perform(this.signals[2],s),this.dspexpr_06_perform(this.signals[2],this.signals[3],s),this.ip_01_perform(this.signals[2],s),this.ip_02_perform(this.signals[4],s),this.gen_01_perform(this.signals[2],this.signals[4],this.signals[5],s),this.granulator_01_perform(this.signals[0],l,this.signals[5],this.granulator_01_bchan,this.signals[3],this.signals[1],this.signals[4],this.signals[2],s),this.adsr_01_perform(this.adsr_01_trigger,this.adsr_01_attack,this.adsr_01_decay,this.adsr_01_sustain,this.adsr_01_release,this.signals[3],s),this.dspexpr_05_perform(this.signals[2],this.signals[3],this.signals[5],s),this.signaladder_01_perform(this.signals[5],e,e,s),this.dspexpr_02_perform(this.signals[4],this.signals[3],this.signals[5],s),this.signaladder_02_perform(this.signals[5],i,i,s),this.stackprotect_perform(s),this.audioProcessSampleCount+=this.vs)}prepareToProcess(t,a,r){if(this.maxvs<a||!this.didAllocateSignals){var _;for(_=0;_<6;_++)this.signals[_]=resizeSignal(this.signals[_],this.maxvs,a);this.phasor_01_sigbuf=resizeSignal(this.phasor_01_sigbuf,this.maxvs,a),this.ip_01_sigbuf=resizeSignal(this.ip_01_sigbuf,this.maxvs,a),this.ip_02_sigbuf=resizeSignal(this.ip_02_sigbuf,this.maxvs,a),this.zeroBuffer=resizeSignal(this.zeroBuffer,this.maxvs,a),this.dummyBuffer=resizeSignal(this.dummyBuffer,this.maxvs,a),this.didAllocateSignals=!0}var s=t!=this.sr,i=a!=this.maxvs,e=s||i||r;(s||i)&&(this.vs=a,this.maxvs=a,this.sr=t,this.invsr=1/t),this.phasor_01_dspsetup(e),this.ip_01_dspsetup(e),this.ip_02_dspsetup(e),this.adsr_01_dspsetup(e),s&&this.onSampleRateChanged(t)}msToSamps(t,a){return t*a*.001}sampsToMs(t){return t*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 3}getNumOutputChannels(){return 2}setProbingTarget(t){this.setProbingIndex(-1)}setProbingIndex(t){}getProbingChannels(t){return RNBO_UNUSED(t),0}initializeObjects(){this.granulator_01_edgedetect_init(),this.granulator_01_init(),this.noise_tilde_01_init(),this.noise_tilde_02_init(),this.ip_01_init(),this.mtof_01_innerScala_init(),this.mtof_01_init(),this.ip_02_init()}setVoiceIndex(t){this._voiceIndex=t}setNoteNumber(t){this._noteNumber=t}getIsMuted(){return this.isMuted}setIsMuted(t){this.isMuted=t}getPatcherSerial(){return 0}getState(t){}setState(){}getPreset(t){}processTempoEvent(t,a){}processTransportEvent(t,a){}processBeatTimeEvent(t,a){}onSampleRateChanged(t){this.granulator_01_onSampleRateChanged(t)}processTimeSignatureEvent(t,a,r){}setParameterValue(t,a,r){}processParameterEvent(t,a,r){this.setParameterValue(t,a,r)}processNormalizedParameterEvent(t,a,r){this.setParameterValueNormalized(t,a,r)}getParameterValue(t){return 0}getPolyParameterValue(t,a){return t[0].getParameterValue(a)}setPolyParameterValue(t,a,r,_){for(var s=0;s<8;s++)t[s].setParameterValue(a,r,_)}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 0}getParameterName(t){return\"bogus\"}getParameterId(t){return\"bogus\"}getParameterInfo(t,a){}sendParameter(t){1==this._voiceIndex&&this.getPatcher().sendParameter(t+this.parameterOffset)}sendPolyParameter(t,a){this.getPatcher().sendParameter(t+this.parameterOffset+a-1)}setParameterOffset(t){this.parameterOffset=t}applyStepsToNormalizedParameterValue(t,a){if(1==a)t>0&&(t=1);else{let r=1/(a-1);t=1*rnbo_fround(t/r*1/1)*r}return t}convertToNormalizedParameterValue(t,a){return a}convertFromNormalizedParameterValue(t,a){return a=a<0?0:a>1?1:a}constrainParameterValue(t,a){return a}scheduleParamInit(t,a){this.getPatcher().scheduleParamInit(t+this.parameterOffset,a)}processClockEvent(t,a,r,_){switch(RNBO_UNUSED(_),RNBO_UNUSED(r),this.updateTime(t),a){case-871642103:this.loadbang_01_startupbang_bang();break;case-1468824490:this.adsr_01_mute_bang()}}processOutletAtCurrentTime(t,a,r){}processOutletEvent(t,a,r,_){this.updateTime(_),this.processOutletAtCurrentTime(t,a,r)}sendOutlet(t,a){this.getEngine().sendOutlet(this,t,a)}processNumMessage(t,a,r,_){}processListMessage(t,a,r,_){}processBangMessage(t,a,r){switch(this.updateTime(r),t){case TAG(\"startupbang\"):TAG(\"p_obj-13/loadbang_obj-18\")==a&&this.loadbang_01_startupbang_bang()}}resolveTag(t){switch(t){case TAG(\"startupbang\"):return\"startupbang\";case TAG(\"p_obj-13/loadbang_obj-18\"):return\"p_obj-13/loadbang_obj-18\"}return null}startup(){this.updateTime(this.getEngine().getCurrentTime()),this.getEngine().scheduleClockEvent(this,-871642103,0+this._currentTime)}getDataRef(t){return null}getNumDataRefs(){return 0}fillDataRef(t,a){}zeroDataRef(t){t.setZero()}processDataViewUpdate(t,a){this.updateTime(a),-2!=t&&1!=t&&3!=t&&2!=t||(this.granulator_01_buffer=new Float32MultiBuffer(this.granulator_01_bufferobj),this.granulator_01_bufferUpdated()),0==t&&(this.mtof_01_innerMtoF_buffer=new Float64Buffer(this.getPatcher().RNBODefaultMtofLookupTable256))}allocateDataRefs(){this.mtof_01_innerMtoF_buffer.requestSize(65536,1),this.mtof_01_innerMtoF_buffer.setSampleRate(this.sr),this.mtof_01_innerMtoF_buffer=this.mtof_01_innerMtoF_buffer.allocateIfNeeded()}initialize(){this.granulator_01_bufferobj=initMultiRef(this.getPatcher().jongly,this.getPatcher().harp_riff,this.getPatcher().usr_buff),this.assign_defaults(),this.setState(),this.granulator_01_bufferobj.setIndex(-2),this.granulator_01_buffer=new Float32MultiBuffer(this.granulator_01_bufferobj),this.mtof_01_innerMtoF_buffer=new Float64Buffer(this.getPatcher().RNBODefaultMtofLookupTable256)}floatnum_01_value_set(t){this.floatnum_01_value=t,this.floatnum_01_stored=t}eventinlet_01_out1_number_set(t){this.floatnum_01_value_set(t)}print_01_input_list_set(t){console.log(t)}adsr_01_release_set(t){this.adsr_01_release=t}unpack_01_out4_set(t){this.unpack_01_out4=t,this.adsr_01_release_set(t)}adsr_01_sustain_set(t){this.adsr_01_sustain=t}unpack_01_out3_set(t){this.unpack_01_out3=t,this.adsr_01_sustain_set(t)}adsr_01_decay_set(t){this.adsr_01_decay=t}unpack_01_out2_set(t){this.unpack_01_out2=t,this.adsr_01_decay_set(t)}adsr_01_attack_set(t){this.adsr_01_attack=t}unpack_01_out1_set(t){this.unpack_01_out1=t,this.adsr_01_attack_set(t)}unpack_01_input_list_set(t){t.length>3&&this.unpack_01_out4_set(t[3]),t.length>2&&this.unpack_01_out3_set(t[2]),t.length>1&&this.unpack_01_out2_set(t[1]),t.length>0&&this.unpack_01_out1_set(t[0])}eventinlet_04_out1_list_set(t){this.print_01_input_list_set(t),this.unpack_01_input_list_set(t)}eventinlet_02_out1_bang_bang(){}granulator_01_buffer_set(t){updateMultiRef(this,this.granulator_01_buffer,t)}eventinlet_02_out1_number_set(t){this.granulator_01_buffer_set(t)}eventinlet_02_out1_list_set(t){{let a=convertListToNumber(t);this.granulator_01_buffer_set(a)}}floatnum_01_value_bang(){var t=this.floatnum_01_value;this.floatnum_01_stored=t}phasor_01_freq_set(t){this.phasor_01_freq=t}trigger_01_out2_set(t){this.phasor_01_freq_set(t)}phasor_01_phase_set(t){t>=0&&this.phasor_01_sigbuf&&(this.phasor_01_sigbuf[this.sampleOffsetIntoNextAudioBuffer]=t)}trigger_01_out1_set(t){this.phasor_01_phase_set(t)}trigger_01_input_bang_bang(){this.trigger_01_out2_set(0),this.trigger_01_out1_set(.5)}loadbang_01_output_bang(){this.trigger_01_input_bang_bang()}ip_02_value_bang(){var t=this.ip_02_value;this.ip_02_fillSigBuf(),this.ip_02_lastValue=t}ip_02_value_set(t){this.ip_02_value=t,this.ip_02_fillSigBuf(),this.ip_02_lastValue=t}print_01_input_bang_bang(){console.log(\"bang\")}unpack_01_out4_bang(){var t=this.unpack_01_out4;this.adsr_01_release_set(t)}unpack_01_out3_bang(){var t=this.unpack_01_out3;this.adsr_01_sustain_set(t)}unpack_01_out2_bang(){var t=this.unpack_01_out2;this.adsr_01_decay_set(t)}unpack_01_out1_bang(){var t=this.unpack_01_out1;this.adsr_01_attack_set(t)}unpack_01_input_bang_bang(){this.unpack_01_out4_bang(),this.unpack_01_out3_bang(),this.unpack_01_out2_bang(),this.unpack_01_out1_bang()}print_01_input_number_set(t){console.log(t)}notein_01_outchannel_set(t){}notein_01_releasevelocity_set(t){}floatnum_01_out_set(t){this.phasor_01_freq_set(t)}floatnum_01_input_bang_bang(){this.floatnum_01_out_set(this.floatnum_01_stored)}select_01_match1_bang(){this.floatnum_01_input_bang_bang()}select_01_nomatch_number_set(t){}select_01_input_number_set(t){t==this.select_01_test1?this.select_01_match1_bang():this.select_01_nomatch_number_set(t)}expr_02_out1_set(t){this.expr_02_out1=t,this.select_01_input_number_set(this.expr_02_out1)}expr_02_in1_set(t){this.expr_02_in1=t,this.expr_02_out1_set(this.expr_02_in1>this.expr_02_in2)}trigger_02_out2_set(t){this.expr_02_in1_set(t)}adsr_01_trigger_set(t){this.adsr_01_trigger=t}expr_03_out1_set(t){this.expr_03_out1=t,this.adsr_01_trigger_set(this.expr_03_out1)}expr_03_in1_set(t){this.expr_03_in1=t,this.expr_03_out1_set(0==this.expr_03_in2||0==this.expr_03_in2?0:this.expr_03_in1/this.expr_03_in2)}trigger_02_out1_set(t){this.expr_03_in1_set(t)}trigger_02_input_number_set(t){this.trigger_02_out2_set(rnbo_trunc(t)),this.trigger_02_out1_set(rnbo_trunc(t))}notein_01_velocity_set(t){this.trigger_02_input_number_set(t)}ip_01_value_set(t){this.ip_01_value=t,this.ip_01_fillSigBuf(),this.ip_01_lastValue=t}expr_01_out1_set(t){this.expr_01_out1=t,this.ip_01_value_set(this.expr_01_out1)}expr_01_in1_set(t){this.expr_01_in1=t,this.expr_01_out1_set(0==this.expr_01_in2||0==this.expr_01_in2?0:this.expr_01_in1/this.expr_01_in2)}mtof_01_out_set(t){{let a=convertListToNumber(t);this.expr_01_in1_set(a)}}mtof_01_midivalue_set(t){this.mtof_01_midivalue=jsCreateListCopy(t);let a=list();for(var r=0;r<this.mtof_01_midivalue.length;r++)a.push(this.mtof_01_innerMtoF_next(this.mtof_01_midivalue[r],this.mtof_01_base));this.mtof_01_out_set(a)}notein_01_notenumber_set(t){this.numToListConverted1.length=1,this.numToListConverted1[0]=t,this.mtof_01_midivalue_set(this.numToListConverted1)}notein_01_midihandler(t,a,r,_,s){RNBO_UNUSED(s),RNBO_UNUSED(r),a!=this.notein_01_channel&&0!=this.notein_01_channel||144!=t&&128!=t||(this.notein_01_outchannel_set(a),128==t?(this.notein_01_releasevelocity_set(_[2]),this.notein_01_velocity_set(0)):(this.notein_01_releasevelocity_set(0),this.notein_01_velocity_set(_[2])),this.notein_01_notenumber_set(_[1]))}midiouthelper_midiout_set(t){}phasor_01_perform(t,a,r){for(var _=this.phasor_01_sigbuf,s=0;s<r;s++)a[s]=this.phasor_01_ph_next(t,_[s]),_[s]=-1}dspexpr_01_perform(t,a,r,_){var s;for(RNBO_UNUSED(a),s=0;s<_;s++)r[s]=t[s]>.5}noise_tilde_01_perform(t,a){var r,_=this.noise_tilde_01_recip,s=this.noise_tilde_01_last;for(r=0;r<a;r++){var i=8388607&(s=rnbo_imul(1664525,s)+1013904223|0);t[r]=i*_-1}this.noise_tilde_01_last=s}dspexpr_04_perform(t,a,r,_){var s;for(s=0;s<_;s++)r[s]=t[s]*a[s]}dspexpr_03_perform(t,a,r,_){var s;for(s=0;s<_;s++)r[s]=t[s]+a[s]}noise_tilde_02_perform(t,a){var r,_=this.noise_tilde_02_recip,s=this.noise_tilde_02_last;for(r=0;r<a;r++){var i=8388607&(s=rnbo_imul(1664525,s)+1013904223|0);t[r]=i*_-1}this.noise_tilde_02_last=s}dspexpr_06_perform(t,a,r){var _;for(_=0;_<r;_++)a[_]=rnbo_abs(t[_])}ip_01_perform(t,a){for(var r=this.ip_01_sigbuf,_=this.ip_01_lastValue,s=this.ip_01_lastIndex,i=0;i<a;i++)t[i]=i>=s?_:r[i];s=0,this.ip_01_lastIndex=s}ip_02_perform(t,a){for(var r=this.ip_02_sigbuf,_=this.ip_02_lastValue,s=this.ip_02_lastIndex,i=0;i<a;i++)t[i]=i>=s?_:r[i];s=0,this.ip_02_lastIndex=s}gen_01_perform(t,a,r,_){var s;for(s=0;s<_;s++){let _=a[s]>0?-1:1,i=t[s]*_;r[s]=i}}granulator_01_perform(t,a,r,_,s,i,e,n,l){RNBO_UNUSED(_);var o,u=this.granulator_01_grainPan,h=this.granulator_01_limitLast,g=this.granulator_01_limit;for(o=0;o<l;o++){var c=this.granulator_01_edgedetect_next(i[o])>0,p=g>32?32:g<0?0:g;h=p,e[o]=0,n[o]=0;for(var m=t[o],f=r[o],d=a[o],b=0;b<32;b++){var v=0;if(c&&this.granulator_01_grains_inactive(b)&&b<p&&(c=!1,v=1,u[b][0]=this.granulator_01_panfunc_next(s[o],0),u[b][1]=this.granulator_01_panfunc_next(s[o],1)),0!=v||!this.granulator_01_grains_inactive(b)){var S=this.granulator_01_grains_next(b,this.granulator_01_buffer,v,m,d,f,0),O=S[0]*this.hann(S[1]);e[o]+=O*u[b][0],n[o]+=O*u[b][1]}}}this.granulator_01_limitLast=h}adsr_01_perform(t,a,r,_,s,i,e){for(var n=this.adsr_01_time,l=this.adsr_01_amplitude,o=this.adsr_01_outval,u=this.adsr_01_startingpoint,h=this.adsr_01_phase,g=this.adsr_01_triggerval,c=this.adsr_01_lasttrigger,p=this.adsr_01_mspersamp,m=!1,f=0;f<e;f++){let e=a>p?a:p,d=r>p?r:p,b=s>p?s:p;c=g,g=t,0==c&&0!=g?(u=0!=h?o:0,l=g,h=1,n=0,m=!1):0!=c&&0==g&&4!=h&&0!=h&&(h=4,l=o,n=0),n+=p,0==h?o=0:1==h?n>e?(n-=e,h=2,o=l):o=(l-u)*n/e+u:2==h?n>d?(n-=d,h=3,o=l*_):o=l*_+(l-l*_)*(1-n/d):3==h?o=l*_:4==h&&(n>b?(n=0,h=0,o=0,l=0,m=!0):o=l*(1-n/b)),i[f]=o}m&&this.getEngine().scheduleClockEventWithValue(this,-1468824490,this.sampsToMs(this.vs)+this._currentTime,0),this.adsr_01_lasttrigger=c,this.adsr_01_triggerval=g,this.adsr_01_phase=h,this.adsr_01_startingpoint=u,this.adsr_01_outval=o,this.adsr_01_amplitude=l,this.adsr_01_time=n}dspexpr_05_perform(t,a,r,_){var s;for(s=0;s<_;s++)r[s]=t[s]*a[s]}signaladder_01_perform(t,a,r,_){var s;for(s=0;s<_;s++)r[s]=t[s]+a[s]}dspexpr_02_perform(t,a,r,_){var s;for(s=0;s<_;s++)r[s]=t[s]*a[s]}signaladder_02_perform(t,a,r,_){var s;for(s=0;s<_;s++)r[s]=t[s]+a[s]}stackprotect_perform(t){RNBO_UNUSED(t);this.stackprotect_count;this.stackprotect_count=0}phasor_01_ph_next(t,a){a>=0&&(this.phasor_01_ph_currentPhase=a);const r=t*this.phasor_01_ph_conv;this.phasor_01_ph_currentPhase<0&&(this.phasor_01_ph_currentPhase=1+this.phasor_01_ph_currentPhase),this.phasor_01_ph_currentPhase>1&&(this.phasor_01_ph_currentPhase=this.phasor_01_ph_currentPhase-1);var _=this.phasor_01_ph_currentPhase;return this.phasor_01_ph_currentPhase+=r,_}phasor_01_ph_reset(){this.phasor_01_ph_currentPhase=0}phasor_01_ph_dspsetup(){this.phasor_01_ph_conv=1/this.sr}phasor_01_dspsetup(t){this.phasor_01_setupDone&&!t||(this.phasor_01_conv=1/this.samplerate(),this.phasor_01_setupDone=!0,this.phasor_01_ph_dspsetup())}granulator_01_edgedetect_next(t){if(t<=0)this.granulator_01_edgedetect_active=!1;else if(!this.granulator_01_edgedetect_active)return this.granulator_01_edgedetect_active=!0,1;return 0}granulator_01_edgedetect_init(){}granulator_01_edgedetect_reset(){this.granulator_01_edgedetect_active=!1}granulator_01_panfunc_next(t,a){return t=(t*=1)>=0?this.safemod(t,2):this.safemod(2+this.safemod(t,2),2),0==a&&t>=1&&(t-=2),(t-=a)>-1&&t<1?rnbo_sqrt(1-rnbo_abs(t)):0}granulator_01_panfunc_reset(){}granulator_01_grains1_inactive(){return!this.granulator_01_grains1_active}granulator_01_grains1_reset(){this.granulator_01_grains1_active=!1}granulator_01_grains1_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains1_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains1_curRate||_<=0?(this.granulator_01_grains1_active&&(e=!0),this.granulator_01_grains1_curRate=0,this.granulator_01_grains1_active=!1):(this.granulator_01_grains1_curLen=_,this.granulator_01_grains1_active=!0,this.granulator_01_grains1_backwards=s<0,this.granulator_01_grains1_sampleOffset=0,this.granulator_01_grains1_curStart=r,this.granulator_01_grains1_backwards&&(this.granulator_01_grains1_curStart+=this.granulator_01_grains1_curLen),e=!1)),this.granulator_01_grains1_active){if(this.granulator_01_grains1_sampleOffset>=this.granulator_01_grains1_curLen)e=!0,this.granulator_01_grains1_active=!1,l=1;else{let a=this.granulator_01_grains1_curStart;this.granulator_01_grains1_backwards?a-=this.granulator_01_grains1_sampleOffset:a+=this.granulator_01_grains1_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains1_sampleOffset/this.granulator_01_grains1_curLen>1?1:this.granulator_01_grains1_sampleOffset/this.granulator_01_grains1_curLen<0?0:this.granulator_01_grains1_sampleOffset/this.granulator_01_grains1_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains1_sampleOffset+=this.granulator_01_grains1_curRate}return[n,l,e?1:0]}granulator_01_grains2_inactive(){return!this.granulator_01_grains2_active}granulator_01_grains2_reset(){this.granulator_01_grains2_active=!1}granulator_01_grains2_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains2_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains2_curRate||_<=0?(this.granulator_01_grains2_active&&(e=!0),this.granulator_01_grains2_curRate=0,this.granulator_01_grains2_active=!1):(this.granulator_01_grains2_curLen=_,this.granulator_01_grains2_active=!0,this.granulator_01_grains2_backwards=s<0,this.granulator_01_grains2_sampleOffset=0,this.granulator_01_grains2_curStart=r,this.granulator_01_grains2_backwards&&(this.granulator_01_grains2_curStart+=this.granulator_01_grains2_curLen),e=!1)),this.granulator_01_grains2_active){if(this.granulator_01_grains2_sampleOffset>=this.granulator_01_grains2_curLen)e=!0,this.granulator_01_grains2_active=!1,l=1;else{let a=this.granulator_01_grains2_curStart;this.granulator_01_grains2_backwards?a-=this.granulator_01_grains2_sampleOffset:a+=this.granulator_01_grains2_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains2_sampleOffset/this.granulator_01_grains2_curLen>1?1:this.granulator_01_grains2_sampleOffset/this.granulator_01_grains2_curLen<0?0:this.granulator_01_grains2_sampleOffset/this.granulator_01_grains2_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains2_sampleOffset+=this.granulator_01_grains2_curRate}return[n,l,e?1:0]}granulator_01_grains3_inactive(){return!this.granulator_01_grains3_active}granulator_01_grains3_reset(){this.granulator_01_grains3_active=!1}granulator_01_grains3_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains3_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains3_curRate||_<=0?(this.granulator_01_grains3_active&&(e=!0),this.granulator_01_grains3_curRate=0,this.granulator_01_grains3_active=!1):(this.granulator_01_grains3_curLen=_,this.granulator_01_grains3_active=!0,this.granulator_01_grains3_backwards=s<0,this.granulator_01_grains3_sampleOffset=0,this.granulator_01_grains3_curStart=r,this.granulator_01_grains3_backwards&&(this.granulator_01_grains3_curStart+=this.granulator_01_grains3_curLen),e=!1)),this.granulator_01_grains3_active){if(this.granulator_01_grains3_sampleOffset>=this.granulator_01_grains3_curLen)e=!0,this.granulator_01_grains3_active=!1,l=1;else{let a=this.granulator_01_grains3_curStart;this.granulator_01_grains3_backwards?a-=this.granulator_01_grains3_sampleOffset:a+=this.granulator_01_grains3_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains3_sampleOffset/this.granulator_01_grains3_curLen>1?1:this.granulator_01_grains3_sampleOffset/this.granulator_01_grains3_curLen<0?0:this.granulator_01_grains3_sampleOffset/this.granulator_01_grains3_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains3_sampleOffset+=this.granulator_01_grains3_curRate}return[n,l,e?1:0]}granulator_01_grains4_inactive(){return!this.granulator_01_grains4_active}granulator_01_grains4_reset(){this.granulator_01_grains4_active=!1}granulator_01_grains4_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains4_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains4_curRate||_<=0?(this.granulator_01_grains4_active&&(e=!0),this.granulator_01_grains4_curRate=0,this.granulator_01_grains4_active=!1):(this.granulator_01_grains4_curLen=_,this.granulator_01_grains4_active=!0,this.granulator_01_grains4_backwards=s<0,this.granulator_01_grains4_sampleOffset=0,this.granulator_01_grains4_curStart=r,this.granulator_01_grains4_backwards&&(this.granulator_01_grains4_curStart+=this.granulator_01_grains4_curLen),e=!1)),this.granulator_01_grains4_active){if(this.granulator_01_grains4_sampleOffset>=this.granulator_01_grains4_curLen)e=!0,this.granulator_01_grains4_active=!1,l=1;else{let a=this.granulator_01_grains4_curStart;this.granulator_01_grains4_backwards?a-=this.granulator_01_grains4_sampleOffset:a+=this.granulator_01_grains4_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains4_sampleOffset/this.granulator_01_grains4_curLen>1?1:this.granulator_01_grains4_sampleOffset/this.granulator_01_grains4_curLen<0?0:this.granulator_01_grains4_sampleOffset/this.granulator_01_grains4_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains4_sampleOffset+=this.granulator_01_grains4_curRate}return[n,l,e?1:0]}granulator_01_grains5_inactive(){return!this.granulator_01_grains5_active}granulator_01_grains5_reset(){this.granulator_01_grains5_active=!1}granulator_01_grains5_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains5_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains5_curRate||_<=0?(this.granulator_01_grains5_active&&(e=!0),this.granulator_01_grains5_curRate=0,this.granulator_01_grains5_active=!1):(this.granulator_01_grains5_curLen=_,this.granulator_01_grains5_active=!0,this.granulator_01_grains5_backwards=s<0,this.granulator_01_grains5_sampleOffset=0,this.granulator_01_grains5_curStart=r,this.granulator_01_grains5_backwards&&(this.granulator_01_grains5_curStart+=this.granulator_01_grains5_curLen),e=!1)),this.granulator_01_grains5_active){if(this.granulator_01_grains5_sampleOffset>=this.granulator_01_grains5_curLen)e=!0,this.granulator_01_grains5_active=!1,l=1;else{let a=this.granulator_01_grains5_curStart;this.granulator_01_grains5_backwards?a-=this.granulator_01_grains5_sampleOffset:a+=this.granulator_01_grains5_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains5_sampleOffset/this.granulator_01_grains5_curLen>1?1:this.granulator_01_grains5_sampleOffset/this.granulator_01_grains5_curLen<0?0:this.granulator_01_grains5_sampleOffset/this.granulator_01_grains5_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains5_sampleOffset+=this.granulator_01_grains5_curRate}return[n,l,e?1:0]}granulator_01_grains6_inactive(){return!this.granulator_01_grains6_active}granulator_01_grains6_reset(){this.granulator_01_grains6_active=!1}granulator_01_grains6_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains6_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains6_curRate||_<=0?(this.granulator_01_grains6_active&&(e=!0),this.granulator_01_grains6_curRate=0,this.granulator_01_grains6_active=!1):(this.granulator_01_grains6_curLen=_,this.granulator_01_grains6_active=!0,this.granulator_01_grains6_backwards=s<0,this.granulator_01_grains6_sampleOffset=0,this.granulator_01_grains6_curStart=r,this.granulator_01_grains6_backwards&&(this.granulator_01_grains6_curStart+=this.granulator_01_grains6_curLen),e=!1)),this.granulator_01_grains6_active){if(this.granulator_01_grains6_sampleOffset>=this.granulator_01_grains6_curLen)e=!0,this.granulator_01_grains6_active=!1,l=1;else{let a=this.granulator_01_grains6_curStart;this.granulator_01_grains6_backwards?a-=this.granulator_01_grains6_sampleOffset:a+=this.granulator_01_grains6_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains6_sampleOffset/this.granulator_01_grains6_curLen>1?1:this.granulator_01_grains6_sampleOffset/this.granulator_01_grains6_curLen<0?0:this.granulator_01_grains6_sampleOffset/this.granulator_01_grains6_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains6_sampleOffset+=this.granulator_01_grains6_curRate}return[n,l,e?1:0]}granulator_01_grains7_inactive(){return!this.granulator_01_grains7_active}granulator_01_grains7_reset(){this.granulator_01_grains7_active=!1}granulator_01_grains7_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains7_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains7_curRate||_<=0?(this.granulator_01_grains7_active&&(e=!0),this.granulator_01_grains7_curRate=0,this.granulator_01_grains7_active=!1):(this.granulator_01_grains7_curLen=_,this.granulator_01_grains7_active=!0,this.granulator_01_grains7_backwards=s<0,this.granulator_01_grains7_sampleOffset=0,this.granulator_01_grains7_curStart=r,this.granulator_01_grains7_backwards&&(this.granulator_01_grains7_curStart+=this.granulator_01_grains7_curLen),e=!1)),this.granulator_01_grains7_active){if(this.granulator_01_grains7_sampleOffset>=this.granulator_01_grains7_curLen)e=!0,this.granulator_01_grains7_active=!1,l=1;else{let a=this.granulator_01_grains7_curStart;this.granulator_01_grains7_backwards?a-=this.granulator_01_grains7_sampleOffset:a+=this.granulator_01_grains7_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains7_sampleOffset/this.granulator_01_grains7_curLen>1?1:this.granulator_01_grains7_sampleOffset/this.granulator_01_grains7_curLen<0?0:this.granulator_01_grains7_sampleOffset/this.granulator_01_grains7_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains7_sampleOffset+=this.granulator_01_grains7_curRate}return[n,l,e?1:0]}granulator_01_grains8_inactive(){return!this.granulator_01_grains8_active}granulator_01_grains8_reset(){this.granulator_01_grains8_active=!1}granulator_01_grains8_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains8_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains8_curRate||_<=0?(this.granulator_01_grains8_active&&(e=!0),this.granulator_01_grains8_curRate=0,this.granulator_01_grains8_active=!1):(this.granulator_01_grains8_curLen=_,this.granulator_01_grains8_active=!0,this.granulator_01_grains8_backwards=s<0,this.granulator_01_grains8_sampleOffset=0,this.granulator_01_grains8_curStart=r,this.granulator_01_grains8_backwards&&(this.granulator_01_grains8_curStart+=this.granulator_01_grains8_curLen),e=!1)),this.granulator_01_grains8_active){if(this.granulator_01_grains8_sampleOffset>=this.granulator_01_grains8_curLen)e=!0,this.granulator_01_grains8_active=!1,l=1;else{let a=this.granulator_01_grains8_curStart;this.granulator_01_grains8_backwards?a-=this.granulator_01_grains8_sampleOffset:a+=this.granulator_01_grains8_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains8_sampleOffset/this.granulator_01_grains8_curLen>1?1:this.granulator_01_grains8_sampleOffset/this.granulator_01_grains8_curLen<0?0:this.granulator_01_grains8_sampleOffset/this.granulator_01_grains8_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains8_sampleOffset+=this.granulator_01_grains8_curRate}return[n,l,e?1:0]}granulator_01_grains9_inactive(){return!this.granulator_01_grains9_active}granulator_01_grains9_reset(){this.granulator_01_grains9_active=!1}granulator_01_grains9_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains9_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains9_curRate||_<=0?(this.granulator_01_grains9_active&&(e=!0),this.granulator_01_grains9_curRate=0,this.granulator_01_grains9_active=!1):(this.granulator_01_grains9_curLen=_,this.granulator_01_grains9_active=!0,this.granulator_01_grains9_backwards=s<0,this.granulator_01_grains9_sampleOffset=0,this.granulator_01_grains9_curStart=r,this.granulator_01_grains9_backwards&&(this.granulator_01_grains9_curStart+=this.granulator_01_grains9_curLen),e=!1)),this.granulator_01_grains9_active){if(this.granulator_01_grains9_sampleOffset>=this.granulator_01_grains9_curLen)e=!0,this.granulator_01_grains9_active=!1,l=1;else{let a=this.granulator_01_grains9_curStart;this.granulator_01_grains9_backwards?a-=this.granulator_01_grains9_sampleOffset:a+=this.granulator_01_grains9_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains9_sampleOffset/this.granulator_01_grains9_curLen>1?1:this.granulator_01_grains9_sampleOffset/this.granulator_01_grains9_curLen<0?0:this.granulator_01_grains9_sampleOffset/this.granulator_01_grains9_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains9_sampleOffset+=this.granulator_01_grains9_curRate}return[n,l,e?1:0]}granulator_01_grains10_inactive(){return!this.granulator_01_grains10_active}granulator_01_grains10_reset(){this.granulator_01_grains10_active=!1}granulator_01_grains10_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains10_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains10_curRate||_<=0?(this.granulator_01_grains10_active&&(e=!0),this.granulator_01_grains10_curRate=0,this.granulator_01_grains10_active=!1):(this.granulator_01_grains10_curLen=_,this.granulator_01_grains10_active=!0,this.granulator_01_grains10_backwards=s<0,this.granulator_01_grains10_sampleOffset=0,this.granulator_01_grains10_curStart=r,this.granulator_01_grains10_backwards&&(this.granulator_01_grains10_curStart+=this.granulator_01_grains10_curLen),e=!1)),this.granulator_01_grains10_active){if(this.granulator_01_grains10_sampleOffset>=this.granulator_01_grains10_curLen)e=!0,this.granulator_01_grains10_active=!1,l=1;else{let a=this.granulator_01_grains10_curStart;this.granulator_01_grains10_backwards?a-=this.granulator_01_grains10_sampleOffset:a+=this.granulator_01_grains10_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains10_sampleOffset/this.granulator_01_grains10_curLen>1?1:this.granulator_01_grains10_sampleOffset/this.granulator_01_grains10_curLen<0?0:this.granulator_01_grains10_sampleOffset/this.granulator_01_grains10_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains10_sampleOffset+=this.granulator_01_grains10_curRate}return[n,l,e?1:0]}granulator_01_grains11_inactive(){return!this.granulator_01_grains11_active}granulator_01_grains11_reset(){this.granulator_01_grains11_active=!1}granulator_01_grains11_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains11_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains11_curRate||_<=0?(this.granulator_01_grains11_active&&(e=!0),this.granulator_01_grains11_curRate=0,this.granulator_01_grains11_active=!1):(this.granulator_01_grains11_curLen=_,this.granulator_01_grains11_active=!0,this.granulator_01_grains11_backwards=s<0,this.granulator_01_grains11_sampleOffset=0,this.granulator_01_grains11_curStart=r,this.granulator_01_grains11_backwards&&(this.granulator_01_grains11_curStart+=this.granulator_01_grains11_curLen),e=!1)),this.granulator_01_grains11_active){if(this.granulator_01_grains11_sampleOffset>=this.granulator_01_grains11_curLen)e=!0,this.granulator_01_grains11_active=!1,l=1;else{let a=this.granulator_01_grains11_curStart;this.granulator_01_grains11_backwards?a-=this.granulator_01_grains11_sampleOffset:a+=this.granulator_01_grains11_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains11_sampleOffset/this.granulator_01_grains11_curLen>1?1:this.granulator_01_grains11_sampleOffset/this.granulator_01_grains11_curLen<0?0:this.granulator_01_grains11_sampleOffset/this.granulator_01_grains11_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains11_sampleOffset+=this.granulator_01_grains11_curRate}return[n,l,e?1:0]}granulator_01_grains12_inactive(){return!this.granulator_01_grains12_active}granulator_01_grains12_reset(){this.granulator_01_grains12_active=!1}granulator_01_grains12_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains12_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains12_curRate||_<=0?(this.granulator_01_grains12_active&&(e=!0),this.granulator_01_grains12_curRate=0,this.granulator_01_grains12_active=!1):(this.granulator_01_grains12_curLen=_,this.granulator_01_grains12_active=!0,this.granulator_01_grains12_backwards=s<0,this.granulator_01_grains12_sampleOffset=0,this.granulator_01_grains12_curStart=r,this.granulator_01_grains12_backwards&&(this.granulator_01_grains12_curStart+=this.granulator_01_grains12_curLen),e=!1)),this.granulator_01_grains12_active){if(this.granulator_01_grains12_sampleOffset>=this.granulator_01_grains12_curLen)e=!0,this.granulator_01_grains12_active=!1,l=1;else{let a=this.granulator_01_grains12_curStart;this.granulator_01_grains12_backwards?a-=this.granulator_01_grains12_sampleOffset:a+=this.granulator_01_grains12_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains12_sampleOffset/this.granulator_01_grains12_curLen>1?1:this.granulator_01_grains12_sampleOffset/this.granulator_01_grains12_curLen<0?0:this.granulator_01_grains12_sampleOffset/this.granulator_01_grains12_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains12_sampleOffset+=this.granulator_01_grains12_curRate}return[n,l,e?1:0]}granulator_01_grains13_inactive(){return!this.granulator_01_grains13_active}granulator_01_grains13_reset(){this.granulator_01_grains13_active=!1}granulator_01_grains13_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains13_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains13_curRate||_<=0?(this.granulator_01_grains13_active&&(e=!0),this.granulator_01_grains13_curRate=0,this.granulator_01_grains13_active=!1):(this.granulator_01_grains13_curLen=_,this.granulator_01_grains13_active=!0,this.granulator_01_grains13_backwards=s<0,this.granulator_01_grains13_sampleOffset=0,this.granulator_01_grains13_curStart=r,this.granulator_01_grains13_backwards&&(this.granulator_01_grains13_curStart+=this.granulator_01_grains13_curLen),e=!1)),this.granulator_01_grains13_active){if(this.granulator_01_grains13_sampleOffset>=this.granulator_01_grains13_curLen)e=!0,this.granulator_01_grains13_active=!1,l=1;else{let a=this.granulator_01_grains13_curStart;this.granulator_01_grains13_backwards?a-=this.granulator_01_grains13_sampleOffset:a+=this.granulator_01_grains13_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains13_sampleOffset/this.granulator_01_grains13_curLen>1?1:this.granulator_01_grains13_sampleOffset/this.granulator_01_grains13_curLen<0?0:this.granulator_01_grains13_sampleOffset/this.granulator_01_grains13_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains13_sampleOffset+=this.granulator_01_grains13_curRate}return[n,l,e?1:0]}granulator_01_grains14_inactive(){return!this.granulator_01_grains14_active}granulator_01_grains14_reset(){this.granulator_01_grains14_active=!1}granulator_01_grains14_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains14_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains14_curRate||_<=0?(this.granulator_01_grains14_active&&(e=!0),this.granulator_01_grains14_curRate=0,this.granulator_01_grains14_active=!1):(this.granulator_01_grains14_curLen=_,this.granulator_01_grains14_active=!0,this.granulator_01_grains14_backwards=s<0,this.granulator_01_grains14_sampleOffset=0,this.granulator_01_grains14_curStart=r,this.granulator_01_grains14_backwards&&(this.granulator_01_grains14_curStart+=this.granulator_01_grains14_curLen),e=!1)),this.granulator_01_grains14_active){if(this.granulator_01_grains14_sampleOffset>=this.granulator_01_grains14_curLen)e=!0,this.granulator_01_grains14_active=!1,l=1;else{let a=this.granulator_01_grains14_curStart;this.granulator_01_grains14_backwards?a-=this.granulator_01_grains14_sampleOffset:a+=this.granulator_01_grains14_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains14_sampleOffset/this.granulator_01_grains14_curLen>1?1:this.granulator_01_grains14_sampleOffset/this.granulator_01_grains14_curLen<0?0:this.granulator_01_grains14_sampleOffset/this.granulator_01_grains14_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains14_sampleOffset+=this.granulator_01_grains14_curRate}return[n,l,e?1:0]}granulator_01_grains15_inactive(){return!this.granulator_01_grains15_active}granulator_01_grains15_reset(){this.granulator_01_grains15_active=!1}granulator_01_grains15_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains15_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains15_curRate||_<=0?(this.granulator_01_grains15_active&&(e=!0),this.granulator_01_grains15_curRate=0,this.granulator_01_grains15_active=!1):(this.granulator_01_grains15_curLen=_,this.granulator_01_grains15_active=!0,this.granulator_01_grains15_backwards=s<0,this.granulator_01_grains15_sampleOffset=0,this.granulator_01_grains15_curStart=r,this.granulator_01_grains15_backwards&&(this.granulator_01_grains15_curStart+=this.granulator_01_grains15_curLen),e=!1)),this.granulator_01_grains15_active){if(this.granulator_01_grains15_sampleOffset>=this.granulator_01_grains15_curLen)e=!0,this.granulator_01_grains15_active=!1,l=1;else{let a=this.granulator_01_grains15_curStart;this.granulator_01_grains15_backwards?a-=this.granulator_01_grains15_sampleOffset:a+=this.granulator_01_grains15_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains15_sampleOffset/this.granulator_01_grains15_curLen>1?1:this.granulator_01_grains15_sampleOffset/this.granulator_01_grains15_curLen<0?0:this.granulator_01_grains15_sampleOffset/this.granulator_01_grains15_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains15_sampleOffset+=this.granulator_01_grains15_curRate}return[n,l,e?1:0]}granulator_01_grains16_inactive(){return!this.granulator_01_grains16_active}granulator_01_grains16_reset(){this.granulator_01_grains16_active=!1}granulator_01_grains16_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains16_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains16_curRate||_<=0?(this.granulator_01_grains16_active&&(e=!0),this.granulator_01_grains16_curRate=0,this.granulator_01_grains16_active=!1):(this.granulator_01_grains16_curLen=_,this.granulator_01_grains16_active=!0,this.granulator_01_grains16_backwards=s<0,this.granulator_01_grains16_sampleOffset=0,this.granulator_01_grains16_curStart=r,this.granulator_01_grains16_backwards&&(this.granulator_01_grains16_curStart+=this.granulator_01_grains16_curLen),e=!1)),this.granulator_01_grains16_active){if(this.granulator_01_grains16_sampleOffset>=this.granulator_01_grains16_curLen)e=!0,this.granulator_01_grains16_active=!1,l=1;else{let a=this.granulator_01_grains16_curStart;this.granulator_01_grains16_backwards?a-=this.granulator_01_grains16_sampleOffset:a+=this.granulator_01_grains16_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains16_sampleOffset/this.granulator_01_grains16_curLen>1?1:this.granulator_01_grains16_sampleOffset/this.granulator_01_grains16_curLen<0?0:this.granulator_01_grains16_sampleOffset/this.granulator_01_grains16_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains16_sampleOffset+=this.granulator_01_grains16_curRate}return[n,l,e?1:0]}granulator_01_grains17_inactive(){return!this.granulator_01_grains17_active}granulator_01_grains17_reset(){this.granulator_01_grains17_active=!1}granulator_01_grains17_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains17_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains17_curRate||_<=0?(this.granulator_01_grains17_active&&(e=!0),this.granulator_01_grains17_curRate=0,this.granulator_01_grains17_active=!1):(this.granulator_01_grains17_curLen=_,this.granulator_01_grains17_active=!0,this.granulator_01_grains17_backwards=s<0,this.granulator_01_grains17_sampleOffset=0,this.granulator_01_grains17_curStart=r,this.granulator_01_grains17_backwards&&(this.granulator_01_grains17_curStart+=this.granulator_01_grains17_curLen),e=!1)),this.granulator_01_grains17_active){if(this.granulator_01_grains17_sampleOffset>=this.granulator_01_grains17_curLen)e=!0,this.granulator_01_grains17_active=!1,l=1;else{let a=this.granulator_01_grains17_curStart;this.granulator_01_grains17_backwards?a-=this.granulator_01_grains17_sampleOffset:a+=this.granulator_01_grains17_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains17_sampleOffset/this.granulator_01_grains17_curLen>1?1:this.granulator_01_grains17_sampleOffset/this.granulator_01_grains17_curLen<0?0:this.granulator_01_grains17_sampleOffset/this.granulator_01_grains17_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains17_sampleOffset+=this.granulator_01_grains17_curRate}return[n,l,e?1:0]}granulator_01_grains18_inactive(){return!this.granulator_01_grains18_active}granulator_01_grains18_reset(){this.granulator_01_grains18_active=!1}granulator_01_grains18_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains18_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains18_curRate||_<=0?(this.granulator_01_grains18_active&&(e=!0),this.granulator_01_grains18_curRate=0,this.granulator_01_grains18_active=!1):(this.granulator_01_grains18_curLen=_,this.granulator_01_grains18_active=!0,this.granulator_01_grains18_backwards=s<0,this.granulator_01_grains18_sampleOffset=0,this.granulator_01_grains18_curStart=r,this.granulator_01_grains18_backwards&&(this.granulator_01_grains18_curStart+=this.granulator_01_grains18_curLen),e=!1)),this.granulator_01_grains18_active){if(this.granulator_01_grains18_sampleOffset>=this.granulator_01_grains18_curLen)e=!0,this.granulator_01_grains18_active=!1,l=1;else{let a=this.granulator_01_grains18_curStart;this.granulator_01_grains18_backwards?a-=this.granulator_01_grains18_sampleOffset:a+=this.granulator_01_grains18_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains18_sampleOffset/this.granulator_01_grains18_curLen>1?1:this.granulator_01_grains18_sampleOffset/this.granulator_01_grains18_curLen<0?0:this.granulator_01_grains18_sampleOffset/this.granulator_01_grains18_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains18_sampleOffset+=this.granulator_01_grains18_curRate}return[n,l,e?1:0]}granulator_01_grains19_inactive(){return!this.granulator_01_grains19_active}granulator_01_grains19_reset(){this.granulator_01_grains19_active=!1}granulator_01_grains19_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains19_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains19_curRate||_<=0?(this.granulator_01_grains19_active&&(e=!0),this.granulator_01_grains19_curRate=0,this.granulator_01_grains19_active=!1):(this.granulator_01_grains19_curLen=_,this.granulator_01_grains19_active=!0,this.granulator_01_grains19_backwards=s<0,this.granulator_01_grains19_sampleOffset=0,this.granulator_01_grains19_curStart=r,this.granulator_01_grains19_backwards&&(this.granulator_01_grains19_curStart+=this.granulator_01_grains19_curLen),e=!1)),this.granulator_01_grains19_active){if(this.granulator_01_grains19_sampleOffset>=this.granulator_01_grains19_curLen)e=!0,this.granulator_01_grains19_active=!1,l=1;else{let a=this.granulator_01_grains19_curStart;this.granulator_01_grains19_backwards?a-=this.granulator_01_grains19_sampleOffset:a+=this.granulator_01_grains19_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains19_sampleOffset/this.granulator_01_grains19_curLen>1?1:this.granulator_01_grains19_sampleOffset/this.granulator_01_grains19_curLen<0?0:this.granulator_01_grains19_sampleOffset/this.granulator_01_grains19_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains19_sampleOffset+=this.granulator_01_grains19_curRate}return[n,l,e?1:0]}granulator_01_grains20_inactive(){return!this.granulator_01_grains20_active}granulator_01_grains20_reset(){this.granulator_01_grains20_active=!1}granulator_01_grains20_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains20_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains20_curRate||_<=0?(this.granulator_01_grains20_active&&(e=!0),this.granulator_01_grains20_curRate=0,this.granulator_01_grains20_active=!1):(this.granulator_01_grains20_curLen=_,this.granulator_01_grains20_active=!0,this.granulator_01_grains20_backwards=s<0,this.granulator_01_grains20_sampleOffset=0,this.granulator_01_grains20_curStart=r,this.granulator_01_grains20_backwards&&(this.granulator_01_grains20_curStart+=this.granulator_01_grains20_curLen),e=!1)),this.granulator_01_grains20_active){if(this.granulator_01_grains20_sampleOffset>=this.granulator_01_grains20_curLen)e=!0,this.granulator_01_grains20_active=!1,l=1;else{let a=this.granulator_01_grains20_curStart;this.granulator_01_grains20_backwards?a-=this.granulator_01_grains20_sampleOffset:a+=this.granulator_01_grains20_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains20_sampleOffset/this.granulator_01_grains20_curLen>1?1:this.granulator_01_grains20_sampleOffset/this.granulator_01_grains20_curLen<0?0:this.granulator_01_grains20_sampleOffset/this.granulator_01_grains20_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains20_sampleOffset+=this.granulator_01_grains20_curRate}return[n,l,e?1:0]}granulator_01_grains21_inactive(){return!this.granulator_01_grains21_active}granulator_01_grains21_reset(){this.granulator_01_grains21_active=!1}granulator_01_grains21_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains21_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains21_curRate||_<=0?(this.granulator_01_grains21_active&&(e=!0),this.granulator_01_grains21_curRate=0,this.granulator_01_grains21_active=!1):(this.granulator_01_grains21_curLen=_,this.granulator_01_grains21_active=!0,this.granulator_01_grains21_backwards=s<0,this.granulator_01_grains21_sampleOffset=0,this.granulator_01_grains21_curStart=r,this.granulator_01_grains21_backwards&&(this.granulator_01_grains21_curStart+=this.granulator_01_grains21_curLen),e=!1)),this.granulator_01_grains21_active){if(this.granulator_01_grains21_sampleOffset>=this.granulator_01_grains21_curLen)e=!0,this.granulator_01_grains21_active=!1,l=1;else{let a=this.granulator_01_grains21_curStart;this.granulator_01_grains21_backwards?a-=this.granulator_01_grains21_sampleOffset:a+=this.granulator_01_grains21_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains21_sampleOffset/this.granulator_01_grains21_curLen>1?1:this.granulator_01_grains21_sampleOffset/this.granulator_01_grains21_curLen<0?0:this.granulator_01_grains21_sampleOffset/this.granulator_01_grains21_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains21_sampleOffset+=this.granulator_01_grains21_curRate}return[n,l,e?1:0]}granulator_01_grains22_inactive(){return!this.granulator_01_grains22_active}granulator_01_grains22_reset(){this.granulator_01_grains22_active=!1}granulator_01_grains22_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains22_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains22_curRate||_<=0?(this.granulator_01_grains22_active&&(e=!0),this.granulator_01_grains22_curRate=0,this.granulator_01_grains22_active=!1):(this.granulator_01_grains22_curLen=_,this.granulator_01_grains22_active=!0,this.granulator_01_grains22_backwards=s<0,this.granulator_01_grains22_sampleOffset=0,this.granulator_01_grains22_curStart=r,this.granulator_01_grains22_backwards&&(this.granulator_01_grains22_curStart+=this.granulator_01_grains22_curLen),e=!1)),this.granulator_01_grains22_active){if(this.granulator_01_grains22_sampleOffset>=this.granulator_01_grains22_curLen)e=!0,this.granulator_01_grains22_active=!1,l=1;else{let a=this.granulator_01_grains22_curStart;this.granulator_01_grains22_backwards?a-=this.granulator_01_grains22_sampleOffset:a+=this.granulator_01_grains22_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains22_sampleOffset/this.granulator_01_grains22_curLen>1?1:this.granulator_01_grains22_sampleOffset/this.granulator_01_grains22_curLen<0?0:this.granulator_01_grains22_sampleOffset/this.granulator_01_grains22_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains22_sampleOffset+=this.granulator_01_grains22_curRate}return[n,l,e?1:0]}granulator_01_grains23_inactive(){return!this.granulator_01_grains23_active}granulator_01_grains23_reset(){this.granulator_01_grains23_active=!1}granulator_01_grains23_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains23_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains23_curRate||_<=0?(this.granulator_01_grains23_active&&(e=!0),this.granulator_01_grains23_curRate=0,this.granulator_01_grains23_active=!1):(this.granulator_01_grains23_curLen=_,this.granulator_01_grains23_active=!0,this.granulator_01_grains23_backwards=s<0,this.granulator_01_grains23_sampleOffset=0,this.granulator_01_grains23_curStart=r,this.granulator_01_grains23_backwards&&(this.granulator_01_grains23_curStart+=this.granulator_01_grains23_curLen),e=!1)),this.granulator_01_grains23_active){if(this.granulator_01_grains23_sampleOffset>=this.granulator_01_grains23_curLen)e=!0,this.granulator_01_grains23_active=!1,l=1;else{let a=this.granulator_01_grains23_curStart;this.granulator_01_grains23_backwards?a-=this.granulator_01_grains23_sampleOffset:a+=this.granulator_01_grains23_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains23_sampleOffset/this.granulator_01_grains23_curLen>1?1:this.granulator_01_grains23_sampleOffset/this.granulator_01_grains23_curLen<0?0:this.granulator_01_grains23_sampleOffset/this.granulator_01_grains23_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains23_sampleOffset+=this.granulator_01_grains23_curRate}return[n,l,e?1:0]}granulator_01_grains24_inactive(){return!this.granulator_01_grains24_active}granulator_01_grains24_reset(){this.granulator_01_grains24_active=!1}granulator_01_grains24_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains24_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains24_curRate||_<=0?(this.granulator_01_grains24_active&&(e=!0),this.granulator_01_grains24_curRate=0,this.granulator_01_grains24_active=!1):(this.granulator_01_grains24_curLen=_,this.granulator_01_grains24_active=!0,this.granulator_01_grains24_backwards=s<0,this.granulator_01_grains24_sampleOffset=0,this.granulator_01_grains24_curStart=r,this.granulator_01_grains24_backwards&&(this.granulator_01_grains24_curStart+=this.granulator_01_grains24_curLen),e=!1)),this.granulator_01_grains24_active){if(this.granulator_01_grains24_sampleOffset>=this.granulator_01_grains24_curLen)e=!0,this.granulator_01_grains24_active=!1,l=1;else{let a=this.granulator_01_grains24_curStart;this.granulator_01_grains24_backwards?a-=this.granulator_01_grains24_sampleOffset:a+=this.granulator_01_grains24_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains24_sampleOffset/this.granulator_01_grains24_curLen>1?1:this.granulator_01_grains24_sampleOffset/this.granulator_01_grains24_curLen<0?0:this.granulator_01_grains24_sampleOffset/this.granulator_01_grains24_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains24_sampleOffset+=this.granulator_01_grains24_curRate}return[n,l,e?1:0]}granulator_01_grains25_inactive(){return!this.granulator_01_grains25_active}granulator_01_grains25_reset(){this.granulator_01_grains25_active=!1}granulator_01_grains25_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains25_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains25_curRate||_<=0?(this.granulator_01_grains25_active&&(e=!0),this.granulator_01_grains25_curRate=0,this.granulator_01_grains25_active=!1):(this.granulator_01_grains25_curLen=_,this.granulator_01_grains25_active=!0,this.granulator_01_grains25_backwards=s<0,this.granulator_01_grains25_sampleOffset=0,this.granulator_01_grains25_curStart=r,this.granulator_01_grains25_backwards&&(this.granulator_01_grains25_curStart+=this.granulator_01_grains25_curLen),e=!1)),this.granulator_01_grains25_active){if(this.granulator_01_grains25_sampleOffset>=this.granulator_01_grains25_curLen)e=!0,this.granulator_01_grains25_active=!1,l=1;else{let a=this.granulator_01_grains25_curStart;this.granulator_01_grains25_backwards?a-=this.granulator_01_grains25_sampleOffset:a+=this.granulator_01_grains25_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains25_sampleOffset/this.granulator_01_grains25_curLen>1?1:this.granulator_01_grains25_sampleOffset/this.granulator_01_grains25_curLen<0?0:this.granulator_01_grains25_sampleOffset/this.granulator_01_grains25_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains25_sampleOffset+=this.granulator_01_grains25_curRate}return[n,l,e?1:0]}granulator_01_grains26_inactive(){return!this.granulator_01_grains26_active}granulator_01_grains26_reset(){this.granulator_01_grains26_active=!1}granulator_01_grains26_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains26_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains26_curRate||_<=0?(this.granulator_01_grains26_active&&(e=!0),this.granulator_01_grains26_curRate=0,this.granulator_01_grains26_active=!1):(this.granulator_01_grains26_curLen=_,this.granulator_01_grains26_active=!0,this.granulator_01_grains26_backwards=s<0,this.granulator_01_grains26_sampleOffset=0,this.granulator_01_grains26_curStart=r,this.granulator_01_grains26_backwards&&(this.granulator_01_grains26_curStart+=this.granulator_01_grains26_curLen),e=!1)),this.granulator_01_grains26_active){if(this.granulator_01_grains26_sampleOffset>=this.granulator_01_grains26_curLen)e=!0,this.granulator_01_grains26_active=!1,l=1;else{let a=this.granulator_01_grains26_curStart;this.granulator_01_grains26_backwards?a-=this.granulator_01_grains26_sampleOffset:a+=this.granulator_01_grains26_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains26_sampleOffset/this.granulator_01_grains26_curLen>1?1:this.granulator_01_grains26_sampleOffset/this.granulator_01_grains26_curLen<0?0:this.granulator_01_grains26_sampleOffset/this.granulator_01_grains26_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains26_sampleOffset+=this.granulator_01_grains26_curRate}return[n,l,e?1:0]}granulator_01_grains27_inactive(){return!this.granulator_01_grains27_active}granulator_01_grains27_reset(){this.granulator_01_grains27_active=!1}granulator_01_grains27_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains27_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains27_curRate||_<=0?(this.granulator_01_grains27_active&&(e=!0),this.granulator_01_grains27_curRate=0,this.granulator_01_grains27_active=!1):(this.granulator_01_grains27_curLen=_,this.granulator_01_grains27_active=!0,this.granulator_01_grains27_backwards=s<0,this.granulator_01_grains27_sampleOffset=0,this.granulator_01_grains27_curStart=r,this.granulator_01_grains27_backwards&&(this.granulator_01_grains27_curStart+=this.granulator_01_grains27_curLen),e=!1)),this.granulator_01_grains27_active){if(this.granulator_01_grains27_sampleOffset>=this.granulator_01_grains27_curLen)e=!0,this.granulator_01_grains27_active=!1,l=1;else{let a=this.granulator_01_grains27_curStart;this.granulator_01_grains27_backwards?a-=this.granulator_01_grains27_sampleOffset:a+=this.granulator_01_grains27_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains27_sampleOffset/this.granulator_01_grains27_curLen>1?1:this.granulator_01_grains27_sampleOffset/this.granulator_01_grains27_curLen<0?0:this.granulator_01_grains27_sampleOffset/this.granulator_01_grains27_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains27_sampleOffset+=this.granulator_01_grains27_curRate}return[n,l,e?1:0]}granulator_01_grains28_inactive(){return!this.granulator_01_grains28_active}granulator_01_grains28_reset(){this.granulator_01_grains28_active=!1}granulator_01_grains28_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains28_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains28_curRate||_<=0?(this.granulator_01_grains28_active&&(e=!0),this.granulator_01_grains28_curRate=0,this.granulator_01_grains28_active=!1):(this.granulator_01_grains28_curLen=_,this.granulator_01_grains28_active=!0,this.granulator_01_grains28_backwards=s<0,this.granulator_01_grains28_sampleOffset=0,this.granulator_01_grains28_curStart=r,this.granulator_01_grains28_backwards&&(this.granulator_01_grains28_curStart+=this.granulator_01_grains28_curLen),e=!1)),this.granulator_01_grains28_active){if(this.granulator_01_grains28_sampleOffset>=this.granulator_01_grains28_curLen)e=!0,this.granulator_01_grains28_active=!1,l=1;else{let a=this.granulator_01_grains28_curStart;this.granulator_01_grains28_backwards?a-=this.granulator_01_grains28_sampleOffset:a+=this.granulator_01_grains28_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains28_sampleOffset/this.granulator_01_grains28_curLen>1?1:this.granulator_01_grains28_sampleOffset/this.granulator_01_grains28_curLen<0?0:this.granulator_01_grains28_sampleOffset/this.granulator_01_grains28_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains28_sampleOffset+=this.granulator_01_grains28_curRate}return[n,l,e?1:0]}granulator_01_grains29_inactive(){return!this.granulator_01_grains29_active}granulator_01_grains29_reset(){this.granulator_01_grains29_active=!1}granulator_01_grains29_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains29_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains29_curRate||_<=0?(this.granulator_01_grains29_active&&(e=!0),this.granulator_01_grains29_curRate=0,this.granulator_01_grains29_active=!1):(this.granulator_01_grains29_curLen=_,this.granulator_01_grains29_active=!0,this.granulator_01_grains29_backwards=s<0,this.granulator_01_grains29_sampleOffset=0,this.granulator_01_grains29_curStart=r,this.granulator_01_grains29_backwards&&(this.granulator_01_grains29_curStart+=this.granulator_01_grains29_curLen),e=!1)),this.granulator_01_grains29_active){if(this.granulator_01_grains29_sampleOffset>=this.granulator_01_grains29_curLen)e=!0,this.granulator_01_grains29_active=!1,l=1;else{let a=this.granulator_01_grains29_curStart;this.granulator_01_grains29_backwards?a-=this.granulator_01_grains29_sampleOffset:a+=this.granulator_01_grains29_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains29_sampleOffset/this.granulator_01_grains29_curLen>1?1:this.granulator_01_grains29_sampleOffset/this.granulator_01_grains29_curLen<0?0:this.granulator_01_grains29_sampleOffset/this.granulator_01_grains29_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains29_sampleOffset+=this.granulator_01_grains29_curRate}return[n,l,e?1:0]}granulator_01_grains30_inactive(){return!this.granulator_01_grains30_active}granulator_01_grains30_reset(){this.granulator_01_grains30_active=!1}granulator_01_grains30_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains30_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains30_curRate||_<=0?(this.granulator_01_grains30_active&&(e=!0),this.granulator_01_grains30_curRate=0,this.granulator_01_grains30_active=!1):(this.granulator_01_grains30_curLen=_,this.granulator_01_grains30_active=!0,this.granulator_01_grains30_backwards=s<0,this.granulator_01_grains30_sampleOffset=0,this.granulator_01_grains30_curStart=r,this.granulator_01_grains30_backwards&&(this.granulator_01_grains30_curStart+=this.granulator_01_grains30_curLen),e=!1)),this.granulator_01_grains30_active){if(this.granulator_01_grains30_sampleOffset>=this.granulator_01_grains30_curLen)e=!0,this.granulator_01_grains30_active=!1,l=1;else{let a=this.granulator_01_grains30_curStart;this.granulator_01_grains30_backwards?a-=this.granulator_01_grains30_sampleOffset:a+=this.granulator_01_grains30_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains30_sampleOffset/this.granulator_01_grains30_curLen>1?1:this.granulator_01_grains30_sampleOffset/this.granulator_01_grains30_curLen<0?0:this.granulator_01_grains30_sampleOffset/this.granulator_01_grains30_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains30_sampleOffset+=this.granulator_01_grains30_curRate}return[n,l,e?1:0]}granulator_01_grains31_inactive(){return!this.granulator_01_grains31_active}granulator_01_grains31_reset(){this.granulator_01_grains31_active=!1}granulator_01_grains31_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains31_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains31_curRate||_<=0?(this.granulator_01_grains31_active&&(e=!0),this.granulator_01_grains31_curRate=0,this.granulator_01_grains31_active=!1):(this.granulator_01_grains31_curLen=_,this.granulator_01_grains31_active=!0,this.granulator_01_grains31_backwards=s<0,this.granulator_01_grains31_sampleOffset=0,this.granulator_01_grains31_curStart=r,this.granulator_01_grains31_backwards&&(this.granulator_01_grains31_curStart+=this.granulator_01_grains31_curLen),e=!1)),this.granulator_01_grains31_active){if(this.granulator_01_grains31_sampleOffset>=this.granulator_01_grains31_curLen)e=!0,this.granulator_01_grains31_active=!1,l=1;else{let a=this.granulator_01_grains31_curStart;this.granulator_01_grains31_backwards?a-=this.granulator_01_grains31_sampleOffset:a+=this.granulator_01_grains31_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains31_sampleOffset/this.granulator_01_grains31_curLen>1?1:this.granulator_01_grains31_sampleOffset/this.granulator_01_grains31_curLen<0?0:this.granulator_01_grains31_sampleOffset/this.granulator_01_grains31_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains31_sampleOffset+=this.granulator_01_grains31_curRate}return[n,l,e?1:0]}granulator_01_grains32_inactive(){return!this.granulator_01_grains32_active}granulator_01_grains32_reset(){this.granulator_01_grains32_active=!1}granulator_01_grains32_next(t,a,r,_,s,i){let e=!1,n=0,l=0;const o=t.getSize();if(a>0&&(this.granulator_01_grains32_curRate=rnbo_abs(s*t.getSampleRate()/this.samplerate()),0==this.granulator_01_grains32_curRate||_<=0?(this.granulator_01_grains32_active&&(e=!0),this.granulator_01_grains32_curRate=0,this.granulator_01_grains32_active=!1):(this.granulator_01_grains32_curLen=_,this.granulator_01_grains32_active=!0,this.granulator_01_grains32_backwards=s<0,this.granulator_01_grains32_sampleOffset=0,this.granulator_01_grains32_curStart=r,this.granulator_01_grains32_backwards&&(this.granulator_01_grains32_curStart+=this.granulator_01_grains32_curLen),e=!1)),this.granulator_01_grains32_active){if(this.granulator_01_grains32_sampleOffset>=this.granulator_01_grains32_curLen)e=!0,this.granulator_01_grains32_active=!1,l=1;else{let a=this.granulator_01_grains32_curStart;this.granulator_01_grains32_backwards?a-=this.granulator_01_grains32_sampleOffset:a+=this.granulator_01_grains32_sampleOffset;const r=t.getChannels();l=this.granulator_01_grains32_sampleOffset/this.granulator_01_grains32_curLen>1?1:this.granulator_01_grains32_sampleOffset/this.granulator_01_grains32_curLen<0?0:this.granulator_01_grains32_sampleOffset/this.granulator_01_grains32_curLen,0==o?n=0:(i=this.bufferbindchannel(i,r,1),a=this.bufferbindindex(a,0,o,3),n=this.bufferreadsample(t,a,i,0,o,0))}this.granulator_01_grains32_sampleOffset+=this.granulator_01_grains32_curRate}return[n,l,e?1:0]}granulator_01_grains_inactive(t){switch(t){case 0:return this.granulator_01_grains1_inactive();case 1:return this.granulator_01_grains2_inactive();case 2:return this.granulator_01_grains3_inactive();case 3:return this.granulator_01_grains4_inactive();case 4:return this.granulator_01_grains5_inactive();case 5:return this.granulator_01_grains6_inactive();case 6:return this.granulator_01_grains7_inactive();case 7:return this.granulator_01_grains8_inactive();case 8:return this.granulator_01_grains9_inactive();case 9:return this.granulator_01_grains10_inactive();case 10:return this.granulator_01_grains11_inactive();case 11:return this.granulator_01_grains12_inactive();case 12:return this.granulator_01_grains13_inactive();case 13:return this.granulator_01_grains14_inactive();case 14:return this.granulator_01_grains15_inactive();case 15:return this.granulator_01_grains16_inactive();case 16:return this.granulator_01_grains17_inactive();case 17:return this.granulator_01_grains18_inactive();case 18:return this.granulator_01_grains19_inactive();case 19:return this.granulator_01_grains20_inactive();case 20:return this.granulator_01_grains21_inactive();case 21:return this.granulator_01_grains22_inactive();case 22:return this.granulator_01_grains23_inactive();case 23:return this.granulator_01_grains24_inactive();case 24:return this.granulator_01_grains25_inactive();case 25:return this.granulator_01_grains26_inactive();case 26:return this.granulator_01_grains27_inactive();case 27:return this.granulator_01_grains28_inactive();case 28:return this.granulator_01_grains29_inactive();case 29:return this.granulator_01_grains30_inactive();case 30:return this.granulator_01_grains31_inactive();default:return this.granulator_01_grains32_inactive()}return 0}granulator_01_grains_reset(t){switch(t){case 0:return this.granulator_01_grains1_reset();case 1:return this.granulator_01_grains2_reset();case 2:return this.granulator_01_grains3_reset();case 3:return this.granulator_01_grains4_reset();case 4:return this.granulator_01_grains5_reset();case 5:return this.granulator_01_grains6_reset();case 6:return this.granulator_01_grains7_reset();case 7:return this.granulator_01_grains8_reset();case 8:return this.granulator_01_grains9_reset();case 9:return this.granulator_01_grains10_reset();case 10:return this.granulator_01_grains11_reset();case 11:return this.granulator_01_grains12_reset();case 12:return this.granulator_01_grains13_reset();case 13:return this.granulator_01_grains14_reset();case 14:return this.granulator_01_grains15_reset();case 15:return this.granulator_01_grains16_reset();case 16:return this.granulator_01_grains17_reset();case 17:return this.granulator_01_grains18_reset();case 18:return this.granulator_01_grains19_reset();case 19:return this.granulator_01_grains20_reset();case 20:return this.granulator_01_grains21_reset();case 21:return this.granulator_01_grains22_reset();case 22:return this.granulator_01_grains23_reset();case 23:return this.granulator_01_grains24_reset();case 24:return this.granulator_01_grains25_reset();case 25:return this.granulator_01_grains26_reset();case 26:return this.granulator_01_grains27_reset();case 27:return this.granulator_01_grains28_reset();case 28:return this.granulator_01_grains29_reset();case 29:return this.granulator_01_grains30_reset();case 30:return this.granulator_01_grains31_reset();default:return this.granulator_01_grains32_reset()}}granulator_01_grains_next(t,a,r,_,s,i,e){switch(t){case 0:return this.granulator_01_grains1_next(a,r,_,s,i,e);case 1:return this.granulator_01_grains2_next(a,r,_,s,i,e);case 2:return this.granulator_01_grains3_next(a,r,_,s,i,e);case 3:return this.granulator_01_grains4_next(a,r,_,s,i,e);case 4:return this.granulator_01_grains5_next(a,r,_,s,i,e);case 5:return this.granulator_01_grains6_next(a,r,_,s,i,e);case 6:return this.granulator_01_grains7_next(a,r,_,s,i,e);case 7:return this.granulator_01_grains8_next(a,r,_,s,i,e);case 8:return this.granulator_01_grains9_next(a,r,_,s,i,e);case 9:return this.granulator_01_grains10_next(a,r,_,s,i,e);case 10:return this.granulator_01_grains11_next(a,r,_,s,i,e);case 11:return this.granulator_01_grains12_next(a,r,_,s,i,e);case 12:return this.granulator_01_grains13_next(a,r,_,s,i,e);case 13:return this.granulator_01_grains14_next(a,r,_,s,i,e);case 14:return this.granulator_01_grains15_next(a,r,_,s,i,e);case 15:return this.granulator_01_grains16_next(a,r,_,s,i,e);case 16:return this.granulator_01_grains17_next(a,r,_,s,i,e);case 17:return this.granulator_01_grains18_next(a,r,_,s,i,e);case 18:return this.granulator_01_grains19_next(a,r,_,s,i,e);case 19:return this.granulator_01_grains20_next(a,r,_,s,i,e);case 20:return this.granulator_01_grains21_next(a,r,_,s,i,e);case 21:return this.granulator_01_grains22_next(a,r,_,s,i,e);case 22:return this.granulator_01_grains23_next(a,r,_,s,i,e);case 23:return this.granulator_01_grains24_next(a,r,_,s,i,e);case 24:return this.granulator_01_grains25_next(a,r,_,s,i,e);case 25:return this.granulator_01_grains26_next(a,r,_,s,i,e);case 26:return this.granulator_01_grains27_next(a,r,_,s,i,e);case 27:return this.granulator_01_grains28_next(a,r,_,s,i,e);case 28:return this.granulator_01_grains29_next(a,r,_,s,i,e);case 29:return this.granulator_01_grains30_next(a,r,_,s,i,e);case 30:return this.granulator_01_grains31_next(a,r,_,s,i,e);default:return this.granulator_01_grains32_next(a,r,_,s,i,e)}return 0}granulator_01_init(){this.granulator_01_edgedetect_init();for(var t=0;t<32;t++)for(var a=0;a<2;a++)this.granulator_01_grainPan[t][a]=1}granulator_01_bufferUpdated(){this.granulator_01_buffer.getSampleRate(),this.granulator_01_buffer.getSize();for(var t=0;t<32;t++)this.granulator_01_grains_reset(t)}granulator_01_onSampleRateChanged(t){RNBO_UNUSED(t),this.granulator_01_bufferUpdated()}noise_tilde_01_init(){this.noise_tilde_01_last=systemticks()+this.voice()+this.random(0,1e4),this.noise_tilde_01_recip=2/8388607}noise_tilde_02_init(){this.noise_tilde_02_last=systemticks()+this.voice()+this.random(0,1e4),this.noise_tilde_02_recip=2/8388607}ip_01_init(){this.ip_01_lastValue=this.ip_01_value}ip_01_fillSigBuf(){if(this.ip_01_sigbuf){var t=this.sampleOffsetIntoNextAudioBuffer;t>=this.vs&&(t=this.vs-1);for(var a=this.ip_01_lastIndex;a<t;a++)this.ip_01_resetCount>0?(this.ip_01_sigbuf[a]=1,this.ip_01_resetCount--):this.ip_01_sigbuf[a]=this.ip_01_lastValue;this.ip_01_lastIndex=t}}ip_01_dspsetup(t){this.ip_01_setupDone&&!t||(this.ip_01_lastIndex=0,this.ip_01_setupDone=!0)}mtof_01_innerMtoF_next(t,a){if(t==this.mtof_01_innerMtoF_lastInValue&&a==this.mtof_01_innerMtoF_lastTuning)return this.mtof_01_innerMtoF_lastOutValue;this.mtof_01_innerMtoF_lastInValue=t,this.mtof_01_innerMtoF_lastTuning=a;let r=0;return r=rnbo_exp(.057762265*(t-69)),this.mtof_01_innerMtoF_lastOutValue=a*r,this.mtof_01_innerMtoF_lastOutValue}mtof_01_innerMtoF_reset(){this.mtof_01_innerMtoF_lastInValue=0,this.mtof_01_innerMtoF_lastOutValue=0,this.mtof_01_innerMtoF_lastTuning=0}mtof_01_innerScala_mid(t){this.mtof_01_innerScala_kbmMid=t,this.mtof_01_innerScala_updateRefFreq()}mtof_01_innerScala_ref(t){this.mtof_01_innerScala_kbmRefNum=t,this.mtof_01_innerScala_updateRefFreq()}mtof_01_innerScala_base(t){this.mtof_01_innerScala_kbmRefFreq=t,this.mtof_01_innerScala_updateRefFreq()}mtof_01_innerScala_init(){this.mtof_01_innerScala_updateScale([12,100,0,200,0,300,0,400,0,500,0,600,0,700,0,800,0,900,0,1e3,0,1100,0,2,1])}mtof_01_innerScala_update(t,a){t.length>0&&this.mtof_01_innerScala_updateScale(t),a.length>0&&this.mtof_01_innerScala_updateMap(a)}mtof_01_innerScala_mtof(t){if(this.mtof_01_innerScala_lastValid&&this.mtof_01_innerScala_lastNote==t)return this.mtof_01_innerScala_lastFreq;let a=this.mtof_01_innerScala_applyKBM(t),r=0;return a[1]>0&&(r=this.mtof_01_innerScala_applySCL(a[0],fract(t),this.mtof_01_innerScala_refFreq)),this.mtof_01_innerScala_updateLast(t,r),r}mtof_01_innerScala_ftom(t){if(t<=0)return 0;if(this.mtof_01_innerScala_lastValid&&this.mtof_01_innerScala_lastFreq==t)return this.mtof_01_innerScala_lastNote;let a=this.mtof_01_innerScala_hztodeg(t),r=a[0],_=a[1],s=0;if(0==this.mtof_01_innerScala_kbmSize)s=this.mtof_01_innerScala_kbmMid+r;else{let t=this.mtof_01_innerScala_octdegree(r,this.mtof_01_innerScala_kbmOctaveDegree),a=t[0],_=t[1],e=0;for(var i=0;i<this.mtof_01_innerScala_kbmMapSize;i++)if(_==this.mtof_01_innerScala_kbmValid[i+this.mtof_01_innerScala_KBM_MAP_OFFSET]){e=i;break}s=a*this.mtof_01_innerScala_kbmSize+e+this.mtof_01_innerScala_kbmMid}return s+=_,this.mtof_01_innerScala_updateLast(s,t),this.mtof_01_innerScala_lastNote}mtof_01_innerScala_updateScale(t){if(t.length>1&&2*t[0]+1==t.length){this.mtof_01_innerScala_lastValid=!1,this.mtof_01_innerScala_sclExpMul=[];let r=1;for(var a=1;a<t.length;a+=2){const _=t[a+0],s=t[a+1];r=s<=0?_/1200:rnbo_log2(_/s),this.mtof_01_innerScala_sclExpMul.push(r)}return this.mtof_01_innerScala_sclOctaveMul=r,this.mtof_01_innerScala_sclEntryCount=this.mtof_01_innerScala_sclExpMul.length,this.mtof_01_innerScala_updateRefFreq(),1}return 0}mtof_01_innerScala_updateMap(t){if(1==t.length&&0==t[0]&&(t=[0,0,0,60,69,440]),t.length>=6&&t[0]>=0){this.mtof_01_innerScala_lastValid=!1;let a=t[0],r=12;return t.length>6&&(r=t[6]),a>0&&t.length<this.mtof_01_innerScala_KBM_MAP_OFFSET?0:(this.mtof_01_innerScala_kbmSize=a,this.mtof_01_innerScala_kbmMin=t[1],this.mtof_01_innerScala_kbmMax=t[2],this.mtof_01_innerScala_kbmMid=t[3],this.mtof_01_innerScala_kbmRefNum=t[4],this.mtof_01_innerScala_kbmRefFreq=t[5],this.mtof_01_innerScala_kbmOctaveDegree=r,this.mtof_01_innerScala_kbmValid=t,this.mtof_01_innerScala_kbmMapSize=t.length-this.mtof_01_innerScala_KBM_MAP_OFFSET>t.length?t.length:t.length-this.mtof_01_innerScala_KBM_MAP_OFFSET<0?0:t.length-this.mtof_01_innerScala_KBM_MAP_OFFSET,this.mtof_01_innerScala_updateRefFreq(),1)}return 0}mtof_01_innerScala_updateLast(t,a){this.mtof_01_innerScala_lastValid=!0,this.mtof_01_innerScala_lastNote=t,this.mtof_01_innerScala_lastFreq=a}mtof_01_innerScala_hztodeg(t){let a=rnbo_abs(t),r=rnbo_floor(rnbo_log2(a/this.mtof_01_innerScala_refFreq)/this.mtof_01_innerScala_sclOctaveMul);var _=0;let s=0,i=0;for(;_<this.mtof_01_innerScala_sclEntryCount;_++){let t=this.mtof_01_innerScala_applySCLOctIndex(r,_+0,0,this.mtof_01_innerScala_refFreq);if(i=this.mtof_01_innerScala_applySCLOctIndex(r,_+1,0,this.mtof_01_innerScala_refFreq),t<=a&&a<i){t!=a&&(s=rnbo_log2(a/t)/rnbo_log2(i/t));break}}if(_==this.mtof_01_innerScala_sclEntryCount&&i!=a){let t=i;i=this.mtof_01_innerScala_applySCLOctIndex(r+1,0,0,this.mtof_01_innerScala_refFreq),s=rnbo_log2(a/t)/rnbo_log2(i/t)}let e=_+r*this.mtof_01_innerScala_sclEntryCount;return e=1*rnbo_fround(1*(e+s)/1),s=0,[e,s]}mtof_01_innerScala_octdegree(t,a){let r=0,_=0;return t<0?(r=-(1+(-1-t)/a),_=-t%a,_>0&&(_=a-_)):(r=t/a,_=t%a),[r,_]}mtof_01_innerScala_applyKBM(t){if(this.mtof_01_innerScala_kbmMin==this.mtof_01_innerScala_kbmMax&&0==this.mtof_01_innerScala_kbmMax||t>=this.mtof_01_innerScala_kbmMin&&t<=this.mtof_01_innerScala_kbmMax){let a=rnbo_floor(t-this.mtof_01_innerScala_kbmMid);if(0==this.mtof_01_innerScala_kbmSize)return[a,1];let r=this.mtof_01_innerScala_octdegree(a,this.mtof_01_innerScala_kbmSize),_=r[0],s=r[1];if(this.mtof_01_innerScala_kbmMapSize>s&&(a=this.mtof_01_innerScala_kbmValid[this.mtof_01_innerScala_KBM_MAP_OFFSET+s],a>=0))return[a+_*this.mtof_01_innerScala_kbmOctaveDegree,1]}return[-1,0]}mtof_01_innerScala_applySCL(t,a,r){let _=this.mtof_01_innerScala_octdegree(t,this.mtof_01_innerScala_sclEntryCount);return this.mtof_01_innerScala_applySCLOctIndex(_[0],_[1],a,r)}mtof_01_innerScala_applySCLOctIndex(t,a,r,_){let s=0;return a>0&&(s=this.mtof_01_innerScala_sclExpMul[a-1]),r>0?s=this.linearinterp(r,s,this.mtof_01_innerScala_sclExpMul[a]):r<0&&(s=this.linearinterp(-r,this.mtof_01_innerScala_sclExpMul[a],s)),_*rnbo_pow(2,s+t*this.mtof_01_innerScala_sclOctaveMul)}mtof_01_innerScala_updateRefFreq(){this.mtof_01_innerScala_lastValid=!1;let t=this.mtof_01_innerScala_kbmRefNum-this.mtof_01_innerScala_kbmMid;if(0==t)this.mtof_01_innerScala_refFreq=this.mtof_01_innerScala_kbmRefFreq;else{let a=this.mtof_01_innerScala_kbmSize;a<1&&(a=this.mtof_01_innerScala_sclEntryCount);let r=this.mtof_01_innerScala_octdegree(t,a),_=r[1];if(_>=0&&_+this.mtof_01_innerScala_KBM_MAP_OFFSET<this.mtof_01_innerScala_kbmValid.length&&(_=this.mtof_01_innerScala_kbmValid[_+this.mtof_01_innerScala_KBM_MAP_OFFSET]),_<0);else{let t=r[0],a=0;_>0&&(a=this.mtof_01_innerScala_sclExpMul[_-1]),this.mtof_01_innerScala_refFreq=this.mtof_01_innerScala_kbmRefFreq/rnbo_pow(2,a+t)}}}mtof_01_innerScala_reset(){this.mtof_01_innerScala_internal=!0,this.mtof_01_innerScala_lastValid=!1,this.mtof_01_innerScala_lastNote=0,this.mtof_01_innerScala_lastFreq=0,this.mtof_01_innerScala_sclEntryCount=0,this.mtof_01_innerScala_sclOctaveMul=1,this.mtof_01_innerScala_sclExpMul=[],this.mtof_01_innerScala_kbmValid=[0,0,0,60,69,440],this.mtof_01_innerScala_kbmMid=60,this.mtof_01_innerScala_kbmRefNum=69,this.mtof_01_innerScala_kbmRefFreq=440,this.mtof_01_innerScala_kbmSize=0,this.mtof_01_innerScala_kbmMin=0,this.mtof_01_innerScala_kbmMax=0,this.mtof_01_innerScala_kbmOctaveDegree=12,this.mtof_01_innerScala_kbmMapSize=0,this.mtof_01_innerScala_refFreq=261.63}mtof_01_init(){this.mtof_01_innerScala_update(this.mtof_01_scale,this.mtof_01_map)}ip_02_init(){this.ip_02_lastValue=this.ip_02_value}ip_02_fillSigBuf(){if(this.ip_02_sigbuf){var t=this.sampleOffsetIntoNextAudioBuffer;t>=this.vs&&(t=this.vs-1);for(var a=this.ip_02_lastIndex;a<t;a++)this.ip_02_resetCount>0?(this.ip_02_sigbuf[a]=1,this.ip_02_resetCount--):this.ip_02_sigbuf[a]=this.ip_02_lastValue;this.ip_02_lastIndex=t}}ip_02_dspsetup(t){this.ip_02_setupDone&&!t||(this.ip_02_lastIndex=0,this.ip_02_setupDone=!0)}adsr_01_dspsetup(t){this.adsr_01_setupDone&&!t||(this.adsr_01_mspersamp=1e3/this.sr,this.adsr_01_setupDone=!0)}midiouthelper_sendMidi(t){this.midiouthelper_midiout_set(t)}stackprotect_check(){return this.stackprotect_count++,this.stackprotect_count>128&&(console.log(\"STACK OVERFLOW DETECTED - stopped processing branch !\"),!0)}updateTime(t){this._currentTime=t,this.sampleOffsetIntoNextAudioBuffer=rnbo_fround(this.msToSamps(t-this.getEngine().getCurrentTime(),this.sr)),this.sampleOffsetIntoNextAudioBuffer>=this.vs&&(this.sampleOffsetIntoNextAudioBuffer=this.vs-1),this.sampleOffsetIntoNextAudioBuffer<0&&(this.sampleOffsetIntoNextAudioBuffer=0)}assign_defaults(){}setEngineAndPatcher(t,a){this._engineInterface=t,this._parentPatcher=a}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this.getPatcher().getTopLevelPatcher()}}class RNBOPatcher{constructor(){this.ip_03_value=0,this.ip_03_impulse=0,this.param_01_value=20,this.p_01_target=0,this.p_01_midiin=0,this.limi_01_bypass=0,this.limi_01_dcblock=0,this.limi_01_lookahead=100,this.limi_01_lookahead_setter(this.limi_01_lookahead),this.limi_01_preamp=0,this.limi_01_preamp_setter(this.limi_01_preamp),this.limi_01_postamp=0,this.limi_01_postamp_setter(this.limi_01_postamp),this.limi_01_threshold=0,this.limi_01_threshold_setter(this.limi_01_threshold),this.limi_01_release=1e3,this.dspexpr_07_in1=0,this.dspexpr_07_in2=0,this.ip_04_value=0,this.ip_04_impulse=0,this.sampstohz_tilde_01_samps=0,this.dspexpr_08_in1=0,this.dspexpr_08_in2=1,this.dspexpr_09_in1=0,this.dspexpr_09_in2=1,this.dspexpr_10_in1=0,this.dspexpr_11_in1=0,this.dspexpr_11_in2=0,this.phasor_02_freq=0,this.dspexpr_12_in1=0,this.dspexpr_12_in2=0,this.numberobj_01_value=0,this.numberobj_01_value_setter(this.numberobj_01_value),this.mstosamps_tilde_01_ms=0,this.param_02_value=50,this.expr_04_in1=0,this.expr_04_in2=100,this.expr_04_out1=0,this.dspexpr_13_in1=0,this.dspexpr_13_in2=0,this.param_03_value=100,this.mstosamps_01_ms=0,this.ip_05_value=0,this.ip_05_impulse=0,this.param_04_value=0,this.midiin_01_port=0,this.expr_05_in1=0,this.expr_05_out1=0,this.param_05_value=0,this.data_01_sizeout=0,this.data_01_size=0,this.data_01_sizems=0,this.data_01_channels=2,this.data_02_sizeout=0,this.data_02_size=0,this.data_02_sizems=0,this.data_02_channels=1,this.data_03_sizeout=0,this.data_03_size=0,this.data_03_sizems=0,this.data_03_channels=2,this.pak_01_in1=20,this.pak_01_in2=20,this.pak_01_in3=.8,this.pak_01_in4=500,this.param_06_value=20,this.param_07_value=20,this.param_08_value=.8,this.param_09_value=500,this.midinotecontroller_01_currenttarget=0,this.midinotecontroller_01_midiin=0,this._currentTime=0,this.audioProcessSampleCount=0,this.sampleOffsetIntoNextAudioBuffer=0,this.zeroBuffer=0,this.dummyBuffer=0,this.signals=new Array(5),this.didAllocateSignals=0,this.vs=0,this.maxvs=0,this.sr=44100,this.invsr=2267573696e-14,this.ip_03_lastIndex=0,this.ip_03_lastValue=0,this.ip_03_resetCount=0,this.ip_03_sigbuf=0,this.ip_03_setupDone=!1,this.param_01_lastValue=0,this.p_01_currentStatus=-1,this.p_01_mididata=new Array(3),this.limi_01_lookaheadBuffers=Array(2).fill(0).map(t=>Array(512).fill(0)),this.limi_01_gainBuffer=Array(512).fill(0),this.limi_01_last=0,this.limi_01_lookaheadIndex=0,this.limi_01_recover=0,this.limi_01_lookaheadInv=0,this.limi_01_dc1_xm1=0,this.limi_01_dc1_ym1=0,this.limi_01_dc2_xm1=0,this.limi_01_dc2_ym1=0,this.limi_01_setupDone=!1,this.ip_04_lastIndex=0,this.ip_04_lastValue=0,this.ip_04_resetCount=0,this.ip_04_sigbuf=0,this.ip_04_setupDone=!1,this.dim_01_buffer=0,this.phasor_02_sigbuf=0,this.phasor_02_lastLockedPhase=0,this.phasor_02_conv=0,this.phasor_02_ph_currentPhase=0,this.phasor_02_ph_conv=0,this.phasor_02_setupDone=!1,this.numberobj_01_currentFormat=6,this.numberobj_01_lastValue=0,this.param_02_lastValue=0,this.param_03_lastValue=0,this.ip_05_lastIndex=0,this.ip_05_lastValue=0,this.ip_05_resetCount=0,this.ip_05_sigbuf=0,this.ip_05_setupDone=!1,this.param_04_lastValue=0,this.param_05_lastValue=0,this.data_01_buffer=0,this.data_01_sizemode=0,this.data_01_setupDone=!1,this.data_02_buffer=0,this.data_02_sizemode=0,this.data_02_setupDone=!1,this.data_03_buffer=0,this.data_03_sizemode=0,this.data_03_setupDone=!1,this.param_06_lastValue=0,this.param_07_lastValue=0,this.param_08_lastValue=0,this.param_09_lastValue=0,this.midinotecontroller_01_currentStatus=-1,this.midinotecontroller_01_status=-1,this.midinotecontroller_01_byte1=-1,this.midinotecontroller_01_zone_masterchannel=1,this.midinotecontroller_01_zone_numnotechannels=15,this.midinotecontroller_01_zone_masterpitchbendrange=2,this.midinotecontroller_01_zone_pernotepitchbendrange=48,this.midinotecontroller_01_channel_pitchbend=new Array(16).fill(8192),this.midinotecontroller_01_channel_pressure=new Array(16).fill(0),this.midinotecontroller_01_channel_timbre=new Array(16).fill(0),this.midinotecontroller_01_channel_sustain=new Array(16),this.midinotecontroller_01_voice_lastontime=[-1,-1,-1,-1,-1,-1,-1,-1],this.midinotecontroller_01_voice_notenumber=[0,0,0,0,0,0,0,0],this.midinotecontroller_01_voice_channel=[0,0,0,0,0,0,0,0],this.midinotecontroller_01_voice_state=[0,0,0,0,0,0,0,0],this.midinotecontroller_01_maxnotesdown=128,this.midinotecontroller_01_notesdown=new Array(129).fill(0),this.midinotecontroller_01_note_lastvelocity=new Array(128).fill(0),this.midinotecontroller_01_muteval=[0,0],this.globaltransport_tempo=0,this.globaltransport_tempoNeedsReset=!1,this.globaltransport_lastTempo=120,this.globaltransport_state=0,this.globaltransport_stateNeedsReset=!1,this.globaltransport_lastState=0,this.globaltransport_beatTimeChanges=[0,0],this.globaltransport_timeSignatureChanges=[4,4,0],this.globaltransport_notify=!1,this.globaltransport_setupDone=!1,this.stackprotect_count=0,this.RNBODefaultMtofLookupTable256=0,this.dim_01_bufferobj=0,this.jongly=0,this.usr_buff=0,this.harp_riff=0,this._voiceIndex=0,this._noteNumber=0,this.isMuted=1,this.paramInitIndices=[],this.paramInitOrder=[],this.p_01=new Array}listquicksort(t,a,r,_,s){if(r<_){var i=this.listpartition(t,a,r,_,s);this.listquicksort(t,a,r,i-1,s),this.listquicksort(t,a,i+1,_,s)}}listpartition(t,a,r,_,s){for(var i=t[_],e=r-1,n=r;n<=_-1;n++){var l=s&&t[n]<=i,o=!s&&t[n]>=i;(l||o)&&(e++,this.listswapelements(t,e,n),this.listswapelements(a,e,n))}return e++,this.listswapelements(t,e,_),this.listswapelements(a,e,_),e}listswapelements(t,a,r){var _=t[a];t[a]=t[r],t[r]=_}samplerate(){return this.sr}dim(t){return t.getSize()}sampstoms(t){return 1e3*t/this.sr}mstosamps(t){return t*this.sr*.001}vectorsize(){return this.vs}currenttime(){return this._currentTime}tempo(){return this.getTopLevelPatcher().globaltransport_getTempo()}mstobeats(t){return t*this.tempo()*.008/480}param_01_value_set(t){t=this.param_01_value_constrain(t),this.param_01_value=t,this.sendParameter(0),this.param_01_value!=this.param_01_lastValue&&(this.getEngine().presetTouched(),this.param_01_lastValue=this.param_01_value),this.p_01_in1_number_set(t),this.ip_03_value_set(t)}param_02_value_set(t){t=this.param_02_value_constrain(t),this.param_02_value=t,this.sendParameter(1),this.param_02_value!=this.param_02_lastValue&&(this.getEngine().presetTouched(),this.param_02_lastValue=this.param_02_value),this.mstosamps_tilde_01_ms_set(t)}param_03_value_set(t){t=this.param_03_value_constrain(t),this.param_03_value=t,this.sendParameter(2),this.param_03_value!=this.param_03_lastValue&&(this.getEngine().presetTouched(),this.param_03_lastValue=this.param_03_value),this.expr_04_in1_set(t)}param_04_value_set(t){t=this.param_04_value_constrain(t),this.param_04_value=t,this.sendParameter(3),this.param_04_value!=this.param_04_lastValue&&(this.getEngine().presetTouched(),this.param_04_lastValue=this.param_04_value),this.mstosamps_01_ms_set(t)}param_05_value_set(t){t=this.param_05_value_constrain(t),this.param_05_value=t,this.sendParameter(4),this.param_05_value!=this.param_05_lastValue&&(this.getEngine().presetTouched(),this.param_05_lastValue=this.param_05_value),this.expr_05_in1_set(t)}param_06_value_set(t){t=this.param_06_value_constrain(t),this.param_06_value=t,this.sendParameter(5),this.param_06_value!=this.param_06_lastValue&&(this.getEngine().presetTouched(),this.param_06_lastValue=this.param_06_value),this.pak_01_in1_set(t)}param_07_value_set(t){t=this.param_07_value_constrain(t),this.param_07_value=t,this.sendParameter(6),this.param_07_value!=this.param_07_lastValue&&(this.getEngine().presetTouched(),this.param_07_lastValue=this.param_07_value),this.pak_01_in2_set(t)}param_08_value_set(t){t=this.param_08_value_constrain(t),this.param_08_value=t,this.sendParameter(7),this.param_08_value!=this.param_08_lastValue&&(this.getEngine().presetTouched(),this.param_08_lastValue=this.param_08_value),this.pak_01_in3_set(t)}param_09_value_set(t){t=this.param_09_value_constrain(t),this.param_09_value=t,this.sendParameter(8),this.param_09_value!=this.param_09_lastValue&&(this.getEngine().presetTouched(),this.param_09_lastValue=this.param_09_value),this.pak_01_in4_set(t)}loadbang_02_startupbang_bang(){this.loadbang_02_output_bang()}numberobj_01_value_set(t){this.numberobj_01_value_setter(t),t=this.numberobj_01_value,this.sendParameter(9),this.numberobj_01_output_set(t)}numberobj_01_format_set(t){0==t?this.numberobj_01_currentFormat=0:1==t?this.numberobj_01_currentFormat=1:2==t?this.numberobj_01_currentFormat=2:3==t?this.numberobj_01_currentFormat=3:4==t?this.numberobj_01_currentFormat=4:5==t?this.numberobj_01_currentFormat=5:6==t&&(this.numberobj_01_currentFormat=6)}eventinlet_05_out1_bang_bang(){this.numberobj_01_value_bang(),this.p_01_in7_bang_bang()}eventinlet_05_out1_number_set(t){this.numberobj_01_value_set(t),this.p_01_in7_number_set(t)}eventinlet_05_out1_list_set(t){{let a=convertListToNumber(t);this.numberobj_01_value_set(a)}this.p_01_in7_list_set(t)}getParameterIndexForID(t){return stringCompare(t,\"grainRate\")?stringCompare(t,\"grainDur\")?stringCompare(t,\"trav\")?stringCompare(t,\"injitter\")?stringCompare(t,\"gain\")?stringCompare(t,\"attack\")?stringCompare(t,\"decay\")?stringCompare(t,\"sustain\")?stringCompare(t,\"release\")?stringCompare(t,\"number_obj-21/value\")?INVALID_INDEX:9:8:7:6:5:4:3:2:1:0}getNumMidiInputPorts(){return 1}processMidiEvent(t,a,r,_){this.updateTime(t),this.midiin_01_midihandler(240&r[0],1+(15&r[0]),a,r,_)}getNumMidiOutputPorts(){return 0}process(t,a,r,_,s){RNBO_UNUSED(a),RNBO_UNUSED(t),this.vs=s,this.updateTime(this.getEngine().getCurrentTime());var i=_>=1&&r[0]?r[0]:this.dummyBuffer,e=_>=2&&r[1]?r[1]:this.dummyBuffer;this.ip_03_perform(this.dummyBuffer,s),this.ip_04_perform(this.signals[0],s),this.sampstohz_tilde_01_perform(this.signals[0],this.signals[1],s),this.dspexpr_08_perform(this.signals[1],this.dspexpr_08_in2,this.signals[0],s),this.dspexpr_09_perform(this.signals[0],this.dspexpr_09_in2,this.signals[1],s),this.phasor_02_perform(this.signals[1],this.signals[0],s),this.dspexpr_11_perform(this.signals[0],this.dspexpr_11_in2,this.signals[1],s),this.dspexpr_10_perform(this.signals[1],this.signals[0],s),this.mstosamps_tilde_01_perform(this.mstosamps_tilde_01_ms,this.signals[1],s),this.dspexpr_13_perform(this.dspexpr_13_in1,this.dspexpr_13_in2,this.dummyBuffer,s),this.ip_05_perform(this.signals[2],s),this.p_01_perform(this.signals[0],this.signals[1],this.signals[2],this.signals[3],this.signals[4],s),this.dspexpr_07_perform(this.signals[3],this.dspexpr_07_in2,this.signals[2],s),this.dspexpr_12_perform(this.signals[4],this.dspexpr_12_in2,this.signals[3],s),this.limi_01_perform(this.signals[2],this.signals[3],i,e,s),this.stackprotect_perform(s),this.globaltransport_advance(),this.audioProcessSampleCount+=this.vs}prepareToProcess(t,a,r){if(this.maxvs<a||!this.didAllocateSignals){for(e=0;e<5;e++)this.signals[e]=resizeSignal(this.signals[e],this.maxvs,a);this.ip_03_sigbuf=resizeSignal(this.ip_03_sigbuf,this.maxvs,a),this.ip_04_sigbuf=resizeSignal(this.ip_04_sigbuf,this.maxvs,a),this.phasor_02_sigbuf=resizeSignal(this.phasor_02_sigbuf,this.maxvs,a),this.ip_05_sigbuf=resizeSignal(this.ip_05_sigbuf,this.maxvs,a),this.globaltransport_tempo=resizeSignal(this.globaltransport_tempo,this.maxvs,a),this.globaltransport_state=resizeSignal(this.globaltransport_state,this.maxvs,a),this.zeroBuffer=resizeSignal(this.zeroBuffer,this.maxvs,a),this.dummyBuffer=resizeSignal(this.dummyBuffer,this.maxvs,a),this.didAllocateSignals=!0}var _=t!=this.sr,s=a!=this.maxvs,i=_||s||r;(_||s)&&(this.vs=a,this.maxvs=a,this.sr=t,this.invsr=1/t),this.ip_03_dspsetup(i),this.ip_04_dspsetup(i),this.phasor_02_dspsetup(i),this.ip_05_dspsetup(i),this.limi_01_dspsetup(i),this.data_01_dspsetup(i),this.data_02_dspsetup(i),this.data_03_dspsetup(i),this.globaltransport_dspsetup(i);for(var e=0;e<8;e++)this.p_01[e].prepareToProcess(t,a,r);_&&this.onSampleRateChanged(t)}msToSamps(t,a){return t*a*.001}sampsToMs(t){return t*(1e3*this.invsr)}getMaxBlockSize(){return this.maxvs}getSampleRate(){return this.sr}hasFixedVectorSize(){return!1}getNumInputChannels(){return 0}getNumOutputChannels(){return 2}setProbingTarget(t){this.setProbingIndex(-1)}setProbingIndex(t){}getProbingChannels(t){return RNBO_UNUSED(t),0}getDataRef(t){switch(t){case 0:return addressOf(this.RNBODefaultMtofLookupTable256);case 1:return addressOf(this.jongly);case 2:return addressOf(this.usr_buff);case 3:return addressOf(this.harp_riff);default:return null}}getNumDataRefs(){return 4}fillRNBODefaultMtofLookupTable256(t){var a;let r=(a=new Float64Buffer(t)).getSize();for(let t=0;t<r;t++){let _=512/(r-1)*t-256;a[t]=rnbo_exp(.057762265*(_-69))}}fillDataRef(t,a){switch(t){case 0:this.fillRNBODefaultMtofLookupTable256(a)}}zeroDataRef(t){t.setZero()}processDataViewUpdate(t,a){this.updateTime(a),-1!=t&&1!=t&&3!=t&&2!=t||(this.dim_01_buffer=new Float32MultiBuffer(this.dim_01_bufferobj),this.dim_01_bufferUpdated()),1==t&&(this.data_01_buffer=new Float32Buffer(this.jongly),this.data_01_bufferUpdated()),2==t&&(this.data_02_buffer=new Float32Buffer(this.usr_buff),this.data_02_bufferUpdated()),3==t&&(this.data_03_buffer=new Float32Buffer(this.harp_riff),this.data_03_bufferUpdated());for(var r=0;r<8;r++)this.p_01[r].processDataViewUpdate(t,a)}allocateDataRefs(){for(var t=0;t<8;t++)this.p_01[t].allocateDataRefs();this.RNBODefaultMtofLookupTable256.hasRequestedSize()&&(this.RNBODefaultMtofLookupTable256.wantsFill()&&this.fillRNBODefaultMtofLookupTable256(this.RNBODefaultMtofLookupTable256),this.getEngine().sendDataRefUpdated(0)),this.data_01_buffer=this.data_01_buffer.allocateIfNeeded(),this.jongly.hasRequestedSize()&&(this.jongly.wantsFill()&&this.zeroDataRef(this.jongly),this.getEngine().sendDataRefUpdated(1)),this.data_02_buffer=this.data_02_buffer.allocateIfNeeded(),this.usr_buff.hasRequestedSize()&&(this.usr_buff.wantsFill()&&this.zeroDataRef(this.usr_buff),this.getEngine().sendDataRefUpdated(2)),this.data_03_buffer=this.data_03_buffer.allocateIfNeeded(),this.harp_riff.hasRequestedSize()&&(this.harp_riff.wantsFill()&&this.zeroDataRef(this.harp_riff),this.getEngine().sendDataRefUpdated(3))}initialize(){this.RNBODefaultMtofLookupTable256=initDataRef(\"RNBODefaultMtofLookupTable256\",!0,null),this.dim_01_bufferobj=initMultiRef(this.jongly,this.harp_riff,this.usr_buff),this.jongly=initDataRef(\"jongly\",!1,\"jongly.wav\"),this.usr_buff=initDataRef(\"usr_buff\",!1,null),this.harp_riff=initDataRef(\"harp_riff\",!1,\"harp_riff.wav\"),this.assign_defaults(),this.setState(),this.RNBODefaultMtofLookupTable256.setIndex(0),this.dim_01_bufferobj.setIndex(-1),this.dim_01_buffer=new Float32MultiBuffer(this.dim_01_bufferobj),this.jongly.setIndex(1),this.data_01_buffer=new Float32Buffer(this.jongly),this.usr_buff.setIndex(2),this.data_02_buffer=new Float32Buffer(this.usr_buff),this.harp_riff.setIndex(3),this.data_03_buffer=new Float32Buffer(this.harp_riff),this.initializeObjects(),this.allocateDataRefs(),this.startup()}initializeObjects(){this.ip_03_init(),this.ip_04_init(),this.numberobj_01_init(),this.ip_05_init(),this.data_01_init(),this.data_02_init(),this.data_03_init();for(var t=0;t<8;t++)this.p_01[t].initializeObjects()}getIsMuted(){return this.isMuted}setIsMuted(t){this.isMuted=t}getPatcherSerial(){return 0}getState(t){}setState(){for(var t=0;t<8;t++)this.p_01[t]=new RNBOSubpatcher_05,this.p_01[t].setEngineAndPatcher(this.getEngine(),this),this.p_01[t].initialize(),this.p_01[t].setParameterOffset(this.getParameterOffset(this.p_01[0])),this.p_01[t].setVoiceIndex(t+1)}getPreset(t){this.param_01_getPresetValue(getSubState(t,\"grainRate\")),this.param_02_getPresetValue(getSubState(t,\"grainDur\")),this.param_03_getPresetValue(getSubState(t,\"trav\")),this.param_04_getPresetValue(getSubState(t,\"injitter\")),this.param_05_getPresetValue(getSubState(t,\"gain\")),this.param_06_getPresetValue(getSubState(t,\"attack\")),this.param_07_getPresetValue(getSubState(t,\"decay\")),this.param_08_getPresetValue(getSubState(t,\"sustain\")),this.param_09_getPresetValue(getSubState(t,\"release\"));for(var a=0;a<8;a++)this.p_01[a].getPreset(getSubStateAt(getSubState(t,\"__sps\"),\"p_obj-13\",a))}setPreset(t,a){this.updateTime(t),this.param_01_setPresetValue(getSubState(a,\"grainRate\")),this.param_02_setPresetValue(getSubState(a,\"grainDur\")),this.param_03_setPresetValue(getSubState(a,\"trav\")),this.param_04_setPresetValue(getSubState(a,\"injitter\")),this.param_05_setPresetValue(getSubState(a,\"gain\")),this.param_06_setPresetValue(getSubState(a,\"attack\")),this.param_07_setPresetValue(getSubState(a,\"decay\")),this.param_08_setPresetValue(getSubState(a,\"sustain\")),this.param_09_setPresetValue(getSubState(a,\"release\"))}processTempoEvent(t,a){if(this.updateTime(t),this.globaltransport_setTempo(a,!1))for(var r=0;r<8;r++)this.p_01[r].processTempoEvent(t,a)}processTransportEvent(t,a){if(this.updateTime(t),this.globaltransport_setState(a,!1))for(var r=0;r<8;r++)this.p_01[r].processTransportEvent(t,a)}processBeatTimeEvent(t,a){if(this.updateTime(t),this.globaltransport_setBeatTime(a,!1))for(var r=0;r<8;r++)this.p_01[r].processBeatTimeEvent(t,a)}onSampleRateChanged(t){}processTimeSignatureEvent(t,a,r){if(this.updateTime(t),this.globaltransport_setTimeSignature(a,r,!1))for(var _=0;_<8;_++)this.p_01[_].processTimeSignatureEvent(t,a,r)}setParameterValue(t,a,r){switch(this.updateTime(r),t){case 0:this.param_01_value_set(a);break;case 1:this.param_02_value_set(a);break;case 2:this.param_03_value_set(a);break;case 3:this.param_04_value_set(a);break;case 4:this.param_05_value_set(a);break;case 5:this.param_06_value_set(a);break;case 6:this.param_07_value_set(a);break;case 7:this.param_08_value_set(a);break;case 8:this.param_09_value_set(a);break;case 9:this.numberobj_01_value_set(a);break;default:(t-=10)<this.p_01[0].getNumParameters()&&this.p_01[0].setPolyParameterValue(this.p_01,t,a,r)}}processParameterEvent(t,a,r){this.setParameterValue(t,a,r)}processNormalizedParameterEvent(t,a,r){this.setParameterValueNormalized(t,a,r)}getParameterValue(t){switch(t){case 0:return this.param_01_value;case 1:return this.param_02_value;case 2:return this.param_03_value;case 3:return this.param_04_value;case 4:return this.param_05_value;case 5:return this.param_06_value;case 6:return this.param_07_value;case 7:return this.param_08_value;case 8:return this.param_09_value;case 9:return this.numberobj_01_value;default:return(t-=10)<this.p_01[0].getNumParameters()?this.p_01[0].getPolyParameterValue(this.p_01,t):0}}getNumSignalInParameters(){return 0}getNumSignalOutParameters(){return 0}getNumParameters(){return 10+this.p_01[0].getNumParameters()}getParameterName(t){switch(t){case 0:return\"grainRate\";case 1:return\"grainDur\";case 2:return\"trav\";case 3:return\"injitter\";case 4:return\"gain\";case 5:return\"attack\";case 6:return\"decay\";case 7:return\"sustain\";case 8:return\"release\";case 9:return\"numberobj_01_value\";default:return(t-=10)<this.p_01[0].getNumParameters()?this.p_01[0].getParameterName(t):\"bogus\"}}getParameterId(t){switch(t){case 0:return\"grainRate\";case 1:return\"grainDur\";case 2:return\"trav\";case 3:return\"injitter\";case 4:return\"gain\";case 5:return\"attack\";case 6:return\"decay\";case 7:return\"sustain\";case 8:return\"release\";case 9:return\"number_obj-21/value\";default:return(t-=10)<this.p_01[0].getNumParameters()?this.p_01[0].getParameterId(t):\"bogus\"}}getParameterInfo(t,a){switch(t){case 0:a.type=ParameterTypeNumber,a.initialValue=20,a.min=0,a.max=1e3,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"hz\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;case 1:a.type=ParameterTypeNumber,a.initialValue=50,a.min=.1,a.max=5e3,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"ms\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;case 2:a.type=ParameterTypeNumber,a.initialValue=100,a.min=-800,a.max=800,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"%\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;case 3:a.type=ParameterTypeNumber,a.initialValue=0,a.min=0,a.max=5e3,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"ms\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;case 4:a.type=ParameterTypeNumber,a.initialValue=0,a.min=-120,a.max=6,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"db\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;case 5:case 6:a.type=ParameterTypeNumber,a.initialValue=20,a.min=0,a.max=5e3,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"ms\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;case 7:a.type=ParameterTypeNumber,a.initialValue=.8,a.min=0,a.max=1,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"amp\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;case 8:a.type=ParameterTypeNumber,a.initialValue=500,a.min=0,a.max=5e3,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!0,a.displayName=\"\",a.unit=\"ms\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;case 9:a.type=ParameterTypeNumber,a.initialValue=0,a.min=0,a.max=1,a.exponent=1,a.steps=0,a.debug=!1,a.saveable=!0,a.transmittable=!0,a.initialized=!0,a.visible=!1,a.displayName=\"\",a.unit=\"\",a.ioType=IOTypeUndefined,a.signalIndex=INVALID_INDEX;break;default:if((t-=10)<this.p_01[0].getNumParameters())for(var r=0;r<8;r++)this.p_01[r].getParameterInfo(t,a)}}sendParameter(t){this.getEngine().notifyParameterValueChanged(t,this.getParameterValue(t))}getParameterOffset(t){return t==this.p_01[0]?10:0}applyStepsToNormalizedParameterValue(t,a){if(1==a)t>0&&(t=1);else{let r=1/(a-1);t=1*rnbo_fround(t/r*1/1)*r}return t}convertToNormalizedParameterValue(t,a){switch(t){case 7:case 9:return((a=a<0?0:a>1?1:a)-0)/1;case 0:return((a=a<0?0:a>1e3?1e3:a)-0)/1e3;case 3:case 5:case 6:case 8:return((a=a<0?0:a>5e3?5e3:a)-0)/5e3;case 1:return((a=a<.1?.1:a>5e3?5e3:a)-.1)/4999.9;case 2:return((a=a<-800?-800:a>800?800:a)- -800)/1600;case 4:return((a=a<-120?-120:a>6?6:a)- -120)/126;default:return(t-=10)<this.p_01[0].getNumParameters()?this.p_01[0].convertToNormalizedParameterValue(t,a):a}}convertFromNormalizedParameterValue(t,a){switch(a=a<0?0:a>1?1:a,t){case 7:case 9:return 0+1*(a=a<0?0:a>1?1:a);case 0:return 0+1e3*(a=a<0?0:a>1?1:a);case 3:case 5:case 6:case 8:return 0+5e3*(a=a<0?0:a>1?1:a);case 1:return.1+4999.9*(a=a<0?0:a>1?1:a);case 2:return 1600*(a=a<0?0:a>1?1:a)-800;case 4:return 126*(a=a<0?0:a>1?1:a)-120;default:return(t-=10)<this.p_01[0].getNumParameters()?this.p_01[0].convertFromNormalizedParameterValue(t,a):a}}constrainParameterValue(t,a){switch(t){case 0:return this.param_01_value_constrain(a);case 1:return this.param_02_value_constrain(a);case 2:return this.param_03_value_constrain(a);case 3:return this.param_04_value_constrain(a);case 4:return this.param_05_value_constrain(a);case 5:return this.param_06_value_constrain(a);case 6:return this.param_07_value_constrain(a);case 7:return this.param_08_value_constrain(a);case 8:return this.param_09_value_constrain(a);default:return(t-=10)<this.p_01[0].getNumParameters()?this.p_01[0].constrainParameterValue(t,a):a}}scheduleParamInit(t,a){this.paramInitIndices.push(t),this.paramInitOrder.push(a)}processParamInitEvents(){this.listquicksort(this.paramInitOrder,this.paramInitIndices,0,this.paramInitOrder.length-1,!0);for(var t=0;t<this.paramInitOrder.length;t++)this.getEngine().scheduleParameterChange(this.paramInitIndices[t],this.getParameterValue(this.paramInitIndices[t]),0)}processClockEvent(t,a,r,_){switch(RNBO_UNUSED(_),RNBO_UNUSED(r),this.updateTime(t),a){case-871642103:this.loadbang_02_startupbang_bang()}}processOutletAtCurrentTime(t,a,r){}processOutletEvent(t,a,r,_){this.updateTime(_),this.processOutletAtCurrentTime(t,a,r)}sendOutlet(t,a){this.getEngine().sendOutlet(this,t,a)}processNumMessage(t,a,r,_){switch(this.updateTime(r),t){case TAG(\"format\"):TAG(\"number_obj-21\")==a&&this.numberobj_01_format_set(_);break;case TAG(\"in1\"):this.eventinlet_05_out1_number_set(_)}for(var s=0;s<8;s++)this.p_01[s].processNumMessage(t,a,r,_)}processListMessage(t,a,r,_){switch(RNBO_UNUSED(a),this.updateTime(r),t){case TAG(\"in1\"):this.eventinlet_05_out1_list_set(_)}for(var s=0;s<8;s++)this.p_01[s].processListMessage(t,a,r,_)}processBangMessage(t,a,r){switch(this.updateTime(r),t){case TAG(\"startupbang\"):TAG(\"loadbang_obj-55\")==a&&this.loadbang_02_startupbang_bang();break;case TAG(\"in1\"):this.eventinlet_05_out1_bang_bang()}for(var _=0;_<8;_++)this.p_01[_].processBangMessage(t,a,r)}resolveTag(t){switch(t){case TAG(\"setup\"):return\"setup\";case TAG(\"number_obj-21\"):return\"number_obj-21\";case TAG(\"startupbang\"):return\"startupbang\";case TAG(\"loadbang_obj-55\"):return\"loadbang_obj-55\";case TAG(\"format\"):return\"format\";case TAG(\"in1\"):return\"in1\";case TAG(\"\"):return\"\"}var a=this.p_01[0].resolveTag(t);return a||\"\"}getNumMessages(){return 1}getMessageInfo(t){switch(t){case 0:return{tag:\"in1\",type:Inport}}return NullMessageInfo}startup(){this.updateTime(this.getEngine().getCurrentTime());for(var t=0;t<8;t++)this.p_01[t].startup();this.getEngine().scheduleClockEvent(this,-871642103,0+this._currentTime),this.scheduleParamInit(0,0),this.scheduleParamInit(1,0),this.scheduleParamInit(2,0),this.scheduleParamInit(3,0),this.scheduleParamInit(4,0),this.scheduleParamInit(5,0),this.scheduleParamInit(6,0),this.scheduleParamInit(7,0),this.scheduleParamInit(8,0),this.processParamInitEvents()}param_01_value_constrain(t){return t=t>1e3?1e3:t<0?0:t}p_01_in1_number_set(t){for(var a=0;a<8;a++)a+1!=this.p_01_target&&0!=this.p_01_target||this.p_01[a].updateTime(this._currentTime);for(a=0;a<8;a++)a+1!=this.p_01_target&&0!=this.p_01_target||this.p_01[a].eventinlet_01_out1_number_set(t)}ip_03_value_set(t){this.ip_03_value=t,this.ip_03_fillSigBuf(),this.ip_03_lastValue=t}param_02_value_constrain(t){return t=t>5e3?5e3:t<.1?.1:t}mstosamps_tilde_01_ms_set(t){this.mstosamps_tilde_01_ms=t}param_03_value_constrain(t){return t=t>800?800:t<-800?-800:t}dspexpr_13_in1_set(t){this.dspexpr_13_in1=t}dspexpr_09_in2_set(t){this.dspexpr_09_in2=t}expr_04_out1_set(t){this.expr_04_out1=t,this.dspexpr_13_in1_set(this.expr_04_out1),this.dspexpr_09_in2_set(this.expr_04_out1)}expr_04_in1_set(t){this.expr_04_in1=t,this.expr_04_out1_set(0==this.expr_04_in2||0==this.expr_04_in2?0:this.expr_04_in1/this.expr_04_in2)}param_04_value_constrain(t){return t=t>5e3?5e3:t<0?0:t}ip_05_value_set(t){this.ip_05_value=t,this.ip_05_fillSigBuf(),this.ip_05_lastValue=t}mstosamps_01_out1_set(t){this.ip_05_value_set(t)}mstosamps_01_ms_set(t){this.mstosamps_01_ms=t,this.mstosamps_01_out1_set(t*this.sr*.001)}param_05_value_constrain(t){return t=t>6?6:t<-120?-120:t}dspexpr_12_in2_set(t){this.dspexpr_12_in2=t}dspexpr_07_in2_set(t){this.dspexpr_07_in2=t}expr_05_out1_set(t){this.expr_05_out1=t,this.dspexpr_12_in2_set(this.expr_05_out1),this.dspexpr_07_in2_set(this.expr_05_out1)}expr_05_in1_set(t){this.expr_05_in1=t,this.expr_05_out1_set(rnbo_pow(10,.05*this.expr_05_in1))}param_06_value_constrain(t){return t=t>5e3?5e3:t<0?0:t}p_01_in6_list_set(t){for(var a=0;a<8;a++)a+1!=this.p_01_target&&0!=this.p_01_target||this.p_01[a].updateTime(this._currentTime);for(a=0;a<8;a++)a+1!=this.p_01_target&&0!=this.p_01_target||this.p_01[a].eventinlet_04_out1_list_set(t)}pak_01_out_set(t){this.p_01_in6_list_set(t)}pak_01_in1_set(t){this.pak_01_in1=t;let a=list(0,0,0,0);a[0]=this.pak_01_in1,a[1]=this.pak_01_in2,a[2]=this.pak_01_in3,a[3]=this.pak_01_in4,this.pak_01_out_set(a)}param_07_value_constrain(t){return t=t>5e3?5e3:t<0?0:t}pak_01_in2_set(t){this.pak_01_in2=t;let a=list(0,0,0,0);a[0]=this.pak_01_in1,a[1]=this.pak_01_in2,a[2]=this.pak_01_in3,a[3]=this.pak_01_in4,this.pak_01_out_set(a)}param_08_value_constrain(t){return t=t>1?1:t<0?0:t}pak_01_in3_set(t){this.pak_01_in3=t;let a=list(0,0,0,0);a[0]=this.pak_01_in1,a[1]=this.pak_01_in2,a[2]=this.pak_01_in3,a[3]=this.pak_01_in4,this.pak_01_out_set(a)}param_09_value_constrain(t){return t=t>5e3?5e3:t<0?0:t}pak_01_in4_set(t){this.pak_01_in4=t;let a=list(0,0,0,0);a[0]=this.pak_01_in1,a[1]=this.pak_01_in2,a[2]=this.pak_01_in3,a[3]=this.pak_01_in4,this.pak_01_out_set(a)}dspexpr_11_in2_set(t){this.dspexpr_11_in2=t}ip_04_value_set(t){this.ip_04_value=t,this.ip_04_fillSigBuf(),this.ip_04_lastValue=t}dim_01_out_set(t){this.dspexpr_11_in2_set(t),this.ip_04_value_set(t)}dim_01_outms_set(t){}dim_01_input_bang(){let t=this.dim(this.dim_01_buffer);this.dim_01_out_set(t),this.dim_01_outms_set(this.sampstoms(t))}loadbang_02_output_bang(){this.dim_01_input_bang()}dim_01_buffer_set(t){updateMultiRef(this,this.dim_01_buffer,t)}numberobj_01_output_set(t){this.dim_01_buffer_set(t)}numberobj_01_value_bang(){var t=this.numberobj_01_value;this.sendParameter(9),this.numberobj_01_output_set(t)}p_01_in7_bang_bang(){for(var t=0;t<8;t++)t+1!=this.p_01_target&&0!=this.p_01_target||this.p_01[t].updateTime(this._currentTime);for(t=0;t<8;t++)t+1!=this.p_01_target&&0!=this.p_01_target||this.p_01[t].eventinlet_02_out1_bang_bang()}p_01_in7_number_set(t){for(var a=0;a<8;a++)a+1!=this.p_01_target&&0!=this.p_01_target||this.p_01[a].updateTime(this._currentTime);for(a=0;a<8;a++)a+1!=this.p_01_target&&0!=this.p_01_target||this.p_01[a].eventinlet_02_out1_number_set(t)}p_01_in7_list_set(t){for(var a=0;a<8;a++)a+1!=this.p_01_target&&0!=this.p_01_target||this.p_01[a].updateTime(this._currentTime);for(a=0;a<8;a++)a+1!=this.p_01_target&&0!=this.p_01_target||this.p_01[a].eventinlet_02_out1_list_set(t)}midinotecontroller_01_currenttarget_set(t){this.midinotecontroller_01_currenttarget=t}p_01_target_set(t){this.p_01_target=t,this.midinotecontroller_01_currenttarget_set(t)}midinotecontroller_01_target_set(t){this.p_01_target_set(t)}p_01_midiininternal_set(t){let a=0;switch(this.p_01_currentStatus=parseMidi(this.p_01_currentStatus,t,this.p_01_mididata[0]),this.p_01_currentStatus){case MIDI_StatusByteReceived:this.p_01_mididata[0]=t,this.p_01_mididata[1]=0;break;case MIDI_SecondByteReceived:case MIDI_ProgramChange:case MIDI_ChannelPressure:this.p_01_mididata[1]=t,this.p_01_currentStatus!=MIDI_ProgramChange&&this.p_01_currentStatus!=MIDI_ChannelPressure||(a=2);break;case MIDI_NoteOff:case MIDI_NoteOn:case MIDI_Aftertouch:case MIDI_CC:case MIDI_PitchBend:default:this.p_01_mididata[2]=t,a=3}var r;if(a>0)if(this.p_01_target>0&&this.p_01_target<=8)r=this.p_01_target-1,this.p_01[r].processMidiEvent(_currentTime,0,this.p_01_mididata,a);else if(0==this.p_01_target)for(r=0;r<8;r++)this.p_01[r].processMidiEvent(_currentTime,0,this.p_01_mididata,a)}midinotecontroller_01_midiout_set(t){this.p_01_midiininternal_set(t)}p_01_noteNumber_set(t){this.p_01_target>0&&this.p_01[this.p_01_target-1].setNoteNumber(t)}midinotecontroller_01_noteNumber_set(t){this.p_01_noteNumber_set(t)}midinotecontroller_01_voicestatus_set(t){if(1==t[1]){let a=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(t[0]),this.midinotecontroller_01_noteNumber_set(0),this.midinotecontroller_01_target_set(a)}}p_01_voicestatus_set(t){this.midinotecontroller_01_voicestatus_set(t)}p_01_activevoices_set(t){}p_01_mute_set(t){var a=t[0],r=t[1];if(0==a)for(var _=0;_<8;_++)this.p_01[_].setIsMuted(r);else{var s=a-1;s>=0&&s<8&&this.p_01[s].setIsMuted(r)}var i=[t[0],t[1]];this.p_01_voicestatus_set(i),this.p_01_activevoices_set(this.p_01_calcActiveVoices())}midinotecontroller_01_mute_set(t){this.p_01_mute_set(t)}midinotecontroller_01_midiin_set(t){this.midinotecontroller_01_midiin=t;let a=t;switch(this.midinotecontroller_01_currentStatus=parseMidi(this.midinotecontroller_01_currentStatus,t,this.midinotecontroller_01_status),this.midinotecontroller_01_currentStatus){case MIDI_StatusByteReceived:this.midinotecontroller_01_status=a,this.midinotecontroller_01_byte1=-1;break;case MIDI_SecondByteReceived:this.midinotecontroller_01_byte1=a;break;case MIDI_NoteOn:{let t=!0,r=1,_=this.midinotecontroller_01_voice_lastontime[0],s=this.midinotecontroller_01_voice_state[0];for(let a=0;a<8;a++){let i=this.midinotecontroller_01_voice_state[a];if(this.midinotecontroller_01_voice_notenumber[a]==this.midinotecontroller_01_byte1&&i==MIDI_NoteState_On){t=!1,r=a+1;break}if(a>0&&(i!=MIDI_NoteState_On||s==MIDI_NoteState_On)){let t=this.midinotecontroller_01_voice_lastontime[a];(t<_||s==MIDI_NoteState_On&&i!=MIDI_NoteState_On)&&(r=a+1,_=t,s=i)}}t&&this.midinotecontroller_01_sendnoteoff(r);let i=r-1;this.midinotecontroller_01_voice_state[i]=MIDI_NoteState_On,this.midinotecontroller_01_voice_lastontime[i]=this.currenttime(),this.midinotecontroller_01_voice_notenumber[i]=this.midinotecontroller_01_byte1,this.midinotecontroller_01_voice_channel[i]=15&this.midinotecontroller_01_status;for(let t=0;t<this.midinotecontroller_01_maxnotesdown;t++)if(0==this.midinotecontroller_01_notesdown[t]){this.midinotecontroller_01_notesdown[t]=this.midinotecontroller_01_voice_notenumber[i];break}this.midinotecontroller_01_note_lastvelocity[this.midinotecontroller_01_voice_notenumber[i]]=a,this.midinotecontroller_01_sendpitchbend(i),this.midinotecontroller_01_sendpressure(i),this.midinotecontroller_01_sendtimbre(i),this.midinotecontroller_01_muteval[0]=r,this.midinotecontroller_01_muteval[1]=0,this.midinotecontroller_01_mute_set(this.midinotecontroller_01_muteval);let e=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(r),this.midinotecontroller_01_noteNumber_set(this.midinotecontroller_01_voice_notenumber[i]),this.midinotecontroller_01_midiout_set(MIDI_NoteOnMask|this.midinotecontroller_01_voice_channel[i]),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_voice_notenumber[i]),this.midinotecontroller_01_midiout_set(a),this.midinotecontroller_01_target_set(e);break}case MIDI_NoteOff:{let a=0,r=this.midinotecontroller_01_byte1,_=15&this.midinotecontroller_01_status;for(let t=0;t<8;t++)if(this.midinotecontroller_01_voice_notenumber[t]==r&&this.midinotecontroller_01_voice_channel[t]==_&&this.midinotecontroller_01_voice_state[t]==MIDI_NoteState_On){a=t+1;break}if(a>0){let r=a-1,s=_,i=!0;if(this.midinotecontroller_01_channel_sustain[i?0:s])this.midinotecontroller_01_voice_state[r]=MIDI_NoteState_Sustained;else{let _=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(a),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_status),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_byte1),this.midinotecontroller_01_midiout_set(t),this.midinotecontroller_01_target_set(_),this.midinotecontroller_01_currentStatus==MIDI_NoteOff&&(this.midinotecontroller_01_voice_state[r]=MIDI_NoteState_Off)}}let s=!1;for(let t=0;t<this.midinotecontroller_01_maxnotesdown&&0!=this.midinotecontroller_01_notesdown[t];t++)this.midinotecontroller_01_notesdown[t]==r&&(s=!0),s&&(this.midinotecontroller_01_notesdown[t]=this.midinotecontroller_01_notesdown[t+1]);break}case MIDI_Aftertouch:{let a=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(0),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_status),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_byte1),this.midinotecontroller_01_midiout_set(t),this.midinotecontroller_01_target_set(a);break}case MIDI_CC:{let r=!0;switch(this.midinotecontroller_01_byte1){case MIDI_CC_Sustain:{let t=a>=64,r=15&this.midinotecontroller_01_status,_=r,s=!0;if(this.midinotecontroller_01_channel_sustain[s?0:_]=t,!t)for(let t=0;t<8;t++)if((s||this.midinotecontroller_01_voice_channel[t]==r)&&this.midinotecontroller_01_voice_state[t]==MIDI_NoteState_Sustained){let a=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(t+1),this.midinotecontroller_01_midiout_set(MIDI_NoteOffMask|_),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_voice_notenumber[t]),this.midinotecontroller_01_midiout_set(64),this.midinotecontroller_01_target_set(a),this.midinotecontroller_01_voice_state[t]=MIDI_NoteState_Off}break}case MIDI_CC_TimbreMSB:{let a=15&this.midinotecontroller_01_status,_=(127&t)<<7;this.midinotecontroller_01_channel_timbre[15&this.midinotecontroller_01_status]=_;for(let t=0;t<8;t++)this.midinotecontroller_01_voice_channel[t]==a&&this.midinotecontroller_01_voice_state[t]!=MIDI_NoteState_Off&&this.midinotecontroller_01_sendtimbre(t);r=!1;break}case MIDI_CC_TimbreLSB:break;case MIDI_CC_AllNotesOff:this.midinotecontroller_01_sendallnotesoff()}if(r){let a=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(0),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_status),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_byte1),this.midinotecontroller_01_midiout_set(t),this.midinotecontroller_01_target_set(a)}break}case MIDI_ProgramChange:{let t=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(0),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_status),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_byte1),this.midinotecontroller_01_target_set(t);break}case MIDI_ChannelPressure:{let a=15&this.midinotecontroller_01_status;for(let r=0;r<8;r++)if(this.midinotecontroller_01_voice_state[r]!=MIDI_NoteState_Off&&this.midinotecontroller_01_voice_channel[r]==a){let _=a;this.midinotecontroller_01_channel_pressure[_]=t,this.midinotecontroller_01_sendpressure(r)}break}case MIDI_PitchBend:{let t=this.midinotecontroller_01_byte1|a<<7,r=15&this.midinotecontroller_01_status;this.midinotecontroller_01_channel_pitchbend[r]=t;for(let t=0;t<8;t++)this.midinotecontroller_01_voice_state[t]!=MIDI_NoteState_Off&&this.midinotecontroller_01_voice_channel[t]==r&&this.midinotecontroller_01_sendpitchbend(t);break}}}p_01_midiin_set(t){this.p_01_midiin=t,this.midinotecontroller_01_midiin_set(t)}midiin_01_midiout_set(t){this.p_01_midiin_set(t)}midiin_01_midihandler(t,a,r,_,s){var i;for(RNBO_UNUSED(r),RNBO_UNUSED(a),RNBO_UNUSED(t),i=0;i<s;i++)this.midiin_01_midiout_set(_[i])}ip_03_perform(t,a){for(var r=this.ip_03_sigbuf,_=this.ip_03_lastValue,s=this.ip_03_lastIndex,i=0;i<a;i++)t[i]=i>=s?_:r[i];s=0,this.ip_03_lastIndex=s}ip_04_perform(t,a){for(var r=this.ip_04_sigbuf,_=this.ip_04_lastValue,s=this.ip_04_lastIndex,i=0;i<a;i++)t[i]=i>=s?_:r[i];s=0,this.ip_04_lastIndex=s}sampstohz_tilde_01_perform(t,a,r){var _;for(_=0;_<r;_++)a[_]=t[_]/this.sr}dspexpr_08_perform(t,a,r,_){var s;for(RNBO_UNUSED(a),s=0;s<_;s++)r[s]=0==t[s]?0:1/t[s]}dspexpr_09_perform(t,a,r,_){var s;for(s=0;s<_;s++)r[s]=t[s]*a}phasor_02_perform(t,a,r){for(var _=this.phasor_02_sigbuf,s=0;s<r;s++)a[s]=this.phasor_02_ph_next(t[s],-1),_[s]=-1}dspexpr_11_perform(t,a,r,_){var s;for(s=0;s<_;s++)r[s]=t[s]*a}dspexpr_10_perform(t,a,r){var _;for(_=0;_<r;_++)a[_]=rnbo_floor(t[_])}mstosamps_tilde_01_perform(t,a,r){var _;for(_=0;_<r;_++)a[_]=t*this.sr*.001}dspexpr_13_perform(t,a,r,_){var s;for(RNBO_UNUSED(a),s=0;s<_;s++)r[s]=t<0}ip_05_perform(t,a){for(var r=this.ip_05_sigbuf,_=this.ip_05_lastValue,s=this.ip_05_lastIndex,i=0;i<a;i++)t[i]=i>=s?_:r[i];s=0,this.ip_05_lastIndex=s}p_01_perform(t,a,r,_,s,i){for(var e=[t,a,r],n=[_,s],l=0;l<2;l++)zeroSignal(n[l],i);for(var o=0;o<8;o++)this.p_01[o].process(e,3,n,2,i)}dspexpr_07_perform(t,a,r,_){var s;for(s=0;s<_;s++)r[s]=t[s]*a}dspexpr_12_perform(t,a,r,_){var s;for(s=0;s<_;s++)r[s]=t[s]*a}limi_01_perform(t,a,r,_,s){RNBO_UNUSED(_),RNBO_UNUSED(r),RNBO_UNUSED(a),RNBO_UNUSED(t);var i,e=this.limi_01_lookaheadInv,n=this.limi_01_threshold,l=this.limi_01_lookahead,o=this.limi_01_gainBuffer,u=this.limi_01_recover,h=this.limi_01_last,g=this.limi_01_postamp,c=this.limi_01_lookaheadIndex,p=this.limi_01_lookaheadBuffers,m=this.limi_01_preamp,f=this.limi_01_dcblock,d=[t,a],b=[r,_];if(this.limi_01_bypass)for(let t=0;t<s;t++)for(let a=0;a<2;a++)b[a][t]=d[a][t];else for(let t=0;t<s;t++){var v=0;for(let a=0;a<2;a++){var S=d[a];i=f?this.limi_01_dc_next(a,S[t],.9997):S[t],i*=m,p[a][c]=i*g,(i=rnbo_fabs(i))>v&&(v=i)}(i=h>.01?h+u*h:h+u)>1&&(i=1),o[c]=i;var O=c-l;if(O<0&&(O+=l),v*i>n)for(var x,k=n/v,R=n-k,I=0,L=0,T=0;0==L&&T<l;T++){var N=c-T;N<0&&(N+=l),(x=k+R*(I*I))<o[N]?o[N]=x:L=1,I+=e}for(T=0;T<2;T++)b[T][t]=p[T][O]*o[O];h=o[c],++c>=l&&(c=0)}this.limi_01_lookaheadIndex=c,this.limi_01_last=h}stackprotect_perform(t){RNBO_UNUSED(t);this.stackprotect_count;this.stackprotect_count=0}data_01_sizeout_set(t){this.data_01_sizeout=t}data_01_chanout_set(t){}data_01_srout_set(t){}data_02_sizeout_set(t){this.data_02_sizeout=t}data_02_chanout_set(t){}data_02_srout_set(t){}data_03_sizeout_set(t){this.data_03_sizeout=t}data_03_chanout_set(t){}data_03_srout_set(t){}limi_01_lookahead_setter(t){this.limi_01_lookahead=t>512?512:t<0?0:t,this.limi_01_lookaheadInv=1/this.limi_01_lookahead}limi_01_preamp_setter(t){this.limi_01_preamp=rnbo_pow(10,.05*t)}limi_01_postamp_setter(t){this.limi_01_postamp=rnbo_pow(10,.05*t)}limi_01_threshold_setter(t){this.limi_01_threshold=rnbo_pow(10,.05*t)}numberobj_01_value_setter(t){let a=t;6!=this.numberobj_01_currentFormat&&(a=rnbo_trunc(a)),this.numberobj_01_value=a}ip_03_init(){this.ip_03_lastValue=this.ip_03_value}ip_03_fillSigBuf(){if(this.ip_03_sigbuf){var t=this.sampleOffsetIntoNextAudioBuffer;t>=this.vs&&(t=this.vs-1);for(var a=this.ip_03_lastIndex;a<t;a++)this.ip_03_resetCount>0?(this.ip_03_sigbuf[a]=1,this.ip_03_resetCount--):this.ip_03_sigbuf[a]=this.ip_03_lastValue;this.ip_03_lastIndex=t}}ip_03_dspsetup(t){this.ip_03_setupDone&&!t||(this.ip_03_lastIndex=0,this.ip_03_setupDone=!0)}param_01_getPresetValue(t){t.value=this.param_01_value}param_01_setPresetValue(t){stateIsEmpty(t)||this.param_01_value_set(t.value)}p_01_calcActiveVoices(){{let t=0;for(let a=0;a<8;a++)this.p_01[a].getIsMuted()||t++;return t}}limi_01_dc1_next(t,a){var r=t-this.limi_01_dc1_xm1+this.limi_01_dc1_ym1*a;return this.limi_01_dc1_xm1=t,this.limi_01_dc1_ym1=r,r}limi_01_dc1_reset(){this.limi_01_dc1_xm1=0,this.limi_01_dc1_ym1=0}limi_01_dc1_dspsetup(){this.limi_01_dc1_reset()}limi_01_dc2_next(t,a){var r=t-this.limi_01_dc2_xm1+this.limi_01_dc2_ym1*a;return this.limi_01_dc2_xm1=t,this.limi_01_dc2_ym1=r,r}limi_01_dc2_reset(){this.limi_01_dc2_xm1=0,this.limi_01_dc2_ym1=0}limi_01_dc2_dspsetup(){this.limi_01_dc2_reset()}limi_01_dc_next(t,a,r){switch(t){case 0:return this.limi_01_dc1_next(a,r);default:return this.limi_01_dc2_next(a,r)}return 0}limi_01_dc_reset(t){switch(t){case 0:return this.limi_01_dc1_reset();default:return this.limi_01_dc2_reset()}}limi_01_dc_dspsetup(t){switch(t){case 0:return this.limi_01_dc1_dspsetup();default:return this.limi_01_dc2_dspsetup()}}limi_01_reset(){this.limi_01_recover=1e3/(this.limi_01_release*this.samplerate()),this.limi_01_recover*=.707}limi_01_dspsetup(t){this.limi_01_setupDone&&!t||(this.limi_01_reset(),this.limi_01_setupDone=!0,this.limi_01_dc1_dspsetup(),this.limi_01_dc2_dspsetup())}ip_04_init(){this.ip_04_lastValue=this.ip_04_value}ip_04_fillSigBuf(){if(this.ip_04_sigbuf){var t=this.sampleOffsetIntoNextAudioBuffer;t>=this.vs&&(t=this.vs-1);for(var a=this.ip_04_lastIndex;a<t;a++)this.ip_04_resetCount>0?(this.ip_04_sigbuf[a]=1,this.ip_04_resetCount--):this.ip_04_sigbuf[a]=this.ip_04_lastValue;this.ip_04_lastIndex=t}}ip_04_dspsetup(t){this.ip_04_setupDone&&!t||(this.ip_04_lastIndex=0,this.ip_04_setupDone=!0)}dim_01_bufferUpdated(){let t=this.dim(this.dim_01_buffer);this.dim_01_out_set(t),this.dim_01_outms_set(this.sampstoms(t))}phasor_02_ph_next(t,a){RNBO_UNUSED(a);const r=t*this.phasor_02_ph_conv;this.phasor_02_ph_currentPhase<0&&(this.phasor_02_ph_currentPhase=1+this.phasor_02_ph_currentPhase),this.phasor_02_ph_currentPhase>1&&(this.phasor_02_ph_currentPhase=this.phasor_02_ph_currentPhase-1);var _=this.phasor_02_ph_currentPhase;return this.phasor_02_ph_currentPhase+=r,_}phasor_02_ph_reset(){this.phasor_02_ph_currentPhase=0}phasor_02_ph_dspsetup(){this.phasor_02_ph_conv=1/this.sr}phasor_02_dspsetup(t){this.phasor_02_setupDone&&!t||(this.phasor_02_conv=1/this.samplerate(),this.phasor_02_setupDone=!0,this.phasor_02_ph_dspsetup())}numberobj_01_init(){this.getEngine().sendNumMessage(TAG(\"setup\"),TAG(\"number_obj-21\"),1,this._currentTime)}numberobj_01_getPresetValue(t){t.value=this.numberobj_01_value}numberobj_01_setPresetValue(t){stateIsEmpty(t)||this.numberobj_01_value_set(t.value)}param_02_getPresetValue(t){t.value=this.param_02_value}param_02_setPresetValue(t){stateIsEmpty(t)||this.param_02_value_set(t.value)}param_03_getPresetValue(t){t.value=this.param_03_value}param_03_setPresetValue(t){stateIsEmpty(t)||this.param_03_value_set(t.value)}ip_05_init(){this.ip_05_lastValue=this.ip_05_value}ip_05_fillSigBuf(){if(this.ip_05_sigbuf){var t=this.sampleOffsetIntoNextAudioBuffer;t>=this.vs&&(t=this.vs-1);for(var a=this.ip_05_lastIndex;a<t;a++)this.ip_05_resetCount>0?(this.ip_05_sigbuf[a]=1,this.ip_05_resetCount--):this.ip_05_sigbuf[a]=this.ip_05_lastValue;this.ip_05_lastIndex=t}}ip_05_dspsetup(t){this.ip_05_setupDone&&!t||(this.ip_05_lastIndex=0,this.ip_05_setupDone=!0)}param_04_getPresetValue(t){t.value=this.param_04_value}param_04_setPresetValue(t){stateIsEmpty(t)||this.param_04_value_set(t.value)}param_05_getPresetValue(t){t.value=this.param_05_value}param_05_setPresetValue(t){stateIsEmpty(t)||this.param_05_value_set(t.value)}data_01_init(){this.data_01_buffer.setWantsFill(!0)}data_01_evaluateSizeExpr(t,a){RNBO_UNUSED(a),RNBO_UNUSED(t);return 0}data_01_dspsetup(t){this.data_01_setupDone&&!t||(2==this.data_01_sizemode?(this.data_01_buffer=this.data_01_buffer.setSize(this.mstosamps(this.data_01_sizems)),updateDataRef(this,this.data_01_buffer)):3==this.data_01_sizemode&&(this.data_01_buffer=this.data_01_buffer.setSize(this.data_01_evaluateSizeExpr(this.samplerate(),this.vectorsize())),updateDataRef(this,this.data_01_buffer)),this.data_01_setupDone=!0)}data_01_bufferUpdated(){this.data_01_report()}data_01_report(){this.data_01_sizeout_set(this.data_01_buffer.getSize()),this.data_01_chanout_set(this.data_01_buffer.getChannels()),this.data_01_srout_set(this.data_01_buffer.getSampleRate())}data_02_init(){this.data_02_buffer.setWantsFill(!0)}data_02_evaluateSizeExpr(t,a){RNBO_UNUSED(a),RNBO_UNUSED(t);return 0}data_02_dspsetup(t){this.data_02_setupDone&&!t||(2==this.data_02_sizemode?(this.data_02_buffer=this.data_02_buffer.setSize(this.mstosamps(this.data_02_sizems)),updateDataRef(this,this.data_02_buffer)):3==this.data_02_sizemode&&(this.data_02_buffer=this.data_02_buffer.setSize(this.data_02_evaluateSizeExpr(this.samplerate(),this.vectorsize())),updateDataRef(this,this.data_02_buffer)),this.data_02_setupDone=!0)}data_02_bufferUpdated(){this.data_02_report()}data_02_report(){this.data_02_sizeout_set(this.data_02_buffer.getSize()),this.data_02_chanout_set(this.data_02_buffer.getChannels()),this.data_02_srout_set(this.data_02_buffer.getSampleRate())}data_03_init(){this.data_03_buffer.setWantsFill(!0)}data_03_evaluateSizeExpr(t,a){RNBO_UNUSED(a),RNBO_UNUSED(t);return 0}data_03_dspsetup(t){this.data_03_setupDone&&!t||(2==this.data_03_sizemode?(this.data_03_buffer=this.data_03_buffer.setSize(this.mstosamps(this.data_03_sizems)),updateDataRef(this,this.data_03_buffer)):3==this.data_03_sizemode&&(this.data_03_buffer=this.data_03_buffer.setSize(this.data_03_evaluateSizeExpr(this.samplerate(),this.vectorsize())),updateDataRef(this,this.data_03_buffer)),this.data_03_setupDone=!0)}data_03_bufferUpdated(){this.data_03_report()}data_03_report(){this.data_03_sizeout_set(this.data_03_buffer.getSize()),this.data_03_chanout_set(this.data_03_buffer.getChannels()),this.data_03_srout_set(this.data_03_buffer.getSampleRate())}param_06_getPresetValue(t){t.value=this.param_06_value}param_06_setPresetValue(t){stateIsEmpty(t)||this.param_06_value_set(t.value)}param_07_getPresetValue(t){t.value=this.param_07_value}param_07_setPresetValue(t){stateIsEmpty(t)||this.param_07_value_set(t.value)}param_08_getPresetValue(t){t.value=this.param_08_value}param_08_setPresetValue(t){stateIsEmpty(t)||this.param_08_value_set(t.value)}param_09_getPresetValue(t){t.value=this.param_09_value}param_09_setPresetValue(t){stateIsEmpty(t)||this.param_09_value_set(t.value)}midinotecontroller_01_sendnoteoff(t){let a=t-1;if(this.midinotecontroller_01_voice_state[a]!=MIDI_NoteState_Off){let r=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(t),this.midinotecontroller_01_midiout_set(MIDI_NoteOffMask|this.midinotecontroller_01_voice_channel[a]),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_voice_notenumber[a]),this.midinotecontroller_01_midiout_set(64),this.midinotecontroller_01_voice_state[a]=MIDI_NoteState_Off,this.midinotecontroller_01_target_set(r)}}midinotecontroller_01_sendpitchbend(t){if(t>=0&&t<8){let a=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(t+1);let r=this.midinotecontroller_01_channel_pitchbend[this.midinotecontroller_01_voice_channel[t]];this.midinotecontroller_01_midiout_set(MIDI_PitchBendMask|this.midinotecontroller_01_voice_channel[t]),this.midinotecontroller_01_midiout_set(127&r),this.midinotecontroller_01_midiout_set(r>>7&127),this.midinotecontroller_01_target_set(a)}}midinotecontroller_01_sendpressure(t){let a=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(t+1),this.midinotecontroller_01_midiout_set(MIDI_ChannelPressureMask|this.midinotecontroller_01_voice_channel[t]),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_channel_pressure[this.midinotecontroller_01_voice_channel[t]]),this.midinotecontroller_01_target_set(a)}midinotecontroller_01_sendtimbre(t){let a=this.midinotecontroller_01_currenttarget;this.midinotecontroller_01_target_set(t+1),this.midinotecontroller_01_midiout_set(MIDI_CCMask|this.midinotecontroller_01_voice_channel[t]),this.midinotecontroller_01_midiout_set(MIDI_CC_TimbreLSB),this.midinotecontroller_01_midiout_set(127&this.midinotecontroller_01_channel_timbre[this.midinotecontroller_01_voice_channel[t]]),this.midinotecontroller_01_midiout_set(MIDI_CCMask|this.midinotecontroller_01_voice_channel[t]),this.midinotecontroller_01_midiout_set(MIDI_CC_TimbreMSB),this.midinotecontroller_01_midiout_set(this.midinotecontroller_01_channel_timbre[this.midinotecontroller_01_voice_channel[t]]>>7&127),this.midinotecontroller_01_target_set(a)}midinotecontroller_01_sendallnotesoff(){for(let t=1;t<=8;t++)this.midinotecontroller_01_sendnoteoff(t)}globaltransport_getTempoAtSample(t){return RNBO_UNUSED(t),this.vs>0?this.globaltransport_tempo[t]:this.globaltransport_lastTempo}globaltransport_getTempo(){return this.globaltransport_getTempoAtSample(this.sampleOffsetIntoNextAudioBuffer)}globaltransport_getStateAtSample(t){return RNBO_UNUSED(t),this.vs>0?this.globaltransport_state[t]:this.globaltransport_lastState}globaltransport_getState(){return this.globaltransport_getStateAtSample(this.sampleOffsetIntoNextAudioBuffer)}globaltransport_getBeatTimeAtMsTime(t){for(var a=2;a<this.globaltransport_beatTimeChanges.length&&this.globaltransport_beatTimeChanges[a+1]<=t;)a+=2;a-=2;var r=this.globaltransport_beatTimeChanges[a];if(0==this.globaltransport_getState())return r;var _=t-this.globaltransport_beatTimeChanges[a+1];return r+this.mstobeats(_)}globaltransport_setTempo(t,a){if(a)this.processTempoEvent(this.currenttime(),t),this.globaltransport_notify=!0;else if(this.globaltransport_getTempo()!=t){const a=this.currenttime();return this.globaltransport_beatTimeChanges.push(this.globaltransport_getBeatTimeAtMsTime(a)),this.globaltransport_beatTimeChanges.push(a),fillSignal(this.globaltransport_tempo,this.vs,t,this.sampleOffsetIntoNextAudioBuffer),this.globaltransport_lastTempo=t,this.globaltransport_tempoNeedsReset=!0,!0}return!1}globaltransport_getBeatTime(){return this.globaltransport_getBeatTimeAtMsTime(this.currenttime())}globaltransport_setState(t,a){if(a)this.processTransportEvent(this.currenttime(),TransportState(t)),this.globaltransport_notify=!0;else if(this.globaltransport_getState()!=t)return fillSignal(this.globaltransport_state,this.vs,t,this.sampleOffsetIntoNextAudioBuffer),this.globaltransport_lastState=TransportState(t),this.globaltransport_stateNeedsReset=!0,0==t&&(this.globaltransport_beatTimeChanges.push(this.globaltransport_getBeatTime()),this.globaltransport_beatTimeChanges.push(this.currenttime())),!0;return!1}globaltransport_setBeatTime(t,a){if(a)return this.processBeatTimeEvent(this.currenttime(),t),this.globaltransport_notify=!0,!1;var r=!1;return this.globaltransport_getBeatTime()!=t&&(r=!0),this.globaltransport_beatTimeChanges.push(t),this.globaltransport_beatTimeChanges.push(this.currenttime()),r}globaltransport_getBeatTimeAtSample(t){var a=this.sampstoms(t);return this.globaltransport_getBeatTimeAtMsTime(this.currenttime()+a)}globaltransport_getTimeSignatureAtMsTime(t){for(var a=3;a<this.globaltransport_timeSignatureChanges.length&&this.globaltransport_timeSignatureChanges[a+2]<=t;)a+=3;return a-=3,[this.globaltransport_timeSignatureChanges[a],this.globaltransport_timeSignatureChanges[a+1]]}globaltransport_getTimeSignature(){return this.globaltransport_getTimeSignatureAtMsTime(this.currenttime())}globaltransport_getTimeSignatureAtSample(t){var a=this.sampstoms(t);return this.globaltransport_getTimeSignatureAtMsTime(this.currenttime()+a)}globaltransport_setTimeSignature(t,a,r){if(r)this.processTimeSignatureEvent(this.currenttime(),t,a),this.globaltransport_notify=!0;else{var _=this.globaltransport_getTimeSignature();if(_[0]!=t||_[1]!=a)return this.globaltransport_timeSignatureChanges.push(t),this.globaltransport_timeSignatureChanges.push(a),this.globaltransport_timeSignatureChanges.push(this.currenttime()),!0}return!1}globaltransport_advance(){this.globaltransport_tempoNeedsReset&&(fillSignal(this.globaltransport_tempo,this.vs,this.globaltransport_lastTempo),this.globaltransport_tempoNeedsReset=!1,this.globaltransport_notify&&this.getEngine().sendTempoEvent(this.globaltransport_lastTempo)),this.globaltransport_stateNeedsReset&&(fillSignal(this.globaltransport_state,this.vs,this.globaltransport_lastState),this.globaltransport_stateNeedsReset=!1,this.globaltransport_notify&&this.getEngine().sendTransportEvent(TransportState(this.globaltransport_lastState))),this.globaltransport_beatTimeChanges.length>2&&(this.globaltransport_beatTimeChanges[0]=this.globaltransport_beatTimeChanges[this.globaltransport_beatTimeChanges.length-2],this.globaltransport_beatTimeChanges[1]=this.globaltransport_beatTimeChanges[this.globaltransport_beatTimeChanges.length-1],this.globaltransport_beatTimeChanges.length=2,this.globaltransport_notify&&this.getEngine().sendBeatTimeEvent(this.globaltransport_beatTimeChanges[0])),this.globaltransport_timeSignatureChanges.length>3&&(this.globaltransport_timeSignatureChanges[0]=this.globaltransport_timeSignatureChanges[this.globaltransport_timeSignatureChanges.length-3],this.globaltransport_timeSignatureChanges[1]=this.globaltransport_timeSignatureChanges[this.globaltransport_timeSignatureChanges.length-2],this.globaltransport_timeSignatureChanges[2]=this.globaltransport_timeSignatureChanges[this.globaltransport_timeSignatureChanges.length-1],this.globaltransport_timeSignatureChanges.length=3,this.globaltransport_notify&&this.getEngine().sendTimeSignatureEvent(this.globaltransport_timeSignatureChanges[0],this.globaltransport_timeSignatureChanges[1])),this.globaltransport_notify=!1}globaltransport_dspsetup(t){this.globaltransport_setupDone&&!t||(fillSignal(this.globaltransport_tempo,this.vs,this.globaltransport_lastTempo),this.globaltransport_tempoNeedsReset=!1,fillSignal(this.globaltransport_state,this.vs,this.globaltransport_lastState),this.globaltransport_stateNeedsReset=!1,this.globaltransport_setupDone=!0)}stackprotect_check(){return this.stackprotect_count++,this.stackprotect_count>128&&(console.log(\"STACK OVERFLOW DETECTED - stopped processing branch !\"),!0)}updateTime(t){this._currentTime=t,this.sampleOffsetIntoNextAudioBuffer=rnbo_fround(this.msToSamps(t-this.getEngine().getCurrentTime(),this.sr)),this.sampleOffsetIntoNextAudioBuffer>=this.vs&&(this.sampleOffsetIntoNextAudioBuffer=this.vs-1),this.sampleOffsetIntoNextAudioBuffer<0&&(this.sampleOffsetIntoNextAudioBuffer=0)}assign_defaults(){}setEngineAndPatcher(t,a){this._engineInterface=t,this._parentPatcher=a}getEngine(){return this._engineInterface}getPatcher(){return this._parentPatcher}getTopLevelPatcher(){return this}}rnboObj=new RNBOPatcher;",
  "wasm": "",
  "wasmEncoding": "base64",
  "presets": [
    {
      "name": "untitled",
      "preset": {
        "__sps": {
          "p_obj-13": [
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {}
          ]
        },
        "attack": {
          "value": 0.114479768198727
        },
        "decay": {
          "value": 5000
        },
        "gain": {
          "value": 0
        },
        "grainDur": {
          "value": 100
        },
        "grainRate": {
          "value": 20
        },
        "injitter": {
          "value": 0
        },
        "release": {
          "value": 5.5871149613195
        },
        "sustain": {
          "value": 0.426470588235294
        },
        "trav": {
          "value": 100
        }
      }
    }
  ]
}